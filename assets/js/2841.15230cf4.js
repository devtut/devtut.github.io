(window.webpackJsonp=window.webpackJsonp||[]).push([[2841],{3248:function(e,t,a){"use strict";a.r(t);var n=a(31),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"virtual-environments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtual-environments"}},[e._v("#")]),e._v(" Virtual environments")]),e._v(" "),a("p",[e._v("A Virtual Environment is a tool to keep the dependencies required by different projects in separate places, by creating virtual Python environments for them. It solves the “Project X depends on version 1.x but, Project Y needs 4.x” dilemma, and keeps your global site-packages directory clean and manageable.")]),e._v(" "),a("p",[e._v("This helps isolate your environments for different projects from each other and from your system libraries.")]),e._v(" "),a("h2",{attrs:{id:"creating-and-using-a-virtual-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-and-using-a-virtual-environment"}},[e._v("#")]),e._v(" Creating and using a virtual environment")]),e._v(" "),a("p",[a("code",[e._v("virtualenv")]),e._v(" is a tool to build isolated Python environments. This program creates a folder which contains all the necessary executables to use the packages that a Python project would need.")]),e._v(" "),a("h3",{attrs:{id:"installing-the-virtualenv-tool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-virtualenv-tool"}},[e._v("#")]),e._v(" Installing the virtualenv tool")]),e._v(" "),a("p",[e._v("This is only required once. The "),a("code",[e._v("virtualenv")]),e._v(" program may be available through your distribution. On Debian-like distributions, the package is called "),a("code",[e._v("python-virtualenv")]),e._v(" or "),a("code",[e._v("python3-virtualenv")]),e._v(".")]),e._v(" "),a("p",[e._v("You can alternatively install "),a("code",[e._v("virtualenv")]),e._v(" using "),a("a",{attrs:{href:"https://stackoverflow.com/documentation/python/193/introduction-to-python/15322/installing-external-modules-using-pip",target:"_blank",rel:"noopener noreferrer"}},[e._v("pip"),a("OutboundLink")],1),e._v(":")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("$ pip install virtualenv\n\n")])])]),a("h3",{attrs:{id:"creating-a-new-virtual-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-new-virtual-environment"}},[e._v("#")]),e._v(" Creating a new virtual environment")]),e._v(" "),a("p",[e._v("This only required once per project. When starting a project for which you want to isolate dependencies, you can setup a new virtual environment for this project:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("$ virtualenv foo\n\n")])])]),a("p",[e._v("This will create a "),a("code",[e._v("foo")]),e._v(" folder containing tooling scripts and a copy of the "),a("code",[e._v("python")]),e._v(" binary itself. The name of the folder is not relevant. Once the virtual environment is created, it is self-contained and does not require further manipulation with the "),a("code",[e._v("virtualenv")]),e._v(" tool. You can now start using the virtual environment.")]),e._v(" "),a("h3",{attrs:{id:"activating-an-existing-virtual-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#activating-an-existing-virtual-environment"}},[e._v("#")]),e._v(" Activating an existing virtual environment")]),e._v(" "),a("p",[e._v("To "),a("strong",[e._v("activate")]),e._v(" a virtual environment, some shell magic is required so your Python is the one inside "),a("code",[e._v("foo")]),e._v(" instead of the system one. This is the purpose of the "),a("code",[e._v("activate")]),e._v(" file, that you must source into your current shell:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("$ source foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("bin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("activate\n\n")])])]),a("p",[e._v("Windows users should type:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("$ foo\\Scripts\\activate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("bat\n\n")])])]),a("p",[e._v("Once a virtual environment has been activated, the "),a("code",[e._v("python")]),e._v(" and "),a("code",[e._v("pip")]),e._v(" binaries and all scripts installed by third party modules are the ones inside "),a("code",[e._v("foo")]),e._v(". Particularly, all modules installed with "),a("code",[e._v("pip")]),e._v(" will be deployed to the virtual environment, allowing for a contained development environment. Activating the virtual environment should also add a prefix to your prompt as seen in the following commands.")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Installs 'requests' to foo only, not globally")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("$ pip install requests\n\n")])])]),a("h3",{attrs:{id:"saving-and-restoring-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#saving-and-restoring-dependencies"}},[e._v("#")]),e._v(" Saving and restoring dependencies")]),e._v(" "),a("p",[e._v("To save the modules that you have installed via "),a("code",[e._v("pip")]),e._v(", you can list all of those modules (and the corresponding versions) into a text file by using the "),a("code",[e._v("freeze")]),e._v(" command. This allows others to quickly install the Python modules needed for the application by using the install command. The conventional name for such a file is "),a("code",[e._v("requirements.txt")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("$ pip freeze "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" requirements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("txt\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("$ pip install "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("r requirements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("txt\n\n")])])]),a("p",[e._v("Please note that "),a("code",[e._v("freeze")]),e._v(" lists all the modules, including the transitive dependencies required by the top-level modules you installed manually. As such, you may prefer to "),a("a",{attrs:{href:"https://pip.pypa.io/en/stable/reference/pip_install/#example-requirements-file",target:"_blank",rel:"noopener noreferrer"}},[e._v("craft the "),a("code",[e._v("requirements.txt")]),e._v(" file by hand"),a("OutboundLink")],1),e._v(", by putting only the top-level modules you need.")]),e._v(" "),a("h3",{attrs:{id:"exiting-a-virtual-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exiting-a-virtual-environment"}},[e._v("#")]),e._v(" Exiting a virtual environment")]),e._v(" "),a("p",[e._v("If you are done working in the virtual environment, you can deactivate it to get back to your normal shell:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("$ deactivate\n\n")])])]),a("h3",{attrs:{id:"using-a-virtual-environment-in-a-shared-host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-a-virtual-environment-in-a-shared-host"}},[e._v("#")]),e._v(" Using a virtual environment in a shared host")]),e._v(" "),a("p",[e._v("Sometimes it's not possible to "),a("code",[e._v("$ source bin/activate")]),e._v(" a virtualenv, for example if you are using mod_wsgi in shared host or if you don't have access to a file system, like in Amazon API Gateway, or Google AppEngine. For those cases you can deploy the libraries you installed in your local virtualenv and patch your "),a("code",[e._v("sys.path")]),e._v(".")]),e._v(" "),a("p",[e._v("Luckly virtualenv ships with a script that updates both your "),a("code",[e._v("sys.path")]),e._v(" and your "),a("code",[e._v("sys.prefix")])]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" os\n\nmydir "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("realpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("__file__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nactivate_this "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" mydir "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/bin/activate_this.py'")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("execfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("activate_this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("dict")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("__file__"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("activate_this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n")])])]),a("p",[e._v("You should append these lines at the very beginning  of the file your server will execute.")]),e._v(" "),a("p",[e._v("This will find the "),a("code",[e._v("bin/activate_this.py")]),e._v(" that "),a("code",[e._v("virtualenv")]),e._v(" created file in the same dir you are executing and add your "),a("code",[e._v("lib/python2.7/site-packages")]),e._v(" to "),a("code",[e._v("sys.path")])]),e._v(" "),a("p",[e._v("If you are looking to use the "),a("code",[e._v("activate_this.py")]),e._v(" script, remember to deploy with, at least, the "),a("code",[e._v("bin")]),e._v(" and "),a("code",[e._v("lib/python2.7/site-packages")]),e._v(" directories and their content.")]),e._v(" "),a("h3",{attrs:{id:"built-in-virtual-environments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#built-in-virtual-environments"}},[e._v("#")]),e._v(" Built-in virtual environments")]),e._v(" "),a("p",[e._v("From Python 3.3 onwards, the "),a("a",{attrs:{href:"https://docs.python.org/3/library/venv.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("venv module"),a("OutboundLink")],1),e._v(" will create virtual environments. The "),a("code",[e._v("pyvenv")]),e._v(" command does not need installing separately:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("$ pyvenv foo\n$ source foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("bin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("activate\n\n")])])]),a("p",[e._v("or")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("$ python3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("m venv foo\n$ source foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("bin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("activate\n\n")])])]),a("h2",{attrs:{id:"specifying-specific-python-version-to-use-in-script-on-unix-linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specifying-specific-python-version-to-use-in-script-on-unix-linux"}},[e._v("#")]),e._v(" Specifying specific python version to use in script on Unix/Linux")]),e._v(" "),a("p",[e._v("In order to specify which version of python the Linux shell should use the first line of Python scripts can be a shebang line, which starts with "),a("code",[e._v("#!")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#!/usr/bin/python")]),e._v("\n\n")])])]),a("p",[e._v("If you are in a virtual environment, then "),a("code",[e._v("python myscript.py")]),e._v(" will use the Python from your virtual environment, but "),a("code",[e._v("./myscript.py")]),e._v(" will use the Python interpreter in the "),a("code",[e._v("#!")]),e._v(" line. To make sure the virtual environment's Python is used, change the first line to:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#!/usr/bin/env python")]),e._v("\n\n")])])]),a("p",[e._v("After specifying the shebang line, remember to give execute permissions to the script by doing:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("chmod "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v("x myscript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("py\n\n")])])]),a("p",[e._v("Doing this will allow you to execute the script by running "),a("code",[e._v("./myscript.py")]),e._v(" (or provide the absolute path to the script) instead of "),a("code",[e._v("python myscript.py")]),e._v(" or "),a("code",[e._v("python3 myscript.py")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"creating-a-virtual-environment-for-a-different-version-of-python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-virtual-environment-for-a-different-version-of-python"}},[e._v("#")]),e._v(" Creating a virtual environment for a different version of python")]),e._v(" "),a("p",[e._v("Assuming "),a("code",[e._v("python")]),e._v(" and "),a("code",[e._v("python3")]),e._v(" are both installed, it is possible to create a virtual environment for Python 3 even if "),a("code",[e._v("python3")]),e._v(" is not the default Python:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("virtualenv "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("p python3 foo\n\n")])])]),a("p",[e._v("or")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("virtualenv "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("python"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("python3 foo   \n\n")])])]),a("p",[e._v("or")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("python3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("m venv foo\n\n")])])]),a("p",[e._v("or")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("pyvenv foo\n\n")])])]),a("p",[e._v("Actually you can create virtual environment based on any version of working python of your system. You can check different working python under your "),a("code",[e._v("/usr/bin/")]),e._v(" or "),a("code",[e._v("/usr/local/bin/")]),e._v(" (In Linux) OR in "),a("code",[e._v("/Library/Frameworks/Python.framework/Versions/X.X/bin/")]),e._v(" (OSX), then figure out the name and use that in the "),a("code",[e._v("--python")]),e._v(" or "),a("code",[e._v("-p")]),e._v(" flag while creating virtual environment.")]),e._v(" "),a("h2",{attrs:{id:"making-virtual-environments-using-anaconda"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#making-virtual-environments-using-anaconda"}},[e._v("#")]),e._v(" Making virtual environments using Anaconda")]),e._v(" "),a("p",[e._v("A powerful alternative to "),a("code",[e._v("virtualenv")]),e._v(" is "),a("a",{attrs:{href:"https://www.continuum.io/downloads",target:"_blank",rel:"noopener noreferrer"}},[e._v("Anaconda"),a("OutboundLink")],1),e._v(" - a cross-platform, "),a("code",[e._v("pip")]),e._v("-like package manager bundled with features for quickly making and removing virtual environments. After installing Anaconda, here are some commands to get started:")]),e._v(" "),a("h3",{attrs:{id:"create-an-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-an-environment"}},[e._v("#")]),e._v(" Create an environment")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("conda create "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("envname"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" python"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("version"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n\n")])])]),a("p",[e._v("where "),a("code",[e._v("<envname>")]),e._v(" in an arbitrary name for your virtual environment, and "),a("code",[e._v("<version>")]),e._v(" is a specific Python version you wish to setup.")]),e._v(" "),a("h3",{attrs:{id:"activate-and-deactivate-your-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#activate-and-deactivate-your-environment"}},[e._v("#")]),e._v(" Activate and deactivate your environment")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Linux, Mac")]),e._v("\nsource activate "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("envname"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("                            \nsource deactivate\n\n")])])]),a("p",[e._v("or")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Windows")]),e._v("\nactivate "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("envname"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("                                    \ndeactivate\n\n")])])]),a("h3",{attrs:{id:"view-a-list-of-created-environments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#view-a-list-of-created-environments"}},[e._v("#")]),e._v(" View a list of created environments")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("conda env "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("list")]),e._v("\n\n")])])]),a("h3",{attrs:{id:"remove-an-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remove-an-environment"}},[e._v("#")]),e._v(" Remove an environment")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("conda env remove "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("envname"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n\n")])])]),a("p",[e._v("Find more commands and features in the official "),a("a",{attrs:{href:"http://conda.pydata.org/docs/using/envs.html#create-an-environment",target:"_blank",rel:"noopener noreferrer"}},[e._v("conda documentation"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"installing-packages-in-a-virtual-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-packages-in-a-virtual-environment"}},[e._v("#")]),e._v(" Installing packages in a virtual environment")]),e._v(" "),a("p",[e._v("Once your virtual environment has been activated, any package that you install will now be installed in the "),a("code",[e._v("virtualenv")]),e._v(" & not globally. Hence, new packages can be without needing root privileges.")]),e._v(" "),a("p",[e._v("To verify that the packages are being installed into the "),a("code",[e._v("virtualenv")]),e._v(" run the following command to check the path of the executable that is being used :")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("Virtualenv Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" $ which python\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("Virtualenv Directory"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("bin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("python\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Virtualenv Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" $ which pip\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("Virtualenv Directory"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("bin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("pip\n\n")])])]),a("p",[e._v("Any package then installed using pip will be installed in the "),a("code",[e._v("virtualenv")]),e._v(" itself in the following directory :")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("Virtualenv Directory"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("lib"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("python2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("site"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("packages"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("\n\n")])])]),a("p",[e._v("Alternatively, you may create a file listing the needed packages.")]),e._v(" "),a("p",[a("strong",[e._v("requirements.txt")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("requests"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2.10")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v(".0")]),e._v("\n\n")])])]),a("p",[e._v("Executing:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Install packages from requirements.txt")]),e._v("\npip install "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("r requirements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("txt\n\n")])])]),a("p",[e._v("will install version 2.10.0 of the package "),a("code",[e._v("requests")]),e._v(".")]),e._v(" "),a("p",[e._v("You can also get a list of the packages and their versions currently installed in the active virtual environment:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Get a list of installed packages")]),e._v("\npip freeze\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Output list of packages and versions into a requirement.txt file so you can recreate the virtual environment")]),e._v("\npip freeze "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" requirements"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("txt\n\n")])])]),a("p",[e._v("Alternatively, you do not have to activate your virtual environment each time you have to install a package. You can directly use the pip executable in the virtual environment directory to install packages.")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("Virtualenv Directory"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("bin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("pip install requests\n\n")])])]),a("p",[e._v("More information about using pip can be found on the "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/python/1781",target:"_blank",rel:"noopener noreferrer"}},[e._v("PIP topic"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Since you're installing without root in a virtual environment, this is "),a("strong",[e._v("not")]),e._v(" a global install, across the entire system - the installed package will only be available in the current virtual environment.")]),e._v(" "),a("h2",{attrs:{id:"managing-multiple-virtual-enviroments-with-virtualenvwrapper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#managing-multiple-virtual-enviroments-with-virtualenvwrapper"}},[e._v("#")]),e._v(" Managing multiple virtual enviroments with virtualenvwrapper")]),e._v(" "),a("p",[e._v("The "),a("a",{attrs:{href:"https://virtualenvwrapper.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("virtualenvwrapper")]),a("OutboundLink")],1),e._v(" utility simplifies working with virtual environments and is especially useful if you are dealing with many virtual environments/projects.")]),e._v(" "),a("p",[e._v("Instead of having to deal with the virtual environment directories yourself, "),a("code",[e._v("virtualenvwrapper")]),e._v(" manages them for you, by storing all virtual environments under a central directory ("),a("code",[e._v("~/.virtualenvs")]),e._v(" by default).")]),e._v(" "),a("h3",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),a("p",[e._v("Install "),a("code",[e._v("virtualenvwrapper")]),e._v(" with your system's package manager.")]),e._v(" "),a("p",[e._v("Debian/Ubuntu-based:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("apt"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("get install virtualenvwrapper\n\n")])])]),a("p",[e._v("Fedora/CentOS/RHEL:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("yum install python"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("virtualenvrwapper\n\n")])])]),a("p",[e._v("Arch Linux:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("pacman "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("S python"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("virtualenvwrapper\n\n")])])]),a("p",[e._v("Or install it from PyPI using "),a("code",[e._v("pip")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("pip install virtualenvwrapper\n\n")])])]),a("p",[e._v("Under Windows you can use either "),a("a",{attrs:{href:"https://pypi.python.org/pypi/virtualenvwrapper-win",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("virtualenvwrapper-win")]),a("OutboundLink")],1),e._v(" or "),a("a",{attrs:{href:"https://pypi.python.org/pypi/virtualenvwrapper-powershell",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("virtualenvwrapper-powershell")]),a("OutboundLink")],1),e._v(" instead.")]),e._v(" "),a("h3",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),a("p",[e._v("Virtual environments are created with "),a("code",[e._v("mkvirtualenv")]),e._v(". All arguments of the original "),a("code",[e._v("virtualenv")]),e._v(" command are accepted as well.")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("mkvirtualenv my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project\n\n")])])]),a("p",[e._v("or e.g.")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("mkvirtualenv "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("system"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("site"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("packages my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project\n\n")])])]),a("p",[e._v("The new virtual environment is automatically activated. In new shells you can enable the virtual environment with "),a("code",[e._v("workon")])]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("workon my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project\n\n")])])]),a("p",[e._v("The advantage of the "),a("code",[e._v("workon")]),e._v(" command compared to the traditional "),a("code",[e._v(". path/to/my-env/bin/activate")]),e._v(" is, that the "),a("code",[e._v("workon")]),e._v(" command will work in any directory; you don't have to remember in which directory the particular virtual environment of your project is stored.")]),e._v(" "),a("h3",{attrs:{id:"project-directories"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-directories"}},[e._v("#")]),e._v(" Project Directories")]),e._v(" "),a("p",[e._v("You can even specify a project directory during the creation of the virtual environment with the "),a("code",[e._v("-a")]),e._v(" option or later with the "),a("code",[e._v("setvirtualenvproject")]),e._v(" command.")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("mkvirtualenv "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("to"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project\n\n")])])]),a("p",[e._v("or")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("workon my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project\ncd "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("to"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project\nsetvirtualenvproject\n\n")])])]),a("p",[e._v("Setting a project will cause the "),a("code",[e._v("workon")]),e._v(" command to switch to the project automatically and enable the "),a("code",[e._v("cdproject")]),e._v(" command that allows you to change to project directory.")]),e._v(" "),a("p",[e._v("To see a list of all virtualenvs managed by virtualenvwrapper, use "),a("code",[e._v("lsvirtualenv")]),e._v(".")]),e._v(" "),a("p",[e._v("To remove a virtualenv, use "),a("code",[e._v("rmvirtualenv")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v("rmvirtualenv my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project\n\n")])])]),a("p",[e._v("Each virtualenv managed by virtualenvwrapper includes 4 empty bash scripts: "),a("code",[e._v("preactivate")]),e._v(", "),a("code",[e._v("postactivate")]),e._v(", "),a("code",[e._v("predeactivate")]),e._v(", and "),a("code",[e._v("postdeactivate")]),e._v(". These serve as hooks for executing bash commands at certain points in the life cycle of the virtualenv; for example, any commands in the "),a("code",[e._v("postactivate")]),e._v(" script will execute just after the virtualenv is activated. This would be a good place to set special environment variables, aliases, or anything else relevant. All 4 scripts are located under "),a("code",[e._v(".virtualenvs/<virtualenv_name>/bin/")]),e._v(".")]),e._v(" "),a("p",[e._v("For more details read the "),a("a",{attrs:{href:"https://virtualenvwrapper.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("virtualenvwrapper documentation"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"discovering-which-virtual-environment-you-are-using"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discovering-which-virtual-environment-you-are-using"}},[e._v("#")]),e._v(" Discovering which virtual environment you are using")]),e._v(" "),a("p",[e._v("If you are using the default "),a("code",[e._v("bash")]),e._v(" prompt on Linux, you should see the name of the virtual environment at the start of your prompt.")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" user@hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("~")]),e._v("$ which python\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("home"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("user"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("my"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("project"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("env"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("bin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("python\n\n")])])]),a("h2",{attrs:{id:"using-virtualenv-with-fish-shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-virtualenv-with-fish-shell"}},[e._v("#")]),e._v(" Using virtualenv with fish shell")]),e._v(" "),a("p",[e._v("Fish shell is friendlier yet you might face trouble while using with "),a("code",[e._v("virtualenv")]),e._v(" or "),a("code",[e._v("virtualenvwrapper")]),e._v(". Alternatively "),a("code",[e._v("virtualfish")]),e._v(" exists for the rescue. Just follow the below sequence to start using Fish shell with virtualenv.")]),e._v(" "),a("li",[e._v("\nInstall virtualfish to the global space\n"),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v(" sudo pip install virtualfish\n\n")])])])]),e._v(" "),a("li",[e._v("\nLoad the python module virtualfish during the fish shell startup\n"),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v(" $ echo "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"eval (python -m virtualfish)"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("fish"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("fish\n\n")])])])]),e._v(" "),a("li",[e._v("\nEdit this function `fish_prompt` by `$ funced fish_prompt --editor vim` and add the below lines and close the vim editor\n"),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("set")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("q VIRTUAL_ENV\n     echo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("s "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("set_color "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("b blue white"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"("')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("basename "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$VIRTUAL_ENV"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('")"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("set_color normal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('" "')]),e._v("\n end\n\n")])])]),a("p",[e._v("Note: If you are unfamiliar with vim, simply supply your favorite editor like this "),a("code",[e._v("$ funced fish_prompt --editor nano")]),e._v(" or "),a("code",[e._v("$ funced fish_prompt --editor gedit")])])]),a("p"),e._v(" "),a("li",[e._v("\nSave changes using `funcsave`\n"),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v(" funcsave fish_prompt\n\n")])])])]),e._v(" "),a("li",[e._v("\nTo create a new virtual environment use `vf new`\n"),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v(" vf new my_new_env "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Make sure $HOME/.virtualenv exists")]),e._v("\n\n")])])])]),e._v(" "),a("li",[e._v("\nIf you want create a new python3 environment specify it via `-p` flag\n"),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[e._v(" vf new "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("p python3 my_new_env\n\n")])])])]),e._v(" "),a("li",[e._v("\nTo switch between virtualenvironments use `vf deactivate` & `vf activate another_env`\n")]),e._v(" "),a("p",[e._v("Official Links:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/adambrenecki/virtualfish",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/adambrenecki/virtualfish"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://virtualfish.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://virtualfish.readthedocs.io/en/latest/"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"checking-if-running-inside-a-virtual-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checking-if-running-inside-a-virtual-environment"}},[e._v("#")]),e._v(" Checking if running inside a virtual environment")]),e._v(" "),a("p",[e._v("Sometimes the shell prompt doesn't display the name of the virtual environment and you want to be sure if you are in a virtual environment or not.")]),e._v(" "),a("p",[e._v("Run the python interpreter and try:")]),e._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" sys\nsys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prefix\nsys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("real_prefix\n\n")])])]),a("li",[e._v("\nOutside a virtual, environment `sys.prefix` will point to the system python installation and `sys.real_prefix` is not defined.\n")]),e._v(" "),a("li",[e._v("\nInside a virtual environment, `sys.prefix` will point to the virtual environment python installation and `sys.real_prefix` will point to the system python installation.\n")]),e._v(" "),a("p",[e._v("For virtual environments created using the standard library "),a("a",{attrs:{href:"https://docs.python.org/3/library/venv.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("venv module"),a("OutboundLink")],1),e._v(" there is no "),a("code",[e._v("sys.real_prefix")]),e._v(". Instead, check whether "),a("code",[e._v("sys.base_prefix")]),e._v(" is the same as "),a("code",[e._v("sys.prefix")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[e._v("#")]),e._v(" Remarks")]),e._v(" "),a("p",[e._v("Virtual environments are sufficiently useful that they probably should be used for every project. In particular, virtual environments allow you to:")]),e._v(" "),a("ol",[a("li",[e._v("Manage dependencies without requiring root access")]),e._v(" "),a("li",[e._v("Install different versions of the same dependency, for instance when working on different projects with varying requirements")]),e._v(" "),a("li",[e._v("Work with different python versions")])])])}),[],!1,null,null,null);t.default=s.exports}}]);