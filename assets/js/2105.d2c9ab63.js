(window.webpackJsonp=window.webpackJsonp||[]).push([[2105],{2513:function(t,s,e){"use strict";e.r(s);var a=e(31),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"delete"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" DELETE")]),t._v(" "),e("h2",{attrs:{id:"delete-with-where-clause"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete-with-where-clause"}},[t._v("#")]),t._v(" Delete with Where clause")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("table_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("field_one"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value_one'")]),t._v("\n\n")])])]),e("p",[t._v("This will delete all rows from the table where the contents of the "),e("code",[t._v("field_one")]),t._v(" for that row match 'value_one'")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("WHERE")]),t._v(" clause works in the same way as a select, so things like "),e("code",[t._v(">")]),t._v(", "),e("code",[t._v("<")]),t._v(", "),e("code",[t._v("<>")]),t._v(" or "),e("code",[t._v("LIKE")]),t._v(" can be used.")]),t._v(" "),e("p",[e("strong",[t._v("Notice:")]),t._v(" It is necessary to use conditional clauses (WHERE, LIKE) in delete query. If you do not use any conditional clauses then all data from that table will be deleted.")]),t._v(" "),e("h2",{attrs:{id:"delete-all-rows-from-a-table"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete-all-rows-from-a-table"}},[t._v("#")]),t._v(" Delete all rows from a table")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("This will delete everything, all rows from the table. It is the most basic example of the syntax. It also shows that "),e("code",[t._v("DELETE")]),t._v(" statements should really be used with extra care as they may empty a table, if the "),e("code",[t._v("WHERE")]),t._v(" clause is omitted.")]),t._v(" "),e("h2",{attrs:{id:"limiting-deletes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#limiting-deletes"}},[t._v("#")]),t._v(" LIMITing deletes")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("table_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("field_one"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value_one'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n")])])]),e("p",[t._v("This works in the same way as the 'Delete with Where clause' example, but it will stop the deletion once the limited number of rows have been removed.")]),t._v(" "),e("p",[t._v("If you are limiting rows for deletion like this, be aware that it will delete the first row which matches the criteria. It might not be the one you would expect, as the results can come back unsorted if they are not explicitly ordered.")]),t._v(" "),e("h2",{attrs:{id:"multi-table-deletes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#multi-table-deletes"}},[t._v("#")]),t._v(" Multi-Table Deletes")]),t._v(" "),e("p",[t._v("MySQL's "),e("code",[t._v("DELETE")]),t._v(" statement can use the "),e("code",[t._v("JOIN")]),t._v(" construct, allowing also to specify which tables to delete from. This is useful to avoid nested queries.\nGiven the schema:")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" people\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("    id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    gender "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" people "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gender"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Kathy'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'m'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Paul'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'m'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Kim'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" pets\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("    id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ownerId "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    color "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" pets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ownerId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("color"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rover'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'beige'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bubbles'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'purple'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Spot'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'black and white'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rover2'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'white'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("id")]),t._v(" "),e("th",[t._v("name")]),t._v(" "),e("th",[t._v("gender")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("Kathy")]),t._v(" "),e("td",[t._v("f")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("John")]),t._v(" "),e("td",[t._v("m")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("Paul")]),t._v(" "),e("td",[t._v("m")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("Kim")]),t._v(" "),e("td",[t._v("f")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("id")]),t._v(" "),e("th",[t._v("ownerId")]),t._v(" "),e("th",[t._v("name")]),t._v(" "),e("th",[t._v("color")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("Rover")]),t._v(" "),e("td",[t._v("beige")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("2")]),t._v(" "),e("td",[t._v("Bubbles")]),t._v(" "),e("td",[t._v("purple")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("Rover2")]),t._v(" "),e("td",[t._v("white")])])])]),t._v(" "),e("p",[t._v("If we want to remove Paul's pets, the statement")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" p2\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" pets p2\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" p2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people p1\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Paul'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("can be rewritten as:")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" p2    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- remove only rows from pets")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people p1\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" pets p2\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" p2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Paul'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[e("strong",[t._v("1 row deleted")]),e("br"),t._v("\nSpot is deleted from Pets")]),t._v(" "),e("p",[e("code",[t._v("p1")]),t._v(" and "),e("code",[t._v("p2")]),t._v(" are aliases for the table names, especially useful for long table names and ease of readability.")]),t._v(" "),e("p",[t._v("To remove both the person and the pet:")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- remove rows from both tables")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people p1\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" pets p2\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" p2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Paul'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[e("strong",[t._v("2 rows deleted")]),e("br"),t._v("\nSpot is deleted from Pets"),e("br"),t._v("\nPaul is deleted from People")]),t._v(" "),e("h3",{attrs:{id:"foreign-keys"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foreign-keys"}},[t._v("#")]),t._v(" foreign keys")]),t._v(" "),e("p",[t._v("When the DELETE statement involes tables with a foreing key constrain the optimizer may process the tables in an order that does not follow the relationship.\nAdding for example a foreign key to the definition of "),e("code",[t._v("pets")])]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" pets "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("fk_pets_2_people"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ownerId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" people"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASCADE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("the engine may try to delete the entries from "),e("code",[t._v("people")]),t._v(" before "),e("code",[t._v("pets")]),t._v(", thus causing the following error:")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[t._v("ERROR "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1451")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Cannot "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" a parent "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("row")]),t._v(": a "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" fails "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("pets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("pets_ibfk_1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("ownerId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("people"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("The solution in this case is to delete the row from "),e("code",[t._v("people")]),t._v(" and rely on "),e("code",[t._v("InnoDB")]),t._v("'s "),e("code",[t._v("ON DELETE")]),t._v(" capabilities to propagate the deletion:")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Paul'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[e("strong",[t._v("2 rows deleted")]),e("br"),t._v("\nPaul is deleted from People"),e("br"),t._v("\nSpot is deleted on cascade from Pets")]),t._v(" "),e("p",[t._v("Another solution is to temporarily disable the check on foreing keys:")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" foreign_key_checks "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" people p1 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" pets p2 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" p2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ownerId "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" p1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Paul'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" foreign_key_checks "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"basic-delete"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic-delete"}},[t._v("#")]),t._v(" Basic delete")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("myTable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("someColumn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'something'")]),t._v("\n\n")])])]),e("p",[t._v("The "),e("code",[t._v("WHERE")]),t._v(" clause is optional but without it all rows are deleted.")]),t._v(" "),e("h2",{attrs:{id:"delete-vs-truncate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete-vs-truncate"}},[t._v("#")]),t._v(" DELETE vs TRUNCATE")]),t._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRUNCATE")]),t._v(" tableName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("This will "),e("a",{attrs:{href:"http://stackoverflow.com/a/30997025/5006740",target:"_blank",rel:"noopener noreferrer"}},[t._v("delete"),e("OutboundLink")],1),t._v(" all the data and reset "),e("code",[t._v("AUTO_INCREMENT")]),t._v(" index. It's much faster than "),e("code",[t._v("DELETE FROM tableName")]),t._v(" on a huge dataset. It can be very useful during development/testing.")]),t._v(" "),e("p",[t._v("When you "),e("strong",[e("strong",[t._v("truncate")])]),t._v(" a table SQL server doesn't delete the data, it drops the table and recreates it, thereby deallocating the pages so there is a chance to recover the truncated data before the pages where overwritten.  (The space cannot immediately be recouped for "),e("code",[t._v("innodb_file_per_table=OFF")]),t._v(".)")]),t._v(" "),e("h2",{attrs:{id:"multi-table-delete"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#multi-table-delete"}},[t._v("#")]),t._v(" Multi-table DELETE")]),t._v(" "),e("p",[t._v("MySQL allows to specify from which table the matching rows must be deleted")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n   -- remove only the employees\n    DELETE e\n    FROM Employees e JOIN Department d ON e.department_id = d.department_id\n    WHERE d.name = 'Sales'\n\n")])])]),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- remove employees and department")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employees e "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Department d "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Sales'")]),t._v("\n\n")])])]),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- remove from all tables (in this case same as previous)")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employees e "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Department d "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Sales'")]),t._v("\n\n")])])]),e("h4",{attrs:{id:"syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),e("li",[t._v("DELETE [ LOW_PRIORITY ] [ QUICK ] [ IGNORE ] FROM table\n[WHERE conditions]\n[ORDER BY expression [ ASC | DESC ]]\n[LIMIT number_rows];   /// Syntax for delete row(s) from single table")]),t._v(" "),e("h4",{attrs:{id:"parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Parameter")]),t._v(" "),e("th",[t._v("Details")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("LOW_PRIORITY")]),t._v(" "),e("td",[t._v("If "),e("code",[t._v("LOW_PRIORITY")]),t._v(" is provided, the delete will be delayed until there are no processes reading from the table")])]),t._v(" "),e("tr",[e("td",[t._v("IGNORE")]),t._v(" "),e("td",[t._v("If "),e("code",[t._v("IGNORE")]),t._v(" is provided, all errors encountered during the delete are ignored")])]),t._v(" "),e("tr",[e("td",[t._v("table")]),t._v(" "),e("td",[t._v("The table from which you are going to delete records")])]),t._v(" "),e("tr",[e("td",[t._v("WHERE conditions")]),t._v(" "),e("td",[t._v("The conditions that must be met for the records to be deleted.      If no conditions are provided, then all records from the table will be deleted")])]),t._v(" "),e("tr",[e("td",[t._v("ORDER BY expression")]),t._v(" "),e("td",[t._v("If "),e("code",[t._v("ORDER BY")]),t._v(" is provided, records will be deleted in the given order")])]),t._v(" "),e("tr",[e("td",[t._v("LIMIT")]),t._v(" "),e("td",[t._v("It controls the maximum number of records to delete from the table. Given "),e("code",[t._v("number_rows")]),t._v(" will be deleted.")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);