(window.webpackJsonp=window.webpackJsonp||[]).push([[1075],{1483:function(e,t,s){"use strict";s.r(t);var n=s(31),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"conditional-statements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conditional-statements"}},[e._v("#")]),e._v(" Conditional statements")]),e._v(" "),s("h2",{attrs:{id:"the-if-statement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-if-statement"}},[e._v("#")]),e._v(" The If statement")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("If")]),e._v(" control statement allows different code to be executed depending upon the evaluation of a conditional (Boolean) statement. A conditional statement is one that evaluates to either "),s("code",[e._v("True")]),e._v(" or "),s("code",[e._v("False")]),e._v(", e.g. "),s("code",[e._v("x > 2")]),e._v(".")]),e._v(" "),s("p",[e._v("There are three patterns that can be used when implementing an "),s("code",[e._v("If")]),e._v(" statement, which are described below. Note that an "),s("code",[e._v("If")]),e._v(" conditional evaluation is always followed by a "),s("code",[e._v("Then")]),e._v(".")]),e._v(" "),s("p",[s("strong",[e._v("1. Evaluating one "),s("code",[e._v("If")]),e._v(" conditional statement and doing something if it is "),s("code",[e._v("True")])])]),e._v(" "),s("p",[s("strong",[e._v("Single line "),s("code",[e._v("If")]),e._v(" statement")])]),e._v(" "),s("p",[e._v("This is the shortest way to use an "),s("code",[e._v("If")]),e._v(" and it is useful when only one statement needs to be carried out upon  a "),s("code",[e._v("True")]),e._v(" evaluation. When using this syntax, all of the code must be on a single line. Do not include an "),s("code",[e._v("End If")]),e._v(" at the end of the line.")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" [Some condition "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("is")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("True")]),e._v("] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v(" ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" something]\n\n")])])]),s("p",[s("strong",[s("code",[e._v("If")]),e._v(" block")])]),e._v(" "),s("p",[e._v("If multiple lines of code need to be executed upon a "),s("code",[e._v("True")]),e._v(" evaluation, an "),s("code",[e._v("If")]),e._v(" block may be used.")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" [Some condition "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("is")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("True")]),e._v("] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v("\n  ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" some things]\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v("\n\n")])])]),s("p",[e._v("Note that, if a multi-line "),s("code",[e._v("If")]),e._v(" block is used, a corresponding "),s("code",[e._v("End If")]),e._v(" is required.")]),e._v(" "),s("p",[s("strong",[e._v("2. Evaluating one conditional "),s("code",[e._v("If")]),e._v(" statement, doing one thing if it is "),s("code",[e._v("True")]),e._v(" and doing something else if it is "),s("code",[e._v("False")])])]),e._v(" "),s("p",[s("strong",[e._v("Single line "),s("code",[e._v("If")]),e._v(", "),s("code",[e._v("Else")]),e._v(" statement")])]),e._v(" "),s("p",[e._v("This may be used if one statement is to be carried out upon a "),s("code",[e._v("True")]),e._v(" evaluation and a different statement is to be carried out on a "),s("code",[e._v("False")]),e._v(" evaluation. Be careful using this syntax, as it is often less clear to readers that there is an "),s("code",[e._v("Else")]),e._v(" statement. When using this syntax, all of the code must be on a single line. Do not include an "),s("code",[e._v("End If")]),e._v(" at the end of the line.")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" [Some condition "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("is")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("True")]),e._v("] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v(" ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" something] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Else")]),e._v(" ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" something "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v("]\n\n")])])]),s("p",[s("strong",[s("code",[e._v("If")]),e._v(", "),s("code",[e._v("Else")]),e._v(" block")])]),e._v(" "),s("p",[e._v("Use an "),s("code",[e._v("If")]),e._v(", "),s("code",[e._v("Else")]),e._v(" block to add clarity to your code, or if multiple lines of code need to be executed under either a "),s("code",[e._v("True")]),e._v(" or a "),s("code",[e._v("False")]),e._v(" evaluation.")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" [Some condition "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("is")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("True")]),e._v("] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v("\n   ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" some things]\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Else")]),e._v("\n   ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" some other things]\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v("\n\n")])])]),s("p",[e._v("Note that, if a multi-line "),s("code",[e._v("If")]),e._v(" block is used, a corresponding "),s("code",[e._v("End If")]),e._v(" is required.")]),e._v(" "),s("p",[s("strong",[e._v("3. Evaluating many conditional statements, when preceding statements are all "),s("code",[e._v("False")]),e._v(", and doing something different for each one")])]),e._v(" "),s("p",[e._v("This pattern is the most general use of "),s("code",[e._v("If")]),e._v(" and would be used when there are many non-overlapping conditions that require different treatment. Unlike the first two patterns, this case requires the use of an "),s("code",[e._v("If")]),e._v(" block, even if only one line of code will be executed for each condition.")]),e._v(" "),s("p",[s("strong",[s("code",[e._v("If")]),e._v(", "),s("code",[e._v("ElseIf")]),e._v(", "),s("code",[e._v("...")]),e._v(", "),s("code",[e._v("Else")]),e._v(" block")])]),e._v(" "),s("p",[e._v("Instead of having to create many "),s("code",[e._v("If")]),e._v(" blocks one below another, an "),s("code",[e._v("ElseIf")]),e._v(" may be used evaluate an extra condition. The "),s("code",[e._v("ElseIf")]),e._v(" is only evaluated if any preceding "),s("code",[e._v("If")]),e._v(" evaluation is "),s("code",[e._v("False")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" [Some condition "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("is")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("True")]),e._v("] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v("\n   ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" some thing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("]\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ElseIf")]),e._v(" [Some other condition "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("is")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("True")]),e._v("] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v("\n   ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" some different thing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("]\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Else")]),e._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'Everything above has evaluated to False")]),e._v("\n   ["),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Do")]),e._v(" some other thing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("]\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v("\n\n")])])]),s("p",[e._v("As many "),s("code",[e._v("ElseIf")]),e._v(" control statements may be included between an "),s("code",[e._v("If")]),e._v(" and an "),s("code",[e._v("End If")]),e._v(" as required. An "),s("code",[e._v("Else")]),e._v(" control statement is not required when using "),s("code",[e._v("ElseIf")]),e._v(" (although it is recommended), but if it is included, it must be the final control statement before the "),s("code",[e._v("End If")]),e._v(".")])])}),[],!1,null,null,null);t.default=a.exports}}]);