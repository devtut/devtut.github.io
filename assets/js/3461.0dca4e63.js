(window.webpackJsonp=window.webpackJsonp||[]).push([[3461],{3869:function(e,t,a){"use strict";a.r(t);var s=a(31),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"declaring-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#declaring-variables"}},[e._v("#")]),e._v(" Declaring variables")]),e._v(" "),a("h2",{attrs:{id:"declaring-and-assigning-a-variable-using-a-primitive-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#declaring-and-assigning-a-variable-using-a-primitive-type"}},[e._v("#")]),e._v(" Declaring and assigning a variable using a primitive type")]),e._v(" "),a("p",[e._v("Variables in Visual Basic are declared using the "),a("code",[e._v("Dim")]),e._v(" keyword. For example, this declares a new variable called "),a("code",[e._v("counter")]),e._v(" with the data type "),a("code",[e._v("Integer")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Dim")]),e._v(" counter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v("\n\n")])])]),a("p",[e._v("A variable declaration can also include an "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/76453kax.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("access modifier"),a("OutboundLink")],1),e._v(", such as "),a("code",[e._v("Public")]),e._v(", "),a("code",[e._v("Protected")]),e._v(", "),a("code",[e._v("Friend")]),e._v(", or "),a("code",[e._v("Private")]),e._v(". This works in conjunction with the variable's "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/1t0wsc67.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("scope"),a("OutboundLink")],1),e._v(" to determine its accessibility.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Access Modifier")]),e._v(" "),a("th",[e._v("Meaning")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/9dc6we3z.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Public"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("All types which can access the enclosing type")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/8050kawf.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Protected"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Only the enclosing class and those that inherit from it")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/08w05ey2.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Friend"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("All types in the same assembly that can access the enclosing type")])]),e._v(" "),a("tr",[a("td",[e._v("Protected Friend")]),e._v(" "),a("td",[e._v("The enclosing class and its inheritors, "),a("strong",[e._v("or")]),e._v(" the types in the same assembly that can access the enclosing class")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/wx059ey1.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Private"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Only the enclosing type")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/z2cty7t8.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Static"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Only on local variables and only initializes once.")])])])]),e._v(" "),a("p",[e._v("As a shorthand, the "),a("code",[e._v("Dim")]),e._v(" keyword can be replaced with the access modifier in the variable's declaration:")]),e._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" TotalItems "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" counter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v("\n\n")])])]),a("p",[e._v("The supported data types are outlined in the table below:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Type")]),e._v(" "),a("th",[e._v("Alias")]),e._v(" "),a("th",[e._v("Memory allocation")]),e._v(" "),a("th",[e._v("Example")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("SByte")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[e._v("1 byte")]),e._v(" "),a("td",[a("code",[e._v("Dim example As SByte = 10")])])]),e._v(" "),a("tr",[a("td",[e._v("Int16")]),e._v(" "),a("td",[e._v("Short")]),e._v(" "),a("td",[e._v("2 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Short = 10")])])]),e._v(" "),a("tr",[a("td",[e._v("Int32")]),e._v(" "),a("td",[e._v("Integer")]),e._v(" "),a("td",[e._v("4 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Integer = 10")])])]),e._v(" "),a("tr",[a("td",[e._v("Int64")]),e._v(" "),a("td",[e._v("Long")]),e._v(" "),a("td",[e._v("8 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Long = 10")])])]),e._v(" "),a("tr",[a("td",[e._v("Single")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[e._v("4 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Single = 10.95")])])]),e._v(" "),a("tr",[a("td",[e._v("Double")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[e._v("8 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Double = 10.95")])])]),e._v(" "),a("tr",[a("td",[e._v("Decimal")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[e._v("16 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Decimal = 10.95")])])]),e._v(" "),a("tr",[a("td",[e._v("Boolean")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[e._v("Dictated by implementing platform")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Boolean = True")])])]),e._v(" "),a("tr",[a("td",[e._v("Char")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[e._v("2 Bytes")]),e._v(" "),a("td",[a("code",[e._v('Dim example As Char = "A"C')])])]),e._v(" "),a("tr",[a("td",[e._v("String")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[a("img",{attrs:{src:"https://chart.googleapis.com/chart?cht=tx&chl=20%2B%5Cleft%5Clfloor%5Cfrac%7Blength%7D%7B2%7D%5Cright%5Crfloor*4bytes",alt:"formula"}}),a("a",{attrs:{href:"http://csharpindepth.com/Articles/General/Strings.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("source"),a("OutboundLink")],1)]),e._v(" "),a("td",[a("code",[e._v('Dim example As String = "Stack Overflow"')])])]),e._v(" "),a("tr",[a("td",[e._v("DateTime")]),e._v(" "),a("td",[e._v("Date")]),e._v(" "),a("td",[e._v("8 Bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Date = Date.Now")])])]),e._v(" "),a("tr",[a("td",[e._v("Byte")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[e._v("1 byte")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Byte = 10")])])]),e._v(" "),a("tr",[a("td",[e._v("UInt16")]),e._v(" "),a("td",[e._v("UShort")]),e._v(" "),a("td",[e._v("2 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As UShort = 10")])])]),e._v(" "),a("tr",[a("td",[e._v("UInt32")]),e._v(" "),a("td",[e._v("UInteger")]),e._v(" "),a("td",[e._v("4 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As UInteger = 10")])])]),e._v(" "),a("tr",[a("td",[e._v("UInt64")]),e._v(" "),a("td",[e._v("ULong")]),e._v(" "),a("td",[e._v("8 bytes")]),e._v(" "),a("td",[a("code",[e._v("Dim example As ULong = 10")])])]),e._v(" "),a("tr",[a("td",[e._v("Object")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[e._v("4 bytes 32 bit architecture, 8 bytes 64 bit architecture")]),e._v(" "),a("td",[a("code",[e._v("Dim example As Object = Nothing")])])])])]),e._v(" "),a("p",[e._v("There also exist data identifier and literal type characters usable in replacement for the textual type and or to force literal type:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Type (or Alias)")]),e._v(" "),a("th",[e._v("Identifier type character")]),e._v(" "),a("th",[e._v("Literal type character")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("Short")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[a("code",[e._v("example = 10S")])])]),e._v(" "),a("tr",[a("td",[e._v("Integer")]),e._v(" "),a("td",[a("code",[e._v("Dim example%")])]),e._v(" "),a("td",[a("code",[e._v("example = 10%")]),e._v(" or "),a("code",[e._v("example = 10I")])])]),e._v(" "),a("tr",[a("td",[e._v("Long")]),e._v(" "),a("td",[a("code",[e._v("Dim example&")])]),e._v(" "),a("td",[a("code",[e._v("example = 10&")]),e._v(" or "),a("code",[e._v("example = 10L")])])]),e._v(" "),a("tr",[a("td",[e._v("Single")]),e._v(" "),a("td",[a("code",[e._v("Dim example!")])]),e._v(" "),a("td",[a("code",[e._v("example = 10!")]),e._v(" or "),a("code",[e._v("example = 10F")])])]),e._v(" "),a("tr",[a("td",[e._v("Double")]),e._v(" "),a("td",[a("code",[e._v("Dim example#")])]),e._v(" "),a("td",[a("code",[e._v("example = 10#")]),e._v(" or "),a("code",[e._v("example = 10R")])])]),e._v(" "),a("tr",[a("td",[e._v("Decimal")]),e._v(" "),a("td",[a("code",[e._v("Dim example@")])]),e._v(" "),a("td",[a("code",[e._v("example = 10@")]),e._v(" or "),a("code",[e._v("example = 10D")])])]),e._v(" "),a("tr",[a("td",[e._v("Char")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[a("code",[e._v('example = "A"C')])])]),e._v(" "),a("tr",[a("td",[e._v("String")]),e._v(" "),a("td",[a("code",[e._v("Dim example$")])]),e._v(" "),a("td",[e._v("N/A")])]),e._v(" "),a("tr",[a("td",[e._v("UShort")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[a("code",[e._v("example = 10US")])])]),e._v(" "),a("tr",[a("td",[e._v("UInteger")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[a("code",[e._v("example = 10UI")])])]),e._v(" "),a("tr",[a("td",[e._v("ULong")]),e._v(" "),a("td",[e._v("N/A")]),e._v(" "),a("td",[a("code",[e._v("example = 10UL")])])])])]),e._v(" "),a("p",[e._v("The integral suffixes are also usable with hexadecimal (&H) or octal (&O) prefixes:"),a("br"),e._v(" "),a("code",[e._v("example = &H8000S")]),e._v(" or "),a("code",[e._v("example = &O77&")])]),e._v(" "),a("p",[e._v("Date(Time) objects can also be defined using literal syntax:"),a("br"),e._v(" "),a("code",[e._v("Dim example As Date = #7/26/2016 12:8 PM#")])]),e._v(" "),a("p",[e._v("Once a variable is declared it will exist within the "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/1t0wsc67.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Scope"),a("OutboundLink")],1),e._v(" of the containing type, "),a("code",[e._v("Sub")]),e._v(" or "),a("code",[e._v("Function")]),e._v(" declared, as an example:")]),e._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Function")]),e._v(" IncrementCounter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Dim")]),e._v(" counter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n    counter "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Return")]),e._v(" counter\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Function")]),e._v("\n\n")])])]),a("p",[e._v("The counter variable will only exist until the "),a("code",[e._v("End Function")]),e._v(" and then will be out of scope.  If this counter variable is needed outside of the function you will have to define it at class/structure or module level.")]),e._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Class")]),e._v(" ExampleClass\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" _counter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v("\n   \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Function")]),e._v(" IncrementCounter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v("\n       _counter "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Return")]),e._v(" _counter\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Function")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Class")]),e._v("\n\n")])])]),a("p",[e._v("Alternatively, you can use the "),a("code",[e._v("Static")]),e._v(" (not to be confused with "),a("code",[e._v("Shared")]),e._v(") modifier to allow a local variable to retain it's value between calls of its enclosing method:")]),e._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Function")]),e._v(" IncrementCounter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Static")]),e._v(" counter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n    counter "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Return")]),e._v(" counter\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Function")]),e._v("\n\n")])])]),a("h2",{attrs:{id:"levels-of-declaration-local-and-member-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#levels-of-declaration-local-and-member-variables"}},[e._v("#")]),e._v(" Levels of declaration – Local and Member variables")]),e._v(" "),a("p",[a("strong",[e._v("Local variables")]),e._v(" - Those declared within a procedure (subroutine or function) of a class (or other structure). In this example, "),a("code",[e._v("exampleLocalVariable")]),e._v(" is a local variable  declared within "),a("code",[e._v("ExampleFunction()")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Class")]),e._v(" ExampleClass1\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Function")]),e._v(" ExampleFunction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Dim")]),e._v(" exampleLocalVariable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Return")]),e._v(" exampleLocalVariable\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Function")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Class")]),e._v("\n\n")])])]),a("p",[e._v("The "),a("code",[e._v("Static")]),e._v(" keyword allows a local variable to be retained and keep its value after termination (where usually, local variables cease to exist when the containing procedure terminates).")]),e._v(" "),a("p",[e._v("In this example, the console is "),a("code",[e._v("024")]),e._v(". On each call to "),a("code",[e._v("ExampleSub()")]),e._v(" from "),a("code",[e._v("Main()")]),e._v(" the static variable retains the value it had at the end of the previous call:")]),e._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Module")]),e._v(" Module1\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        ExampleSub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        ExampleSub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        ExampleSub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" ExampleSub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Static")]),e._v(" exampleStaticLocalVariable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Write"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("exampleStaticLocalVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        exampleStaticLocalVariable "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Module")]),e._v("\n\n")])])]),a("p",[a("strong",[e._v("Member variables")]),e._v(" - Declared outside of any procedure, at the class (or other structure) level. They may be "),a("strong",[e._v("instance variables")]),e._v(", in which each instance of the containing class has its own distinct copy of that variable, or "),a("code",[e._v("Shared")]),e._v(" "),a("strong",[e._v("variables")]),e._v(", which exist as a single variable associated with the class itself, independent of any instance.")]),e._v(" "),a("p",[e._v("Here, "),a("code",[e._v("ExampleClass2")]),e._v(" contains two member variables. Each instance of the "),a("code",[e._v("ExampleClass2")]),e._v(" has an individual "),a("code",[e._v("ExampleInstanceVariable")]),e._v(" which can be accessed via the class reference. The shared variable "),a("code",[e._v("ExampleSharedVariable")]),e._v(" however is accessed using the class name:")]),e._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Module")]),e._v(" Module1\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Dim")]),e._v(" instance1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" ExampleClass4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("New")]),e._v(" ExampleClass4\n        instance1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ExampleInstanceVariable "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Foo"')]),e._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Dim")]),e._v(" instance2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" ExampleClass4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("New")]),e._v(" ExampleClass4\n        instance2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ExampleInstanceVariable "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Bar"')]),e._v("\n\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("instance1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ExampleInstanceVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("instance2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ExampleInstanceVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("ExampleClass4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ExampleSharedVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Class")]),e._v(" ExampleClass4\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" ExampleInstanceVariable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("String")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Shared")]),e._v(" ExampleSharedVariable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("String")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"FizzBuzz"')]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Class")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Module")]),e._v("\n\n")])])]),a("h2",{attrs:{id:"example-of-access-modifiers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-of-access-modifiers"}},[e._v("#")]),e._v(" Example of Access Modifiers")]),e._v(" "),a("p",[e._v("In the following example consider you have a solution hosting two projects: "),a("strong",[e._v("ConsoleApplication1")]),e._v(" and "),a("strong",[e._v("SampleClassLibrary")]),e._v(". The first project will have the classes "),a("strong",[e._v("SampleClass1")]),e._v(" and "),a("strong",[e._v("SampleClass2")]),e._v(". The second one will have "),a("strong",[e._v("SampleClass3")]),e._v(" and "),a("strong",[e._v("SampleClass4")]),e._v(". In other words we have two assemblies with two classes each. "),a("strong",[e._v("ConsoleApplication1")]),e._v(" has a reference to "),a("strong",[e._v("SampleClassLibrary")]),e._v(".")]),e._v(" "),a("p",[e._v("See how "),a("strong",[e._v("SampleClass1.MethodA")]),e._v(" interacts with other classes and methods.")]),e._v(" "),a("p",[e._v("SampleClass1.vb:")]),e._v(" "),a("p",[e._v("SampleClass2.vb:")]),e._v(" "),a("p",[e._v("SampleClass3.vb:")]),e._v(" "),a("p",[e._v("SampleClass4.vb:")]),e._v(" "),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[e._v("#")]),e._v(" Syntax")]),e._v(" "),a("ul",[a("li",[e._v("Public counter As Integer")]),e._v(" "),a("li",[e._v("Private _counter As Integer")]),e._v(" "),a("li",[e._v("Dim counter As Integer")])])])}),[],!1,null,null,null);t.default=r.exports}}]);