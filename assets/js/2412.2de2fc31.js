(window.webpackJsonp=window.webpackJsonp||[]).push([[2412],{2820:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"true-and-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#true-and-false"}},[t._v("#")]),t._v(" True and false")]),t._v(" "),a("h2",{attrs:{id:"list-of-true-and-false-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-of-true-and-false-values"}},[t._v("#")]),t._v(" List of true and false values")]),t._v(" "),a("div",{staticClass:"language-perl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" feature "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("qw( say )")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Numbers are true if they're not equal to 0.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0e7")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Strings are true if they're not empty.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Even if a string would be treated as 0 in numeric context, it's true if nonempty.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# The only exception is the string "0", which is false.')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# To force numeric context add 0 to the string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.0'")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0e0'")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0 but true'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0 whargarbl'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0 argarbl'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Things that become numbers in scalar context are treated as numbers.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@c")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@d")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Anything undefined is false.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undef")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# References are always true, even if they point at something false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@c")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("ul",[a("li",[t._v("undef # False")]),t._v(" "),a("li",[t._v("''    # Defined, False")]),t._v(" "),a("li",[t._v("0     # Defined, Has Length, False")]),t._v(" "),a("li",[t._v("'0'   # Defined, Has Length, False")])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v("Perl does not have a boolean data type, nor does it have any "),a("code",[t._v("true")]),t._v(" and "),a("code",[t._v("false")]),t._v(" keywords like many other languages. However, every scalar value will evaluate to true or false when evaluated in a boolean context (the condition in an if statement or a while loop, for example).")]),t._v(" "),a("h3",{attrs:{id:"the-following-values-are-considered-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-following-values-are-considered-false"}},[t._v("#")]),t._v(" The following values are considered false:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("''")]),t._v(", the empty string. This is what the built-in comparison operators return (e.g. "),a("code",[t._v("0 == 1")]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("0")]),t._v(", the number 0, even if you write it as 000 or 0.0")]),t._v(" "),a("li",[a("code",[t._v("'0'")]),t._v(", the string that contains a single 0 digit")]),t._v(" "),a("li",[a("code",[t._v("undef")]),t._v(", the undefined value")]),t._v(" "),a("li",[t._v("Objects that use "),a("a",{attrs:{href:"http://perldoc.perl.org/overload.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("overloading"),a("OutboundLink")],1),t._v(" to numify/stringify into false values, such as "),a("a",{attrs:{href:"http://search.cpan.org/%7Emakamaka/JSON-2.90/lib/JSON.pm#JSON::false",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("JSON::false")]),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"all-other-values-are-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#all-other-values-are-true"}},[t._v("#")]),t._v(" All other values are true:")]),t._v(" "),a("ul",[a("li",[t._v("any non-zero number such as "),a("code",[t._v("1")]),t._v(", "),a("code",[t._v("3.14")]),t._v(", "),a("a",{attrs:{href:"http://www.learning-perl.com/2015/05/perls-special-not-a-numbers/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("'NaN'")]),t._v(" or "),a("code",[t._v("'Inf'")]),a("OutboundLink")],1)]),a("li",[t._v("any string that is numerically 0 but not literally the string "),a("code",[t._v("'0'")]),t._v(", such as "),a("code",[t._v("'00'")]),t._v(", "),a("code",[t._v("'0e0'")]),t._v(", "),a("code",[t._v('"0\\n"')]),t._v(" and "),a("code",[t._v('"abc"')]),t._v("."),a("br"),t._v("\nIf you are "),a("strong",[t._v("intentionally")]),t._v(" returning a true numerically 0 value, prefer "),a("code",[t._v("'0E0'")]),t._v(" (used by well known modules) or "),a("code",[t._v("'0 but true'")]),t._v(" (used by Perl functions)")]),t._v(" "),a("li",[t._v("any other string that is not empty, such as "),a("code",[t._v("' '")]),t._v(", "),a("code",[t._v("'false'")])]),t._v(" "),a("li",[t._v("all references, even if they reference false values, such as "),a("code",[t._v("\\''")]),t._v(", "),a("code",[t._v("[]")]),t._v(", or "),a("code",[t._v("{}")])]),t._v(" "),a("li",[t._v("an array or hash of false values")])]),t._v(" "),a("h3",{attrs:{id:"the-following-operators-are-commonly-treated-to-return-a-boolean-in-scalar-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-following-operators-are-commonly-treated-to-return-a-boolean-in-scalar-context"}},[t._v("#")]),t._v(" The following operators are commonly treated to return a boolean in scalar context:")]),t._v(" "),a("li",[t._v("\n`@a` returns whether the array is empty or not\n")]),t._v(" "),a("li",[t._v("\n`%h` returns whether the hash is empty or not\n")]),t._v(" "),a("li",[t._v("\n`grep` returns whether any matching items were found or not\n")]),t._v(" "),a("li",[t._v("\n`@a = LIST` and `(LIST) = LIST` return whether the right-hand side LIST produced any scalars or not\n")])])}),[],!1,null,null,null);s.default=n.exports}}]);