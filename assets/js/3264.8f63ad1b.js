(window.webpackJsonp=window.webpackJsonp||[]).push([[3264],{3671:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"finding-duplicates-on-a-column-subset-with-detail"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finding-duplicates-on-a-column-subset-with-detail"}},[t._v("#")]),t._v(" Finding Duplicates on a Column Subset with Detail")]),t._v(" "),a("h2",{attrs:{id:"students-with-same-name-and-date-of-birth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#students-with-same-name-and-date-of-birth"}},[t._v("#")]),t._v(" Students with same name and date of birth")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" CTE "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StudentId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Fname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DOB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RowCnt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" StudentId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DateOfBirth "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" DOB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OVER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Partition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("By")]),t._v(" FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DateOfBirth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" RowCnt\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" tblStudent\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" CTE "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" RowCnt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" DOB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LName\n\n")])])]),a("p",[t._v("This example uses a Common Table Expression and a Window Function to show all duplicate rows (on a subset of columns) side by side.")]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("li",[t._v('\nTo select rows with out duplicates change the WHERE clause to "RowCnt = 1"\n')]),t._v(" "),a("li",[t._v("\nTo select one row from each set use Rank() instead of Sum() and change the outer WHERE clause to select rows with Rank() = 1\n")])])}),[],!1,null,null,null);s.default=e.exports}}]);