(window.webpackJsonp=window.webpackJsonp||[]).push([[2746],{3153:function(t,n,s){"use strict";s.r(n);var a=s(31),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"method-overriding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#method-overriding"}},[t._v("#")]),t._v(" Method Overriding")]),t._v(" "),s("h2",{attrs:{id:"basic-method-overriding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-method-overriding"}},[t._v("#")]),t._v(" Basic method overriding")]),t._v(" "),s("p",[t._v("Here is an example of basic overriding in Python (for the sake of clarity and compatibility with both Python 2 and 3, using "),s("a",{attrs:{href:"https://stackoverflow.com/documentation/python/419/classes/1402/new-style-vs-old-style-classes#t=20160723190241882605",target:"_blank",rel:"noopener noreferrer"}},[t._v("new style class"),s("OutboundLink")],1),t._v(" and "),s("code",[t._v("print")]),t._v(" with "),s("code",[t._v("()")]),t._v("):")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("introduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Parent"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Child"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    \np "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("introduce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("print_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("introduce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("print_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n$ python basic_override"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py \nHello!\nParent\nHello!\nChild\n\n")])])]),s("p",[t._v("When the "),s("code",[t._v("Child")]),t._v(" class is created, it inherits the methods of the "),s("code",[t._v("Parent")]),t._v(" class. This means that any methods that the parent class has, the child class will also have. In the example, the "),s("code",[t._v("introduce")]),t._v(" is defined for the "),s("code",[t._v("Child")]),t._v(" class because it is defined for "),s("code",[t._v("Parent")]),t._v(", despite not being defined explicitly in the class definition of "),s("code",[t._v("Child")]),t._v(".")]),t._v(" "),s("p",[t._v("In this example, the overriding occurs when "),s("code",[t._v("Child")]),t._v(" defines its own "),s("code",[t._v("print_name")]),t._v(" method. If this method was not declared, then "),s("code",[t._v("c.print_name()")]),t._v(" would have printed "),s("code",[t._v('"Parent"')]),t._v(". However, "),s("code",[t._v("Child")]),t._v(" has overriden the "),s("code",[t._v("Parent")]),t._v("'s definition of "),s("code",[t._v("print_name")]),t._v(", and so now upon calling "),s("code",[t._v("c.print_name()")]),t._v(", the word "),s("code",[t._v('"Child"')]),t._v(" is printed.")])])}),[],!1,null,null,null);n.default=e.exports}}]);