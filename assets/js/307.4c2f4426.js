(window.webpackJsonp=window.webpackJsonp||[]).push([[307],{715:function(t,s,e){"use strict";e.r(s);var a=e(31),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"supporting-screens-with-different-resolutions-sizes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#supporting-screens-with-different-resolutions-sizes"}},[t._v("#")]),t._v(" Supporting Screens With Different Resolutions, Sizes")]),t._v(" "),e("h2",{attrs:{id:"using-configuration-qualifiers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-configuration-qualifiers"}},[t._v("#")]),t._v(" Using configuration qualifiers")]),t._v(" "),e("p",[t._v("Android supports several configuration qualifiers that allow you to control how the system selects your alternative resources based on the characteristics of the current device screen. A configuration qualifier is a string that you can append to a resource directory in your Android project and specifies the configuration for which the resources inside are designed.")]),t._v(" "),e("p",[t._v("To use a configuration qualifier:")]),t._v(" "),e("ol",[e("li",[t._v("Create a new directory in your project's res/ directory and name it using the format: "),e("code",[t._v("<resources_name>-<qualifier>")]),t._v(". "),e("code",[t._v("<resources_name>")]),t._v(" is the standard resource name (such as drawable or layout).")]),t._v(" "),e("li",[e("code",[t._v("<qualifier>")]),t._v(" is a configuration qualifier, specifying the screen configuration for which these resources are to be used (such as hdpi or xlarge).")])]),t._v(" "),e("p",[t._v("For example, the following application resource directories provide different layout designs for different screen sizes and different drawables. Use the "),e("code",[t._v("mipmap/")]),t._v(" folders for launcher icons.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("res"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("layout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_layout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// layout for normal screen size ("default")')]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("layout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("large"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_layout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// layout for large screen size")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("layout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xlarge"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_layout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// layout for extra-large screen size")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("layout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xlarge"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("land"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_layout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xml  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// layout for extra-large in landscape orientation")]),t._v("\n\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("drawable"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("graphic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bitmap for medium-density")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("drawable"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("graphic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bitmap for high-density")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("drawable"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xhdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("graphic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bitmap for extra-high-density")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("drawable"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xxhdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("graphic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bitmap for extra-extra-high-density")]),t._v("\n\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mipmap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_icon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// launcher icon for medium-density")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mipmap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_icon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// launcher icon for high-density")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mipmap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xhdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_icon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// launcher icon for extra-high-density")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mipmap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xxhdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_icon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// launcher icon for extra-extra-high-density")]),t._v("\nres"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mipmap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xxxhdpi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_icon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// launcher icon for extra-extra-extra-high-density")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"converting-dp-and-sp-to-pixels"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#converting-dp-and-sp-to-pixels"}},[t._v("#")]),t._v(" Converting dp and sp to pixels")]),t._v(" "),e("p",[t._v("When you need to set a pixel value for something like "),e("code",[t._v("Paint.setTextSize")]),t._v(" but still want it be scaled based on the device, you can convert dp and sp values.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DisplayMetrics")]),t._v(" metrics "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSystem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDisplayMetrics")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" pixels "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypedValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyDimension")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypedValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("COMPLEX_UNIT_SP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metrics"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DisplayMetrics")]),t._v(" metrics "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSystem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDisplayMetrics")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" pixels "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypedValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyDimension")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypedValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("COMPLEX_UNIT_DIP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metrics"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("Alternatively, you can convert a dimension resource to pixels if you have a context to load the resource from.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("xml version"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),t._v(" encoding"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("resources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dimen name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"size_in_sp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("sp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dimen"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dimen name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"size_in_dp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12d")]),t._v("p"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dimen"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("resources"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the exact dimension specified by the resource")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" pixels "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDimension")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dimen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size_in_sp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" pixels "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDimension")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dimen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size_in_dp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the dimension specified by the resource for use as a size.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The value is rounded down to the nearest integer but is at least 1px.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pixels "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDimensionPixelSize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dimen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size_in_sp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pixels "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDimensionPixelSize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dimen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size_in_dp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the dimension specified by the resource for use as an offset.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The value is rounded down to the nearest integer and can be 0px.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pixels "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDimensionPixelOffset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dimen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size_in_sp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pixels "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDimensionPixelOffset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dimen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size_in_dp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"text-size-and-different-android-screen-sizes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#text-size-and-different-android-screen-sizes"}},[t._v("#")]),t._v(" Text size and different android screen sizes")]),t._v(" "),e("p",[t._v("Sometimes, it's better to have only three options")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\nstyle="@android:style/TextAppearance.Small"\n style="@android:style/TextAppearance.Medium"\n style="@android:style/TextAppearance.Large"\n\n')])])]),e("p",[t._v("Use small and large to differentiate from normal screen size.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextView")]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@+id/TextViewTopBarTitle"')]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("layout_width"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrap_content"')]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("layout_height"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrap_content"')]),t._v("\n        style"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@android:style/TextAppearance.Small"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),e("p",[t._v("For normal, you don't have to specify anything.")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextView")]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@+id/TextViewTopBarTitle"')]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("layout_width"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrap_content"')]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("layout_height"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrap_content"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),e("p",[t._v("Using this, you can avoid testing and specifying dimensions for different screen sizes.")]),t._v(" "),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),e("p",[e("strong",[t._v("Terms and concepts")])]),t._v(" "),e("blockquote"),t._v(" "),e("h3",[t._v("**Screen size**")]),t._v("\nActual physical size, measured as the screen's diagonal.  For simplicity, Android groups all actual screen sizes into  four generalized sizes: small, normal, large, and extra-large.\n"),e("h3",[t._v("**Screen density**")]),t._v('\nThe quantity of pixels within a physical area of the screen; usually referred to as dpi (dots per inch). For example, a "low" density screen has fewer pixels within a given physical area, compared to a "normal" or "high" density screen.  For simplicity, Android groups all actual screen densities into six generalized densities: low, medium, high, extra-high, extra-extra-high, and extra-extra-extra-high.\n'),e("h3",[t._v("**Orientation**")]),t._v(" "),e("p",[t._v("The orientation of the screen from the user's point of view. This is either landscape or portrait, meaning that the screen's aspect ratio is either wide or tall, respectively. Be aware that not only do different devices operate in different orientations by default, but the orientation can change at runtime when the user rotates the device.  Resolution  The total number of physical pixels on a screen. When adding support for multiple screens, applications do not work directly with resolution; applications should be concerned only with screen size and density, as specified by the generalized size and density groups.\nDensity-independent pixel (dp)  A virtual pixel unit that you should\nuse when defining UI layout, to express layout dimensions or position\nin a density-independent way.  The density-independent pixel is\nequivalent to one physical pixel on a 160 dpi screen, which is the\nbaseline density assumed by the system for a \"medium\" density screen.\nAt runtime, the system transparently handles any scaling of the dp\nunits, as necessary, based on the actual density of the screen in use.\nThe conversion of dp units to screen pixels is simple: px = dp * (dpi\n/ 160). For example, on a 240 dpi screen, 1 dp equals 1.5 physical\npixels. You should always use dp units when defining your\napplication's UI, to ensure proper display of your UI on screens with\ndifferent densities.")]),t._v(" "),e("hr"),t._v(" "),e("h3",[t._v("**Units**")]),t._v(" "),e("ul",[e("li",[e("h3",[t._v("**px**")]),t._v("\nPixels - corresponds to actual pixels on the screen.\n")]),t._v(" "),e("li",[e("h3",[t._v("**in**")]),t._v("\nInches - based on the physical size of the screen. 1 Inch = 2.54 centimeters\n")]),t._v(" "),e("li",[e("h3",[t._v("**mm**")]),t._v("\nMillimeters - based on the physical size of the screen.\n")]),t._v(" "),e("li",[e("h3",[t._v("**pt**")]),t._v("\nPoints - 1/72 of an inch based on the physical size of the screen.\n")]),t._v(" "),e("li",[e("h3",[t._v("**dp or dip**")]),t._v(" "),e("p",[t._v('Density-independent Pixels - an abstract unit that is based on the\nphysical density of the screen. These units are relative to a 160 dpi\nscreen, so one dp is one pixel on a 160 dpi screen. The ratio of\ndp-to-pixel will change with the screen density, but not necessarily\nin direct proportion. Note: The compiler accepts both "dip" and "dp",\nthough "dp" is more consistent with "sp".')])]),t._v(" "),e("li",[e("h3",[t._v("**sp**")]),t._v(" "),e("p",[t._v("Scale-independent Pixels - this is like the dp unit, but it is also scaled by the user's font size preference. It is recommend you use this unit when specifying\nfont sizes, so they will be adjusted for both the screen density and\nuser's preference. From Understanding Density Independence In Android:")])])]),t._v(" "),e("h3",{attrs:{id:"screen-density"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#screen-density"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Screen density")])]),t._v(" "),e("h3",{attrs:{id:"units"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#units"}},[t._v("#")]),t._v(" "),e("strong",[t._v("Units")])]),t._v(" "),e("li",[e("h3",[t._v("**px**")]),t._v("\nPixels - corresponds to actual pixels on the screen.\n")]),t._v(" "),e("li",[e("h3",[t._v("**in**")]),t._v("\nInches - based on the physical size of the screen. 1 Inch = 2.54 centimeters\n")]),t._v(" "),e("li",[e("h3",[t._v("**mm**")]),t._v("\nMillimeters - based on the physical size of the screen.\n")]),t._v(" "),e("li",[e("h3",[t._v("**pt**")]),t._v("\nPoints - 1/72 of an inch based on the physical size of the screen.\n")]),t._v(" "),e("li",[e("h3",[t._v("**dp or dip**")]),t._v(" "),e("p",[t._v('Density-independent Pixels - an abstract unit that is based on the\nphysical density of the screen. These units are relative to a 160 dpi\nscreen, so one dp is one pixel on a 160 dpi screen. The ratio of\ndp-to-pixel will change with the screen density, but not necessarily\nin direct proportion. Note: The compiler accepts both "dip" and "dp",\nthough "dp" is more consistent with "sp".')])]),t._v(" "),e("li",[e("h3",[t._v("**sp**")]),t._v(" "),e("p",[t._v("Scale-independent Pixels - this is like the dp unit, but it is also scaled by the user's font size preference. It is recommend you use this unit when specifying\nfont sizes, so they will be adjusted for both the screen density and\nuser's preference. From Understanding Density Independence In Android:")])]),t._v(" "),e("h3",{attrs:{id:"pt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pt"}},[t._v("#")]),t._v(" "),e("strong",[t._v("pt")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Unit")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Units Per Physical Inch")]),t._v(" "),e("th",[t._v("Density Independent")]),t._v(" "),e("th",[t._v("Same Physical Size On Every Screen")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("px")]),t._v(" "),e("td",[t._v("Pixels")]),t._v(" "),e("td",[t._v("Varies")]),t._v(" "),e("td",[t._v("No")]),t._v(" "),e("td",[t._v("No")])]),t._v(" "),e("tr",[e("td",[t._v("in")]),t._v(" "),e("td",[t._v("Inches")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Yes")])]),t._v(" "),e("tr",[e("td",[t._v("mm")]),t._v(" "),e("td",[t._v("Millimeters")]),t._v(" "),e("td",[t._v("25.4")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Yes")])]),t._v(" "),e("tr",[e("td",[t._v("pt")]),t._v(" "),e("td",[t._v("Points")]),t._v(" "),e("td",[t._v("72")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Yes")])]),t._v(" "),e("tr",[e("td",[t._v("dp")]),t._v(" "),e("td",[t._v("Density Independent Pixels")]),t._v(" "),e("td",[t._v("~160")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("No")])]),t._v(" "),e("tr",[e("td",[t._v("sp")]),t._v(" "),e("td",[t._v("Scale Independent Pixels")]),t._v(" "),e("td",[t._v("~160")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("No")])])])]),t._v(" "),e("p",[t._v("References:")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://developer.android.com/guide/practices/screens_support.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.android.com/guide/practices/screens_support.html"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://developer.android.com/guide/topics/resources/more-resources.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://developer.android.com/guide/topics/resources/more-resources.html"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);