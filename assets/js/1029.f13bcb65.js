(window.webpackJsonp=window.webpackJsonp||[]).push([[1029],{1437:function(t,s,n){"use strict";n.r(s);var a=n(31),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"system-reflection-emit-namespace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#system-reflection-emit-namespace"}},[t._v("#")]),t._v(" System.Reflection.Emit namespace")]),t._v(" "),n("h2",{attrs:{id:"creating-an-assembly-dynamically"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-an-assembly-dynamically"}},[t._v("#")]),t._v(" Creating an assembly dynamically")]),t._v(" "),n("div",{staticClass:"language-dotnet extra-class"},[n("pre",{pre:!0,attrs:{class:"language-dotnet"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("System"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reflection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("System"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Reflection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoAssemblyBuilder")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token return-type class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// An assembly consists of one or more modules, each of which")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// contains zero or more types. This code creates a single-module")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// assembly, the most common case. The module contains one type,")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// named "MyDynamicType", that has a private field, a property ')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// that gets and sets the private field, constructors that ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// initialize the private field, and a method that multiplies ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a user-supplied number by the private field value and returns")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the result. In C# the type might look like this:")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n        public class MyDynamicType\n        {\n            private int m_number;\n\n            public MyDynamicType() : this(42) {}\n            public MyDynamicType(int initNumber)\n            {\n                m_number = initNumber;\n            }\n\n            public int Number\n            {\n                get { return m_number; }\n                set { m_number = value; }\n            }\n\n            public int MyMethod(int multiplier)\n            {\n                return m_number * multiplier;\n            }\n        }\n        */")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AssemblyName")]),t._v(" aName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("AssemblyName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DynamicAssemblyExample"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AssemblyBuilder")]),t._v(" ab "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n            AppDomain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentDomain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineDynamicAssembly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                aName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                AssemblyBuilderAccess"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RunAndSave"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For a single-module assembly, the module name is usually")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the assembly name plus an extension.")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModuleBuilder")]),t._v(" mb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n            ab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineDynamicModule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" aName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('".dll"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeBuilder")]),t._v(" tb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyDynamicType"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             TypeAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Public"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add a private field of type int (Int32).")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FieldBuilder")]),t._v(" fbNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineField")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m_number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            FieldAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Private"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Next, we make a simple sealed method.")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodBuilder")]),t._v(" mbMyMethod "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyMethod"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Public"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ILGenerator")]),t._v(" il "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mbMyMethod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetILGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Load this - always the first argument of any instance method")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldfld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fbNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Load the integer argument")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Multiply the two numbers with no overflow checking")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Next, we build the property. This involves building the property itself, as well as the")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getter and setter methods.")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PropertyBuilder")]),t._v(" pbNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Name")]),t._v("\n            PropertyAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("None"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Type of the property")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Types of indices, if any")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodBuilder")]),t._v(" mbSetNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"set_Number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Name - setters are set_Property by convention")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Setter is a special method and we don't want it to appear to callers from C#")]),t._v("\n            MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PrivateScope "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HideBySig "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Public "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SpecialName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Setters don't return a value")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We have a single argument of type System.Int32")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// To generate the body of the method, we'll need an IL generator")]),t._v("\n        il "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mbSetNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetILGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Load this")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Load the new value")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stfld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fbNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Save the new value to this.m_number")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Finally, link the method to the setter of our property")]),t._v("\n        pbNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetSetMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mbSetNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodBuilder")]),t._v(" mbGetNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get_Number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PrivateScope "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HideBySig "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Public "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SpecialName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        il "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mbGetNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetILGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Load this")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldfld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fbNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Load the value of this.m_number")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return the value")]),t._v("\n\n        pbNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetGetMethod")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mbGetNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Finally, we add the two constructors.")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Constructor needs to call the constructor of the parent class, or another constructor in the same class")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConstructorBuilder")]),t._v(" intConstructor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineConstructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Public"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CallingConventions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Standard "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CallingConventions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HasThis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        il "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" intConstructor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetILGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Call"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetConstructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call parent's constructor")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// our int argument")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stfld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fbNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store argument in this.m_number")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" parameterlessConstructor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DefineConstructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            MethodAttributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Public"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CallingConventions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Standard "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CallingConventions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HasThis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        il "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parameterlessConstructor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetILGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldarg_0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ldc_I4_S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// load 42 as an integer constant")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Call"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" intConstructor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call this(42)")]),t._v("\n        il"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OpCodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// And make sure the type is created")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),t._v(" ourType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The types from the assembly can be used directly using reflection, or we can save the assembly to use as a reference")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")])]),t._v(" ourInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Activator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ourType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ourType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ourInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 42")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Save the assembly for use elsewhere. This is very useful for debugging - you can use e.g. ILSpy to look at the equivalent IL/C# code.")]),t._v("\n        ab"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Save")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"DynamicAssemblyExample.dll"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Using newly created type")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" myDynamicType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" myDynamicTypeInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Activator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myDynamicType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        Console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myDynamicTypeInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MyDynamicType")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" numberField "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myDynamicType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetField")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m_number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BindingFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NonPublic "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" BindingFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        numberField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SetValue "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myDynamicTypeInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        Console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numberField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myDynamicTypeInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);