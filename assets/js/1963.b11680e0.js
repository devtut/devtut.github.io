(window.webpackJsonp=window.webpackJsonp||[]).push([[1963],{2371:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mongodb-configure-a-replicaset-to-support-tls-ssl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-configure-a-replicaset-to-support-tls-ssl"}},[t._v("#")]),t._v(" MongoDB - Configure a ReplicaSet to support TLS/SSL")]),t._v(" "),a("p",[a("strong",[t._v("How to configure a ReplicaSet to support TLS/SSL?")])]),t._v(" "),a("p",[t._v("We will deploy a 3 Nodes ReplicaSet in your local environment and we will use a self-signed certificate. Do not use a self-signed certificate in PRODUCTION.")]),t._v(" "),a("p",[a("strong",[t._v("How to connect your Client to this ReplicaSet?")])]),t._v(" "),a("p",[t._v("We will connect a Mongo Shell.")]),t._v(" "),a("p",[a("strong",[t._v("A description of TLS/SSL, PKI (Public Key Infrastructure) certificates, and Certificate Authority is beyond the scope of this documentation.")])]),t._v(" "),a("h2",{attrs:{id:"how-to-configure-a-replicaset-to-support-tls-ssl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-configure-a-replicaset-to-support-tls-ssl"}},[t._v("#")]),t._v(" How to configure a ReplicaSet to support TLS/SSL?")]),t._v(" "),a("h3",{attrs:{id:"create-the-root-certificate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-the-root-certificate"}},[t._v("#")]),t._v(" Create the Root Certificate")]),t._v(" "),a("p",[t._v("The Root Certificate (aka CA File) will be used to sign and identify your certificate. To generate it, run the command below.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("openssl req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x509 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keyout ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key\n\n")])])]),a("p",[t._v("Keep the root certificate and its key carefully, both will be used to sign your certificates. The root certificate might be used by your client as well.")]),t._v(" "),a("h3",{attrs:{id:"generate-the-certificate-requests-and-the-private-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generate-the-certificate-requests-and-the-private-keys"}},[t._v("#")]),t._v(" Generate the Certificate Requests and the Private Keys")]),t._v(" "),a("p",[t._v("When generating the Certificate Signing Request (aka CSR), "),a("strong",[t._v("input the exact hostname (or IP) of your node in the Common Name (aka CN) field. The others fields must have exactly the same value.")]),t._v(" You might need to modify your "),a("strong",[t._v("/etc/hosts")]),t._v(" file.")]),t._v(" "),a("p",[t._v("The commands below will generate the CSR files and the RSA Private Keys (4096 bits).")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("openssl req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("newkey rsa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sha256 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keyout mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr\nopenssl req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("newkey rsa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sha256 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keyout mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr\nopenssl req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("newkey rsa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sha256 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keyout mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr\n\n")])])]),a("p",[a("strong",[t._v("You must generate one CSR for each node of your ReplicaSet. Remember that the Common Name is not the same from one node to another. Don't base multiple CSRs on the same Private Key.")])]),t._v(" "),a("p",[t._v("You must now have 3 CSRs and 3 Private Keys.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key\nmongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr\n\n")])])]),a("h3",{attrs:{id:"sign-your-certificate-requests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sign-your-certificate-requests"}},[t._v("#")]),t._v(" Sign your Certificate Requests")]),t._v(" "),a("p",[t._v("Use the CA File (ca.pem) and its Private Key (ca.key) generated previously to sign each Certificate Request by running the commands below.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("openssl x509 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CA")]),t._v(" ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("CAkey ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("set_serial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt\nopenssl x509 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CA")]),t._v(" ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("CAkey ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("set_serial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt\nopenssl x509 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CA")]),t._v(" ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("CAkey ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("set_serial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt\n\n")])])]),a("p",[a("strong",[t._v("You must sign each CSR.")])]),t._v(" "),a("p",[t._v("Your must now have 3 CSRs, 3 Private Keys and 3 self-signed Certificates. Only the Private Keys and the Certificates will be used by MongoDB.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key\nmongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr\nmongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt\n\n")])])]),a("p",[a("strong",[t._v("Each certificate corresponds to one node. Remember carefully which CN / hostname your gave to each CSR.")])]),t._v(" "),a("h3",{attrs:{id:"concat-each-node-certificate-with-its-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concat-each-node-certificate-with-its-key"}},[t._v("#")]),t._v(" Concat each Node Certificate with its key")]),t._v(" "),a("p",[t._v("Run the commands below to concat each Node Certificate with its key in one file (MongoDB requirement).")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("cat mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\ncat mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\ncat mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n\n")])])]),a("p",[t._v("Your must now have 3 PEM files.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n\n")])])]),a("h3",{attrs:{id:"deploy-your-replicaset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-your-replicaset"}},[t._v("#")]),t._v(" Deploy your ReplicaSet")]),t._v(" "),a("p",[t._v("We will assume that your pem files are located in your current folder as well as data/data1, data/data2 and data/data3.")]),t._v(" "),a("p",[t._v("Run the commands below to deploy your 3 Nodes ReplicaSet listening on port 27017, 27018 and 27019.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mongod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data_1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet rs0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslMode requireSSL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslPEMKeyFile mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\nmongod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data_2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet rs0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27018")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslMode requireSSL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslPEMKeyFile mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\nmongod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data_3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet rs0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27019")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslMode requireSSL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslPEMKeyFile mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n\n")])])]),a("p",[t._v("You now have a 3 Nodes ReplicaSet deployed on your local environment and all their transactions are encrypted. You cannot connect to this ReplicaSet without using TLS.")]),t._v(" "),a("h3",{attrs:{id:"deploy-your-replicaset-for-mutual-ssl-mutual-trust"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-your-replicaset-for-mutual-ssl-mutual-trust"}},[t._v("#")]),t._v(" Deploy your ReplicaSet for Mutual SSL / Mutual Trust")]),t._v(" "),a("p",[t._v("To force your client to provide a Client Certificate (Mutual SSL), you must add the CA File when running your instances.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mongod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data_1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet rs0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslMode requireSSL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslPEMKeyFile mongodb_node_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslCAFile ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\nmongod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data_2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet rs0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27018")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslMode requireSSL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslPEMKeyFile mongodb_node_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslCAFile ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\nmongod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data_3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet rs0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27019")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslMode requireSSL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslPEMKeyFile mongodb_node_3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslCAFile ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n\n")])])]),a("p",[t._v("You now have a 3 Nodes ReplicaSet deployed on your local environment and all their transactions are encrypted. You cannot connect to this ReplicaSet without using TLS or without providing a Client Certificate trusted by your CA.")]),t._v(" "),a("h2",{attrs:{id:"how-to-connect-your-client-mongo-shell-to-a-replicaset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-connect-your-client-mongo-shell-to-a-replicaset"}},[t._v("#")]),t._v(" How to connect your Client (Mongo Shell) to a ReplicaSet?")]),t._v(" "),a("h3",{attrs:{id:"no-mutual-ssl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#no-mutual-ssl"}},[t._v("#")]),t._v(" No Mutual SSL")]),t._v(" "),a("p",[t._v('In this example, we might use the CA File (ca.pem) that you generated during the "'),a("strong",[t._v("How to configure a ReplicaSet to support TLS/SSL?")]),t._v('" section. We will assume that the CA file is located in your current folder.')]),t._v(" "),a("p",[t._v("We will assume that your 3 nodes are running on mongo1:27017, mongo2:27018 and mongo3:27019. (You might need to modify your "),a("strong",[t._v("/etc/hosts")]),t._v(" file.)")]),t._v(" "),a("p",[t._v("From MongoDB 3.2.6, if your CA File is registered in your Operating System Trust Store, you can connect to your ReplicaSet without providing the CA File.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mongo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("ssl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("host rs0"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mongo1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mongo2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27018")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mongo3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27019")]),t._v("\n\n")])])]),a("p",[t._v("Otherwise you must provide the CA File.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mongo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("ssl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslCAFile ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("host rs0"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mongo1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mongo2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27018")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mongo3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27019")]),t._v("\n\n")])])]),a("p",[t._v("You are now connected to your ReplicaSet and all the transactions between your Mongo Shell and your ReplicaSet are encrypted.")]),t._v(" "),a("h3",{attrs:{id:"with-mutual-ssl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with-mutual-ssl"}},[t._v("#")]),t._v(" With Mutual SSL")]),t._v(" "),a("p",[t._v("If your ReplicaSet asks for a Client Certificate, you must provide one signed by the CA used by the ReplicaSet Deployment.\nThe steps to generate the Client Certificate are almost the same as the ones to generate the Server Certificate.")]),t._v(" "),a("p",[t._v("Indeed, you just need to modify the Common Name Field during the CSR creation.\nInstead of providing 1 Node Hostname in the Common Name Field, "),a("strong",[t._v("you need to provide all the ReplicaSet Hostnames separated by a comma")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("openssl req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("newkey rsa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sha256 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keyout mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\nCommon "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" server "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FQDN")]),t._v(" or "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("YOUR")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" mongo1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mongo2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mongo3\n\n")])])]),a("p",[t._v("You might face the Common Name size limitation if the Common Name field is too long (more than 64 bytes long). To bypass this limitation, you must use the SubjectAltName when generating the CSR.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("openssl req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("nodes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("newkey rsa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sha256 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keyout mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\ncat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EOF")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault_bits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v("\nprompt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" no\ndefault_md "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sha256\nreq_extensions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req_ext\ndistinguished_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dn\n \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" dn "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" req_ext "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nsubjectAltName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @alt_names\n \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" alt_names "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mongo1\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mongo2\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mongo3\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EOF")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("Then you sign the CSR using the CA certificate and key.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("openssl x509 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("csr  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CA")]),t._v(" ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("CAkey ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("set_serial "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt\n\n")])])]),a("p",[t._v("Finally, you concat the key and the signed certificate.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("cat mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n\n")])])]),a("p",[t._v("To connect to your ReplicaSet, you can now provide the newly generated Client Certificate.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("mongo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("ssl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslCAFile ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("host rs0"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mongo1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mongo2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27018")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mongo3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27019")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("sslPEMKeyFile mongodb_client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n\n")])])]),a("p",[t._v("You are now connected to your ReplicaSet and all the transactions between your Mongo Shell and your ReplicaSet are encrypted.")])])}),[],!1,null,null,null);s.default=n.exports}}]);