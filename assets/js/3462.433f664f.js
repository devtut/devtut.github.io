(window.webpackJsonp=window.webpackJsonp||[]).push([[3462],{3870:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dictionaries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dictionaries"}},[t._v("#")]),t._v(" Dictionaries")]),t._v(" "),a("p",[t._v("A dictionary represents a collection of keys and values.  See "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/xfhwa508(v=vs.110).aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("MSDN Dictionary(Tkey, TValue) Class"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"create-a-dictionary-filled-with-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-dictionary-filled-with-values"}},[t._v("#")]),t._v(" Create a dictionary filled with values")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" extensions "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" Dictionary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("_")]),t._v("\n  from "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"notepad"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bmp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paint"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"winword"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("This creates a dictionary and immediately fills it with three KeyValuePairs.")]),t._v(" "),a("p",[t._v("You can also add new values later on by using the Add method:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[t._v("extensions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"png"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paint"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("Note that the key (the first parameter) needs to be unique in the dictionary, otherwise an Exception will be thrown.")]),t._v(" "),a("h2",{attrs:{id:"loop-through-a-dictionary-and-print-all-entries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loop-through-a-dictionary-and-print-all-entries"}},[t._v("#")]),t._v(" Loop through a dictionary and print all entries")]),t._v(" "),a("p",[t._v("Each pair in the dictionary is an instance of "),a("code",[t._v("KeyValuePair")]),t._v(" with the same type parameters as the Dictionary. When you loop through the dictionary with "),a("code",[t._v("For Each")]),t._v(", each iteration will give you one of the Key-Value Pairs stored in the dictionary.")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" kvp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" KeyValuePair"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" currentDictionary\n  Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{0}: {1}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kvp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kvp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"getting-a-dictionary-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-a-dictionary-value"}},[t._v("#")]),t._v(" Getting a dictionary value")]),t._v(" "),a("p",[t._v("You can get the value of an entry in the dictionary using the 'Item' property:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" extensions "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" Dictionary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" From "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"notepad"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bmp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paint"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"winword"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" program "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" extensions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'will be "notepad"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' alternative syntax as Item is the default property (a.k.a. indexer)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" program "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" extensions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'will be "notepad"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' other alternative syntax using the (rare)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' dictionary member access operator (a.k.a. bang operator)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" program "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" extensions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("txt "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'will be "notepad"')]),t._v("\n\n")])])]),a("p",[t._v("If the key is not present in the dictionary, a KeyNotFoundException will be thrown.")]),t._v(" "),a("h2",{attrs:{id:"checking-for-key-already-in-dictionary-data-reduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checking-for-key-already-in-dictionary-data-reduction"}},[t._v("#")]),t._v(" Checking for key already in dictionary - data reduction")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("ConstainsKey")]),t._v(" method is the way to know if a key already exists in the Dictionary.")]),t._v(" "),a("p",[t._v("This come in handy for data reduction. In the sample below, each time we encountner a new word, we add it as a key in the dictionary, else we increment the counter for this specific word.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\nDim dic As IDictionary(Of String, Integer) = New Dictionary(Of String, Integer)\n\n Dim words As String() = Split(<big text source>," ", -1, CompareMethod.Binary)\n\n For Each str As String In words\n     If dic.ContainsKey(str) Then\n         dic(str) += 1\n     Else\n         dic.Add(str, 1)\n     End If\n Next\n\n')])])]),a("p",[t._v("XML reduction example : getting all the child nodes names and occurence in an branch of an XML document")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" nodes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" IDictionary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" Dictionary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" xmlsrc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" XmlDocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nxmlsrc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LoadXml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any text stream source"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" xn "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" XmlNode "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" xmlsrc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstChild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ChildNodes "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'selects the proper parent")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ContainsKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Else")]),t._v("\n        nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);