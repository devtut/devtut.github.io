(window.webpackJsonp=window.webpackJsonp||[]).push([[2820],{3228:function(t,s,e){"use strict";e.r(s);var a=e(31),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"the-base64-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-base64-module"}},[t._v("#")]),t._v(" The base64 Module")]),t._v(" "),e("p",[t._v("Base 64 encoding represents a common scheme for encoding binary into ASCII string format using radix 64. The base64 module is part of the standard library, which means it installs along with Python. Understanding of bytes and strings is critical to this topic and can be reviewed "),e("a",{attrs:{href:"https://goo.gl/N4qIYd",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(". This topic explains how to use the various features and number bases of the base64 module.")]),t._v(" "),e("h2",{attrs:{id:"encoding-and-decoding-base64"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#encoding-and-decoding-base64"}},[t._v("#")]),t._v(" Encoding and Decoding Base64")]),t._v(" "),e("p",[t._v("To include the base64 module in your script, you must import it first:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base64\n\n")])])]),e("p",[t._v("The base64 encode and decode functions both require a "),e("a",{attrs:{href:"https://docs.python.org/3/glossary.html#term-bytes-like-object",target:"_blank",rel:"noopener noreferrer"}},[t._v("bytes-like object"),e("OutboundLink")],1),t._v(". To get our string into bytes, we must encode it using Python's built in encode function. Most commonly, the "),e("code",[t._v("UTF-8")]),t._v(" encoding is used, however a full list of these standard encodings (including languages with different characters) can be found "),e("a",{attrs:{href:"https://docs.python.org/3/library/codecs.html#standard-encodings",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(" in the official Python Documentation. Below is an example of encoding a string into bytes:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("The output of the last line would be:")]),t._v(" "),e("p",[e("code",[t._v("b'Hello World!'")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("b")]),t._v(" prefix is used to denote the value is a bytes object.")]),t._v(" "),e("p",[t._v("To Base64 encode these bytes, we use the "),e("code",[t._v("base64.b64encode()")]),t._v(" function:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base64\ns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ne "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b64encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("That code would output the following:")]),t._v(" "),e("p",[e("code",[t._v("b'SGVsbG8gV29ybGQh'")])]),t._v(" "),e("p",[t._v("which is still in the bytes object. To get a string out of these bytes, we can use Python's "),e("code",[t._v("decode()")]),t._v(" method with the "),e("code",[t._v("UTF-8")]),t._v(" encoding:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base64\ns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ne "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b64encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("The output would then be:")]),t._v(" "),e("p",[e("code",[t._v("SGVsbG8gV29ybGQh")])]),t._v(" "),e("p",[t._v("If we wanted to encode the string and then decode we could use the "),e("code",[t._v("base64.b64decode()")]),t._v(" method:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base64\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Creating a string")]),t._v("\ns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the string into bytes")]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Base64 Encode the bytes")]),t._v("\ne "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b64encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the Base64 bytes to string")]),t._v("\ns1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Printing Base64 encoded string")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Base64 Encoded:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the Base64 encoded string into bytes")]),t._v("\nb1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the Base64 bytes")]),t._v("\nd "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b64decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the bytes to string")]),t._v("\ns2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("As you may  have expected, the output would be the original string:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("Base64 Encoded"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SGVsbG8gV29ybGQh\nHello World!\n\n")])])]),e("h2",{attrs:{id:"encoding-and-decoding-base32"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#encoding-and-decoding-base32"}},[t._v("#")]),t._v(" Encoding and Decoding Base32")]),t._v(" "),e("p",[t._v("The base64 module also includes encoding and decoding functions for Base32. These functions are very similar to the Base64 functions:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base64\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Creating a string")]),t._v("\ns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the string into bytes")]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Base32 Encode the bytes")]),t._v("\ne "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b32encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the Base32 bytes to string")]),t._v("\ns1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Printing Base32 encoded string")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Base32 Encoded:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the Base32 encoded string into bytes")]),t._v("\nb1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the Base32 bytes")]),t._v("\nd "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b32decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the bytes to string")]),t._v("\ns2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("This would produce the following output:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("Base32 Encoded"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" JBSWY3DPEBLW64TMMQQQ"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nHello World!\n\n")])])]),e("h2",{attrs:{id:"encoding-and-decoding-base16"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#encoding-and-decoding-base16"}},[t._v("#")]),t._v(" Encoding and Decoding Base16")]),t._v(" "),e("p",[t._v("The base64 module also includes encoding and decoding functions for Base16. Base 16 is most commonly referred to as "),e("strong",[t._v("hexadecimal")]),t._v(". These functions are very similar to the both the Base64 and Base32 functions:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base64\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Creating a string")]),t._v("\ns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the string into bytes")]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Base16 Encode the bytes")]),t._v("\ne "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b16encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the Base16 bytes to string")]),t._v("\ns1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Printing Base16 encoded string")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Base16 Encoded:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the Base16 encoded string into bytes")]),t._v("\nb1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the Base16 bytes")]),t._v("\nd "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b16decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the bytes to string")]),t._v("\ns2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("This would produce the following output:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("Base16 Encoded"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 48656C6C6F20576F726C6421\nHello World!\n\n")])])]),e("h2",{attrs:{id:"encoding-and-decoding-ascii85"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#encoding-and-decoding-ascii85"}},[t._v("#")]),t._v(" Encoding and Decoding ASCII85")]),t._v(" "),e("p",[t._v("Adobe created it's own encoding called "),e("strong",[t._v("ASCII85")]),t._v(" which is similar to Base85, but has its differences. This encoding is used frequently in Adobe PDF files. These functions were released in Python version 3.4. Otherwise, the functions "),e("code",[t._v("base64.a85encode()")]),t._v(" and "),e("code",[t._v("base64.a85encode()")]),t._v(" are similar to the previous:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base64\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Creating a string")]),t._v("\ns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the string into bytes")]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ASCII85 Encode the bytes")]),t._v("\ne "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a85encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the ASCII85 bytes to string")]),t._v("\ns1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Printing ASCII85 encoded string")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ASCII85 Encoded:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the ASCII85 encoded string into bytes")]),t._v("\nb1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the ASCII85 bytes")]),t._v("\nd "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a85decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the bytes to string")]),t._v("\ns2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("This outputs the following:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("ASCII85 Encoded"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 87cURD"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('"Ebo80\nHello World!\n\n')])])]),e("h2",{attrs:{id:"encoding-and-decoding-base85"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#encoding-and-decoding-base85"}},[t._v("#")]),t._v(" Encoding and Decoding Base85")]),t._v(" "),e("p",[t._v("Just like the Base64, Base32, and Base16 functions, the Base85 encoding and decoding functions are "),e("code",[t._v("base64.b85encode()")]),t._v(" and "),e("code",[t._v("base64.b85decode()")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base64\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Creating a string")]),t._v("\ns "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the string into bytes")]),t._v("\nb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Base85 Encode the bytes")]),t._v("\ne "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b85encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the Base85 bytes to string")]),t._v("\ns1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Printing Base85 encoded string")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Base85 Encoded:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Encoding the Base85 encoded string into bytes")]),t._v("\nb1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the Base85 bytes")]),t._v("\nd "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b85decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Decoding the bytes to string")]),t._v("\ns2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("which outputs the following:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("Base85 Encoded"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NM"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("qnZy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("B1a"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("NF\nHello World!\n\n")])])]),e("h4",{attrs:{id:"syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),e("ul",[e("li",[t._v("base64.b64encode(s, altchars=None)")]),t._v(" "),e("li",[t._v("base64.b64decode(s, altchars=None, validate=False)")]),t._v(" "),e("li",[t._v("base64.standard_b64encode(s)")]),t._v(" "),e("li",[t._v("base64.standard_b64decode(s)")]),t._v(" "),e("li",[t._v("base64.urlsafe_b64encode(s)")]),t._v(" "),e("li",[t._v("base64.urlsafe_b64decode(s)")]),t._v(" "),e("li",[t._v("base64.b32encode(s)")]),t._v(" "),e("li",[t._v("base64.b32decode(s)")]),t._v(" "),e("li",[t._v("base64.b16encode(s)")]),t._v(" "),e("li",[t._v("base64.b16decode(s)")]),t._v(" "),e("li",[t._v("base64.a85encode(b, foldspaces=False, wrapcol=0, pad=False, adobe=False)")]),t._v(" "),e("li",[t._v("base64.a85decode(b, foldpaces=False, adobe=False, ignorechars=b'\\t\\n\\r\\v')")]),t._v(" "),e("li",[t._v("base64.b85encode(b, pad=False)")]),t._v(" "),e("li",[t._v("base64.b85decode(b)")])]),t._v(" "),e("h4",{attrs:{id:"parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Parameter")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("base64.b64encode(s, altchars=None)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[t._v("altchars")]),t._v(" "),e("td",[t._v("A bytes-like object of length 2+ of characters to replace the '+' and '=' characters when creating the Base64 alphabet. Extra characters are ignored.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.b64decode(s, altchars=None, validate=False)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[t._v("altchars")]),t._v(" "),e("td",[t._v("A bytes-like object of length 2+ of characters to replace the '+' and '=' characters when creating the Base64 alphabet. Extra characters are ignored.")])]),t._v(" "),e("tr",[e("td",[t._v("validate")]),t._v(" "),e("td",[t._v("If valide is True, the characters not in the normal Base64 alphabet or the alternative alphabet are "),e("strong",[t._v("not")]),t._v(" discarded before the padding check")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.standard_b64encode(s)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.standard_b64decode(s)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.urlsafe_b64encode(s)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.urlsafe_b64decode(s)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("b32encode(s)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("b32decode(s)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.b16encode(s)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.b16decode(s)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.a85encode(b, foldspaces=False, wrapcol=0, pad=False, adobe=False)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("b")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[t._v("foldspaces")]),t._v(" "),e("td",[t._v("If foldspaces is True, the character 'y' will be used instead of 4 consecutive spaces.")])]),t._v(" "),e("tr",[e("td",[t._v("wrapcol")]),t._v(" "),e("td",[t._v("The number characters before a newline (0 implies no newlines)")])]),t._v(" "),e("tr",[e("td",[t._v("pad")]),t._v(" "),e("td",[t._v("If pad is True, the bytes are padded to a multiple of 4 before encoding")])]),t._v(" "),e("tr",[e("td",[t._v("adobe")]),t._v(" "),e("td",[t._v("If adobe is True, the encoded sequened with be framed with '<~' and ''~>' as used with Adobe products")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.a85decode(b, foldspaces=False, adobe=False, ignorechars=b'\\t\\n\\r\\v')")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("b")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[t._v("foldspaces")]),t._v(" "),e("td",[t._v("If foldspaces is True, the character 'y' will be used instead of 4 consecutive spaces.")])]),t._v(" "),e("tr",[e("td",[t._v("adobe")]),t._v(" "),e("td",[t._v("If adobe is True, the encoded sequened with be framed with '<~' and ''~>' as used with Adobe products")])]),t._v(" "),e("tr",[e("td",[t._v("ignorechars")]),t._v(" "),e("td",[t._v("A bytes-like object of characters to ignore in the encoding process")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.b85encode(b, pad=False)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("b")]),t._v(" "),e("td",[t._v("A bytes-like object")])]),t._v(" "),e("tr",[e("td",[t._v("pad")]),t._v(" "),e("td",[t._v("If pad is True, the bytes are padded to a multiple of 4 before encoding")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("base64.b85decode(b)")])]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("b")]),t._v(" "),e("td",[t._v("A bytes-like object")])])])]),t._v(" "),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),e("p",[t._v("Up until Python 3.4 came out, base64 encoding and decoding functions only worked with "),e("code",[t._v("bytes")]),t._v(" or "),e("code",[t._v("bytearray")]),t._v(" types. Now these functions accept any "),e("a",{attrs:{href:"https://docs.python.org/3/glossary.html#term-bytes-like-object",target:"_blank",rel:"noopener noreferrer"}},[t._v("bytes-like object"),e("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);s.default=n.exports}}]);