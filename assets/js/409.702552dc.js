(window.webpackJsonp=window.webpackJsonp||[]).push([[409],{817:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"templates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#templates"}},[t._v("#")]),t._v(" Templates")]),t._v(" "),s("p",[t._v("Templates are very similar to templates in Angular 1, though there are many small syntactical changes that make it more clear what is happening.")]),t._v(" "),s("h2",{attrs:{id:"angular-2-templates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular-2-templates"}},[t._v("#")]),t._v(" Angular 2 Templates")]),t._v(" "),s("p",[s("strong",[t._v("A SIMPLE TEMPLATE")])]),t._v(" "),s("p",[t._v("Let’s start with a very simple template that shows our name and our favorite thing:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  Hello my name is "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" and "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I")]),t._v(" like "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("thing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" quite a lot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("{}:")]),t._v(" RENDERING")]),t._v(" "),s("p",[t._v("To render a value, we can use the standard double-curly syntax:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("My name is "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Pipes, previously known as “Filters,” transform a value into a new value, like localizing a string or converting a floating point value into a currency representation:")]),t._v(" "),s("p",[s("code",[t._v("[]:")]),t._v(" BINDING PROPERTIES")]),t._v(" "),s("p",[t._v("To resolve and bind a variable to a component, use the [] syntax. If we have this.currentVolume in our component, we will pass this through to our component and the values will stay in sync:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("video"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("volume"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"currentVolume"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("video"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HANDLING")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EVENTS")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("():")]),t._v(" HANDLING EVENTS\nTo listen for an event on a component, we use the () syntax")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("click"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onClick($event)"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("[()]:")]),t._v(" TWO-WAY DATA BINDING")]),t._v(" "),s("p",[t._v("To keep a binding up to date given user input and other events, use the [()] syntax. Think of it as a combination of handling an event and binding a property:")]),t._v(" "),s("p",[t._v('<input [(ngModel)]="myName">\nThe this.myName value of your component will stay in sync with the input value.')]),t._v(" "),s("p",[s("code",[t._v("*")]),t._v(": THE ASTERISK")]),t._v(" "),s("p",[t._v("Indicates that this directive treats this component as a template and will not draw it as-is. For example, ngFor takes our  and stamps it out for each item in items, but it never renders our initial  since it’s a template:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("component "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ngFor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#item of items"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("p",[t._v("Other similar directives that work on templates rather than rendered components are *ngIf and *ngSwitch.")])])}),[],!1,null,null,null);a.default=n.exports}}]);