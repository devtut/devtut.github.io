(window.webpackJsonp=window.webpackJsonp||[]).push([[2628],{3036:function(e,t,s){"use strict";s.r(t);var r=s(31),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"signing-scripts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signing-scripts"}},[e._v("#")]),e._v(" Signing Scripts")]),e._v(" "),s("h2",{attrs:{id:"bypassing-execution-policy-for-a-single-script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bypassing-execution-policy-for-a-single-script"}},[e._v("#")]),e._v(" Bypassing execution policy for a single script")]),e._v(" "),s("p",[e._v("Often you might need to execute an unsigned script that doesn't comply with the current execution policy. An easy way to do this is by bypassing the execution policy for that single process. Example:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[e._v("powershell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exe "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("ExecutionPolicy Bypass "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("File C:\\MyUnsignedScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ps1\n\n")])])]),s("p",[e._v("Or you can use the shorthand:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[e._v("powershell "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("ep Bypass C:\\MyUnsignedScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ps1\n\n")])])]),s("h3",{attrs:{id:"other-execution-policies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other-execution-policies"}},[e._v("#")]),e._v(" Other Execution Policies:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("Policy")]),e._v(" "),s("th",[e._v("Description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[s("code",[e._v("AllSigned")])]),e._v(" "),s("td",[e._v("Only scripts signed by a trusted publisher can be run.")])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("Bypass")])]),e._v(" "),s("td",[e._v("No restrictions; all Windows PowerShell scripts can be run.")])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("Default")])]),e._v(" "),s("td",[e._v("Normally "),s("code",[e._v("RemoteSigned")]),e._v(", but is controlled via ActiveDirectory")])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("RemoteSigned")])]),e._v(" "),s("td",[e._v("Downloaded scripts must be signed by a trusted publisher before they can be run.")])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("Restricted")])]),e._v(" "),s("td",[e._v("No scripts can be run. Windows PowerShell can be used only in interactive mode.")])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("Undefined")])]),e._v(" "),s("td",[e._v("NA")])]),e._v(" "),s("tr",[s("td",[s("code",[e._v("Unrestricted")]),e._v("*")]),e._v(" "),s("td",[e._v("Similar to "),s("code",[e._v("bypass")])])])])]),e._v(" "),s("p",[s("strong",[s("strong",[s("code",[e._v("Unrestricted*")]),e._v(" Caveat:")]),e._v(" If you run an unsigned script that was downloaded from the Internet, you are prompted for permission before it runs.")])]),e._v(" "),s("p",[e._v("More Information available "),s("a",{attrs:{href:"https://blog.netspi.com/15-ways-to-bypass-the-powershell-execution-policy/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"signing-a-script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signing-a-script"}},[e._v("#")]),e._v(" Signing a script")]),e._v(" "),s("p",[e._v("Signing a script is done by using the "),s("code",[e._v("Set-AuthenticodeSignature")]),e._v("-cmdlet and a code-signing certificate.")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#Get the first available personal code-signing certificate for the logged on user")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$cert")]),e._v(" = @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-ChildItem")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Path Cert:\\CurrentUser\\My "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("CodeSigningCert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#Sign script using certificate")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Set-AuthenticodeSignature")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Certificate "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$cert")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("FilePath c:\\MyScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ps1\n\n")])])]),s("p",[e._v("You can also read a certificate from a "),s("code",[e._v(".pfx")]),e._v("-file using:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$cert")]),e._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-PfxCertificate")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("FilePath "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"C:\\MyCodeSigningCert.pfx"')]),e._v("\n\n")])])]),s("p",[e._v("The script will be valid until the cetificate expires. If you use a timestamp-server during the signing, the script will continue to be valid after the certificate expires. It is also useful to add the trust chain for the certificate (including root authority) to help most computers trust the certificated used to sign the script.")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Set-AuthenticodeSignature")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Certificate "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$cert")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("FilePath c:\\MyScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ps1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("IncludeChain All "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("TimeStampServer "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"http://timestamp.verisign.com/scripts/timstamp.dll"')]),e._v("\n\n")])])]),s("p",[e._v("It's recommended to use a timestamp-server from a trusted certificate provider like Verisign, Comodo, Thawte etc.")]),e._v(" "),s("h2",{attrs:{id:"changing-the-execution-policy-using-set-executionpolicy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changing-the-execution-policy-using-set-executionpolicy"}},[e._v("#")]),e._v(" Changing the execution policy using Set-ExecutionPolicy")]),e._v(" "),s("p",[e._v("To change the execution policy for the default scope (LocalMachine), use:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Set-ExecutionPolicy")]),e._v(" AllSigned\n\n")])])]),s("p",[e._v("To change the policy for a specific scope, use:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Set-ExecutionPolicy")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Scope CurrentUser "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("ExecutionPolicy AllSigned\n\n")])])]),s("p",[e._v("You can suppress the prompts by adding the "),s("code",[e._v("-Force")]),e._v(" switch.")]),e._v(" "),s("h2",{attrs:{id:"get-the-current-execution-policy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-the-current-execution-policy"}},[e._v("#")]),e._v(" Get the current execution policy")]),e._v(" "),s("p",[e._v("Getting the effective execution policy for the current session:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("PS")]),e._v("> "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-ExecutionPolicy")]),e._v("\nRemoteSigned\n\n")])])]),s("p",[e._v("List all effective execution policies for the current session:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("PS")]),e._v("> "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-ExecutionPolicy")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("List\n\n        Scope ExecutionPolicy\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("\nMachinePolicy       Undefined\n   UserPolicy       Undefined\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Process")]),e._v("       Undefined\n  CurrentUser       Undefined\n LocalMachine    RemoteSigned\n\n")])])]),s("p",[e._v("List the execution policy for a specific scope, ex. process:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("PS")]),e._v("> "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-ExecutionPolicy")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Scope "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Process")]),e._v("\nUndefined\n\n")])])]),s("h2",{attrs:{id:"getting-the-signature-from-a-signed-script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-the-signature-from-a-signed-script"}},[e._v("#")]),e._v(" Getting the signature from a signed script")]),e._v(" "),s("p",[e._v("Get information about the Authenticode signature from a signed script by using the "),s("code",[e._v("Get-AuthenticodeSignature")]),e._v("-cmdlet:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-AuthenticodeSignature")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\\MyScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ps1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Format-List")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("\n\n")])])]),s("h2",{attrs:{id:"creating-a-self-signed-code-signing-certificate-for-testing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-self-signed-code-signing-certificate-for-testing"}},[e._v("#")]),e._v(" Creating a self-signed code signing certificate for testing")]),e._v(" "),s("p",[e._v("When signing personal scripts or when testing code signing it can be useful to create a self-signed code signing certificate.")]),e._v(" "),s("p",[e._v("Beginning with PowerShell 5.0 you can generate a self-signed code signing certificate by using the "),s("code",[e._v("New-SelfSignedCertificate")]),e._v("-cmdlet:")]),e._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("New-SelfSignedCertificate")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("FriendlyName "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"StackOverflow Example Code Signing"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("CertStoreLocation Cert:\\CurrentUser\\My "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Subject "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"SO User"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("Type")]),e._v(" CodeSigningCert\n\n")])])]),s("p",[e._v("In earlier versions, you can create a self-signed certificate using the "),s("code",[e._v("makecert.exe")]),e._v(" tool found in the .NET Framework SDK and Windows SDK.")]),e._v(" "),s("p",[e._v("A self-signed ceriticate will only be trusted by computers that have installed the certificate. For scripts that will be shared, a certificate from a trusted certificate authority (internal or trusted third-party) are recommended.")]),e._v(" "),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[e._v("#")]),e._v(" Remarks")]),e._v(" "),s("p",[e._v("Signing a script will make your scripts comply with all exeuction policies in PowerShell and ensure the integrity of a script. Signed scripts will fail to run if they have been modified after being signed.")]),e._v(" "),s("p",[e._v("Scripts signing requires a code signing certificate. Recommendations:")]),e._v(" "),s("ul",[s("li",[e._v("Personal scripts/testing (not shared): Certificate from trusted certifiate authority (internal or third-party) "),s("strong",[e._v("OR")]),e._v(" a self-signed certificate.")]),e._v(" "),s("li",[e._v("Shared inside organization: Certificate from trusted certifiate authority (internal or third-party)")]),e._v(" "),s("li",[e._v("Shared outside organization: Certificate from trusted third party certifiate authority")])]),e._v(" "),s("p",[e._v("Read more at "),s("a",{attrs:{href:"https://technet.microsoft.com/en-us/library/hh847874(v=wps.640).aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("about_Signing @ TechNet"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"execution-policies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#execution-policies"}},[e._v("#")]),e._v(" Execution policies")]),e._v(" "),s("p",[e._v("PowerShell has configurable execution policies that control which conditions are required for a script or configuration to be executed. An excecution policy can be set for multiple scopes; computer, current user and current process. "),s("strong",[e._v("Execution policies can easily be bypassed and is not designed to restrict users, but rather protect them from violating signing policies unintentionally.")])]),e._v(" "),s("p",[e._v("The available policies are:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("Restricted")]),e._v(" "),s("td",[e._v("No scripts allowed")])]),e._v(" "),s("tr",[s("td",[e._v("AllSigned")]),e._v(" "),s("td",[e._v("All scripts need to be signed")])]),e._v(" "),s("tr",[s("td",[e._v("RemoteSigned")]),e._v(" "),s("td",[e._v("All local scripts allowed; only signed remote scripts")])]),e._v(" "),s("tr",[s("td",[e._v("Unrestricted")]),e._v(" "),s("td",[e._v("No requirements. All scripts allowed, but will warn before running scripts downloaded from the internet")])]),e._v(" "),s("tr",[s("td",[e._v("Bypass")]),e._v(" "),s("td",[e._v("All scripts are allowed and no warnings are displayed")])]),e._v(" "),s("tr",[s("td",[e._v("Undefined")]),e._v(" "),s("td",[e._v("Remove the current execution policy for the current scope. Uses the parent policy. If all policies are undefined, restricted will be used.")])])])]),e._v(" "),s("p",[e._v("You can modify the current execution policies using "),s("code",[e._v("Set-ExecutionPolicy")]),e._v("-cmdlet, Group Policy or the "),s("code",[e._v("-ExecutionPolicy")]),e._v(" parameter when launching a "),s("code",[e._v("powershell.exe")]),e._v(" process.")]),e._v(" "),s("p",[e._v("Read more at "),s("a",{attrs:{href:"https://technet.microsoft.com/en-us/library/hh847748(v=wps.620).aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("about_Execution_Policies @ TechNet"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);