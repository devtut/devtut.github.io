(window.webpackJsonp=window.webpackJsonp||[]).push([[513],{921:function(a,t,s){"use strict";s.r(t);var e=s(31),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"managing-path-environment-variable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#managing-path-environment-variable"}},[a._v("#")]),a._v(" Managing PATH environment variable")]),a._v(" "),s("h2",{attrs:{id:"add-a-path-to-the-path-environment-variable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-a-path-to-the-path-environment-variable"}},[a._v("#")]),a._v(" Add a path to the PATH environment variable")]),a._v(" "),s("p",[a._v("The PATH environment variable is generally defined in ~/.bashrc or ~/.bash_profile or /etc/profile or ~/.profile or /etc/bash.bashrc (distro specific Bash configuration file)")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v("\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/lib/jvm/jdk1.8.0_92/bin:/usr/lib/jvm/jdk1.8.0_92/db/bin:/usr/lib/jvm/jdk1.8.0_92/jre/bin\n\n")])])]),s("p",[a._v("Now, if we want to add a path (e.g "),s("code",[a._v("~/bin")]),a._v(") to the PATH variable:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v("/bin:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# or")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v(":~/bin\n\n")])])]),s("p",[a._v("But this will modify the PATH only in the current shell (and its subshell). Once you exit the shell, this modification will be gone.")]),a._v(" "),s("p",[a._v("To make it permanent, we need to add that bit of code to the ~/.bashrc (or whatever) file and reload the file.")]),a._v(" "),s("p",[a._v("If you run the following code (in terminal), it will add "),s("code",[a._v("~/bin")]),a._v(" to the PATH permanently:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'PATH=~/bin:$PATH'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" ~/.bashrc "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" ~/.bashrc\n\n")])])]),s("p",[a._v("Explanation:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("echo 'PATH=~/bin:$PATH' >> ~/.bashrc")]),a._v(" adds the line "),s("code",[a._v("PATH=~/bin:$PATH")]),a._v(" at the end of ~/.bashrc file (you could do it with a text editor)")]),a._v(" "),s("li",[s("code",[a._v("source ~/.bashrc")]),a._v(" reloads the ~/.bashrc file")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v("/bin            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# path to be included")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("bashrc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v("/.bashrc      "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# bash file to be written and reloaded")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# run the following code unmodified")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" -q "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\\(^\\|:\\)'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$path")]),a._v('\\(:\\|/\\{0,1\\}$\\)"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"PATH=\\'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v(":"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$path")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$bashrc")]),a._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$bashrc")]),a._v('"')]),a._v("\n\n")])])]),s("h2",{attrs:{id:"remove-a-path-from-the-path-environment-variable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remove-a-path-from-the-path-environment-variable"}},[a._v("#")]),a._v(" Remove a path from the PATH environment variable")]),a._v(" "),s("p",[a._v("To remove a PATH from a PATH environment variable, you need to edit ~/.bashrc or ~/.bash_profile or /etc/profile or ~/.profile or /etc/bash.bashrc (distro specific) file and remove the assignment for that particular path.")]),a._v(" "),s("p",[a._v("Instead of finding the exact assignment, you could just do a replacement in the "),s("code",[a._v("$PATH")]),a._v(" in its final stage.")]),a._v(" "),s("p",[a._v("The following will safely remove "),s("code",[a._v("$path")]),a._v(" from "),s("code",[a._v("$PATH")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v("/bin\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"$(echo "'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v('" |sed -e "s#\\(^\\|:\\)'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$path")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/[^^]/[&]/g'")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/\\^/\\\\^/g'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\\(:\\|/\\{0,1\\}$\\)#"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[a._v("\\1")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\2"}},[a._v("\\2")]),a._v('#"')]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s#:\\+#:#g'")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s#^:\\|:$##g'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v('"\n\n')])])]),s("p",[a._v("To make it permanent, you will need to add it at the end of your bash configuration file.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("rpath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("path")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"$(echo "'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v('" |sed -e "s#\\(^\\|:\\)'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$path")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/[^^]/[&]/g'")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/\\^/\\\\^/g'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\\(:\\|/\\{0,1\\}$\\)#"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[a._v("\\1")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\2"}},[a._v("\\2")]),a._v('#"')]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s#:\\+#:#g'")]),a._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s#^:\\|:$##g'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\n    done\n    echo "')]),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\n}\n\nPATH="')]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("rpath ~/bin /usr/local/sbin /usr/local/bin"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\nPATH="')]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("rpath /usr/games"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"\n'),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# etc ...")]),a._v("\n\n")])])]),s("p",[a._v("This will make it easier to handle multiple paths.")]),a._v(" "),s("p",[s("strong",[a._v("Notes:")])]),a._v(" "),s("ul",[s("li",[a._v("You will need to add these codes in the Bash configuration file (~/.bashrc or whatever).")]),a._v(" "),s("li",[a._v("Run "),s("code",[a._v("source ~/.bashrc")]),a._v(" to reload the Bash configuration (~/.bashrc) file.")])]),a._v(" "),s("h4",{attrs:{id:"syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[a._v("#")]),a._v(" Syntax")]),a._v(" "),s("ul",[s("li",[a._v("Add path : PATH=$PATH:/new/path")]),a._v(" "),s("li",[a._v("Add path : PATH=/new/path:$PATH")])]),a._v(" "),s("h4",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("Parameter")]),a._v(" "),s("th",[a._v("Details")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("PATH")]),a._v(" "),s("td",[a._v("Path environment variable")])])])]),a._v(" "),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[a._v("#")]),a._v(" Remarks")]),a._v(" "),s("p",[s("strong",[a._v("Bash configuration file:")])]),a._v(" "),s("p",[a._v("This file is sourced whenever a new interactive Bash shell is started.")]),a._v(" "),s("p",[a._v("In GNU/Linux systems it's generally the ~/.bashrc file; in Mac it's ~/.bash_profile or ~/.profile")]),a._v(" "),s("p",[s("strong",[a._v("Export:")])]),a._v(" "),s("p",[a._v("The PATH variable must be exported once (It's done by default). Once it is exported it will remain exported and any changes made to it will be applied immediately.")]),a._v(" "),s("p",[s("strong",[a._v("Apply changes:")])]),a._v(" "),s("p",[a._v("To apply changes to a Bash configuration file, you must reload that file in a terminal ("),s("code",[a._v("source /path/to/bash_config_file")]),a._v(")")])])}),[],!1,null,null,null);t.default=n.exports}}]);