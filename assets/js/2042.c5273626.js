(window.webpackJsonp=window.webpackJsonp||[]).push([[2042],{2450:function(a,e,t){"use strict";t.r(e);var r=t(31),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"primary-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#primary-keys"}},[a._v("#")]),a._v(" Primary Keys")]),a._v(" "),t("h2",{attrs:{id:"create-table-w-identity-column-as-primary-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-table-w-identity-column-as-primary-key"}},[a._v("#")]),a._v(" Create table w/ identity column as primary key")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n-- Identity primary key - unique arbitrary increment number\n create table person (\n id int identity(1,1) primary key not null,\n firstName varchar(100) not null,\n lastName varchar(100) not null,\n dob DateTime not null,\n ssn varchar(9) not null\n )\n\n")])])]),t("h2",{attrs:{id:"create-table-w-guid-primary-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-table-w-guid-primary-key"}},[a._v("#")]),a._v(" Create table w/ GUID primary key")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n-- GUID primary key - arbitrary unique value for table\n create table person (\n id uniqueIdentifier default (newId()) primary key,\n firstName varchar(100) not null,\n lastName varchar(100) not null,\n dob DateTime not null,\n ssn varchar(9) not null\n )\n\n")])])]),t("h2",{attrs:{id:"create-table-w-natural-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-table-w-natural-key"}},[a._v("#")]),a._v(" Create table w/ natural key")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n-- natural primary key - using an existing piece of data within the table that uniquely identifies the record\n create table person (\n firstName varchar(100) not null,\n lastName varchar(100) not null,\n dob DateTime not null,\n ssn varchar(9) primary key not null\n )\n\n")])])]),t("h2",{attrs:{id:"create-table-w-composite-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-table-w-composite-key"}},[a._v("#")]),a._v(" Create table w/ composite key")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n-- composite key - using two or more existing columns within a table to create a primary key\n create table person (\n firstName varchar(100) not null,\n lastName varchar(100) not null,\n dob DateTime not null,\n ssn varchar(9) not null,\n primary key (firstName, lastName, dob)\n )\n\n")])])]),t("h2",{attrs:{id:"add-primary-key-to-existing-table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-primary-key-to-existing-table"}},[a._v("#")]),a._v(" Add primary key to existing table")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" person\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CONSTRAINT")]),a._v(" pk_PersonSSN "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PRIMARY")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("KEY")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("ssn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("p",[a._v("Note, if the primary key column (in this case "),t("code",[a._v("ssn")]),a._v(") has more than one row with the same candidate key, the above statement will fail, as primary key values must be unique.")]),a._v(" "),t("h2",{attrs:{id:"delete-primary-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#delete-primary-key"}},[a._v("#")]),a._v(" Delete primary key")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" Person\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DROP")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CONSTRAINT")]),a._v(" pk_PersonSSN\n\n")])])]),t("h4",{attrs:{id:"remarks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[a._v("#")]),a._v(" Remarks")]),a._v(" "),t("p",[a._v("Primary keys are used to uniquely identify a record in a table. A table may only have a single primary key (though the primary key can consist of multiple columns), and a primary key is required for certain types of replication.")]),a._v(" "),t("p",[a._v("Primary keys are often used as (but don't have to be) the "),t("a",{attrs:{href:"http://stackoverflow.com/questions/1251636/what-do-clustered-and-non-clustered-index-actually-mean",target:"_blank",rel:"noopener noreferrer"}},[a._v("clustered index"),t("OutboundLink")],1),a._v(" on a table.")])])}),[],!1,null,null,null);e.default=s.exports}}]);