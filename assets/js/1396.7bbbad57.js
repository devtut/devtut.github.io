(window.webpackJsonp=window.webpackJsonp||[]).push([[1396],{1804:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"key-value-coding-key-value-observation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-value-coding-key-value-observation"}},[t._v("#")]),t._v(" Key Value Coding-Key Value Observation")]),t._v(" "),a("h2",{attrs:{id:"observing-a-property-of-a-nsobject-subclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#observing-a-property-of-a-nsobject-subclass"}},[t._v("#")]),t._v(" Observing a property of a NSObject subclass")]),t._v(" "),a("p",[t._v("Most KVO and KVC functionality is already implemented by default on all "),a("code",[t._v("NSObject")]),t._v(" subclasses.")]),t._v(" "),a("p",[t._v("To start observing a property named "),a("code",[t._v("firstName")]),t._v(" of an object named "),a("code",[t._v("personObject")]),t._v(" do this in the observing class:")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("personObject addObserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n               forKeyPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"firstName"')])]),t._v("\n                  options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSKeyValueObservingOptionNew")]),t._v("\n                  context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("The object that "),a("code",[t._v("self")]),t._v(" in the above code refers to will then receive a "),a("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v(" message whenever the observed key path changes.")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observeValueForKeyPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath\n                      ofObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("object\n                        change"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSDictionary")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("change\n                       context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new value of %@ is: %@"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keyPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" change"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSKeyValueChangeNewKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v('"Key path" is a KVC term. '),a("code",[t._v("NSObject")]),t._v(" subclasses implement KVC functionality by default.")]),t._v(" "),a("p",[t._v("An instance variable named "),a("code",[t._v("_firstName")]),t._v(" will be accessible by the "),a("code",[t._v('@"firstName"')]),t._v(" key path.")]),t._v(" "),a("p",[t._v("A getter method named "),a("code",[t._v("firstName")]),t._v(" will be called when accessing the "),a("code",[t._v('@"firstName"')]),t._v(" key path, regardless of there being a "),a("code",[t._v("_firstName")]),t._v(" instance variable or "),a("code",[t._v("setFirstName")]),t._v(" setter method.")]),t._v(" "),a("h2",{attrs:{id:"use-of-context-for-kvo-observation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-of-context-for-kvo-observation"}},[t._v("#")]),t._v(" Use of context for KVO Observation")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observeValueForKeyPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath ofObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("object change"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSDictionary")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("change context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context\n\n")])])]),a("p",[t._v("Context is important if you ship your class for others to use.Context lets your class observer verify that its you observer which is being called.")]),t._v(" "),a("p",[t._v("The problem with not passing an observer is, if some one subclass your class and register an observer for the same object,same key and he does not passes a context ,then the super class observer can be called multiple time.")]),t._v(" "),a("p",[t._v("A variable which is unique and internal for your use is a good context.")]),t._v(" "),a("p",[t._v("For more information.")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://stackoverflow.com/questions/12719864/best-practices-for-context-parameter-in-addobserver-kvo",target:"_blank",rel:"noopener noreferrer"}},[t._v("importance and good context"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[a("strong",[t._v("KVC")]),t._v(" :- Key-Value Coding")]),t._v(" "),a("p",[t._v("Normally instance variables are accessed through properties or accessors but KVC gives another way to access variables in form of strings. In this way your class acts like a dictionary and your property name for example “age” becomes key and value that property holds becomes value for that key.")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("For")]),t._v(" example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" you have employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" with "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')])]),t._v(" property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Normally")]),t._v(" we access like this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nemp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @”"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("″"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("But")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KVC")]),t._v(" works like this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("emp valueForKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("emp setValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25"')])]),t._v(" forKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("KVO")]),t._v(" :- Key-Value Observer")]),t._v(" "),a("p",[t._v("The mechanism through which objects are notified when there is change in any of property is called KVO.\nEx.:keyboard notification")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[t._v("For example, person object is interested in getting notification when\naccountBalance property is changed in BankAccount object. To achieve\nthis, Person Object must register as an observer of the BankAccount’s\naccountBalance property by sending an addObserver: forKeyPath:\noptions: context: message.")])])}),[],!1,null,null,null);s.default=n.exports}}]);