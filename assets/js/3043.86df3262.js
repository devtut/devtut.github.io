(window.webpackJsonp=window.webpackJsonp||[]).push([[3043],{3451:function(n,e,t){"use strict";t.r(e);var a=t(31),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"render-best-practises"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#render-best-practises"}},[n._v("#")]),n._v(" Render Best Practises")]),n._v(" "),t("p",[n._v("Topic for important notes about specific Component.render method behavoir.")]),n._v(" "),t("h2",{attrs:{id:"functions-in-jsx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions-in-jsx"}},[n._v("#")]),n._v(" Functions in JSX")]),n._v(" "),t("p",[n._v("For better performance it's important to avoid using of array (lambda) function in JSX.")]),n._v(" "),t("p",[n._v("As explained at "),t("a",{attrs:{href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md"),t("OutboundLink")],1),n._v(" :")]),n._v(" "),t("blockquote"),n._v(" "),t("p",[n._v("A bind call or arrow function in a JSX prop will create a brand new function on every single render. This is bad for performance, as it will result in the garbage collector being invoked way more than is necessary. It may also cause unnecessary re-renders if a brand new function is passed as a prop to a component that uses reference equality check on the prop to determine if it should update.")]),n._v(" "),t("p",[n._v("So if have jsx code block like this:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n                   <TextInput\n                      onChangeValue={  value => this.handleValueChanging(value) }\n                    />\n\n")])])]),t("p",[n._v("or")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n                   <button onClick={ this.handleClick.bind(this) }></button>\n\n")])])]),t("p",[n._v("you can make it better:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n                   <TextInput\n                      onChangeValue={  this.handleValueChanging }\n                    />\n\n")])])]),t("p",[n._v("and")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n                   <button onClick={ this.handleClick }></button>\n\n")])])]),t("p",[n._v("For correct context within handleValueChanging function you can apply it in constructor of component:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n         constructor(){\n            this.handleValueChanging = this.handleValueChanging.bind(this)\n          }\n\n")])])]),t("p",[n._v("more in "),t("a",{attrs:{href:"https://stackoverflow.com/questions/35446486/binding-a-function-passed-to-a-component",target:"_blank",rel:"noopener noreferrer"}},[n._v("binding a function passed to a component"),t("OutboundLink")],1)]),n._v(" "),t("p",[n._v("Or you can use solutions like this: "),t("a",{attrs:{href:"https://github.com/andreypopp/autobind-decorator",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/andreypopp/autobind-decorator"),t("OutboundLink")],1),n._v("\nand simply add @autobind decorator to each methos that you want bind to:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n       @autobind\n        handleValueChanging(newValue)\n        {\n            //processing event\n        }\n\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);