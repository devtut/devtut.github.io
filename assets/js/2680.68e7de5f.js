(window.webpackJsonp=window.webpackJsonp||[]).push([[2680],{3088:function(t,a,e){"use strict";e.r(a);var n=e(31),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"create-virtual-environment-with-virtualenvwrapper-in-windows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-virtual-environment-with-virtualenvwrapper-in-windows"}},[t._v("#")]),t._v(" Create virtual environment with virtualenvwrapper in windows")]),t._v(" "),e("h2",{attrs:{id:"virtual-environment-with-virtualenvwrapper-for-windows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#virtual-environment-with-virtualenvwrapper-for-windows"}},[t._v("#")]),t._v(" Virtual environment with virtualenvwrapper for windows")]),t._v(" "),e("p",[t._v("Suppose you need to work on three different projects project A, project B and project C. project A and project B need python 3 and some required libraries. But for project C you need python 2.7 and dependent libraries.")]),t._v(" "),e("p",[t._v("So best practice for this is to separate those project environments.\nFor creating separate python virtual environment need to follow below steps:")]),t._v(" "),e("p",[e("strong",[t._v("Step 1:")]),t._v("\nInstall pip with this command: "),e("code",[t._v("python -m pip install -U pip")])]),t._v(" "),e("p",[e("strong",[t._v("Step 2:")]),t._v('\nThen install "virtualenvwrapper-win" package by using command (command can be executed windows power shell):')]),t._v(" "),e("p",[e("code",[t._v("pip install virtualenvwrapper-win")])]),t._v(" "),e("p",[e("strong",[t._v("Step 3:")]),t._v("\nCreate a new virtualenv environment by using command:\n"),e("code",[t._v("mkvirtualenv python_3.5")])]),t._v(" "),e("p",[e("strong",[t._v("Step 4:")]),t._v("\nActivate the environment by using command:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("workon "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" environment name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),e("p",[t._v("Main commands for virtualenvwrapper:")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("mkvirtualenv "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCreate a new virtualenv environment named "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" The environment will be created "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" WORKON_HOME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nlsvirtualenv\nList "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v(" of the enviornments stored "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" WORKON_HOME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nrmvirtualenv "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nRemove the environment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Uses folder_delete"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nworkon "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nIf "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" specified"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" activate the environment named "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("change the working virtualenv to "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" If a project directory has been defined"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" we will change into it"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" If no argument "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" specified"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),t._v(" the available environments"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" One can "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v(" additional option "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c after virtualenv name to cd to virtualenv directory "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" no projectdir "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\ndeactivate\nDeactivate the working virtualenv "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" switch back to the default system Python"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\nadd2virtualenv "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("full "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" relative path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nIf a virtualenv environment "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" active"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" appends "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" to virtualenv_path_extensions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pth inside the environment’s site"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("packages"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" which effectively adds "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" to the environment’s PYTHONPATH"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" If a virtualenv environment "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" active"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" appends "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" to virtualenv_path_extensions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pth inside the default Python’s site"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("packages"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" If "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" doesn’t exist"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" it will be created"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);