(window.webpackJsonp=window.webpackJsonp||[]).push([[3464],{3872:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"enum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enum"}},[t._v("#")]),t._v(" Enum")]),t._v(" "),a("h2",{attrs:{id:"getnames"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getnames"}},[t._v("#")]),t._v(" GetNames()")]),t._v(" "),a("p",[t._v("Returns the names of constants in the specified Enum as a string array:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v(" Module1\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Size\n    Small\n    Medium\n    Large\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" sizes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" size "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" sizes\n      Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v("\n\n")])])]),a("p",[t._v("Output:")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[t._v("Small\nMedium\nLarge")]),t._v(" "),a("h2",{attrs:{id:"hasflag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hasflag"}},[t._v("#")]),t._v(" HasFlag()")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("HasFlag()")]),t._v(" method can be used to check if a flag is set.")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v(" Module1\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Flags"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Material\n        Wood "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        Plastic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n        Metal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n        Stone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" houseMaterials "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Material "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Wood "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Or")]),t._v(" Material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stone\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" houseMaterials"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HasFlag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n            Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the house is made of stone"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Else")]),t._v("\n            Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the house is not made of stone"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v("\n\n")])])]),a("p",[t._v("For more information about the Flags-attribute and how it should be used see "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/system.flagsattribute(v=vs.110).aspx#Anchor_6",target:"_blank",rel:"noopener noreferrer"}},[t._v("the official Microsoft documentation"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"enum-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enum-definition"}},[t._v("#")]),t._v(" Enum definition")]),t._v(" "),a("p",[t._v("An enum is a set of logically related constants.")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Size\n    Small\n    Medium\n    Large\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shirtSize "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" shirtSize\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Small\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' ...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Medium\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' ...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Large\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"member-initialization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#member-initialization"}},[t._v("#")]),t._v(" Member initialization")]),t._v(" "),a("p",[t._v("Each of the enum members may be initialized with a value. If a value is not specified for a member, by default it's initialized to 0 (if it's the first member in the member list) or to a value greater by 1 than the value of the preceding member.")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v(" Module1\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Size\n        Small\n        Medium "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n        Large\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Small"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' prints 0")]),t._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Medium"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' prints 3")]),t._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Large"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' prints 4")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Waits until user presses any key")]),t._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReadKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"the-flags-attribute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-flags-attribute"}},[t._v("#")]),t._v(" The Flags attribute")]),t._v(" "),a("p",[t._v("With the "),a("code",[t._v("<Flags>")]),t._v(" attribute, the enum becomes a set of flags. This attribute enables assigning multiple values to an enum variable. The members of a flags enum should be initialized with powers of 2 (1, 2, 4, 8...).")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v(" Module1\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Flags"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Material\n        Wood "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        Plastic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n        Metal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n        Stone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" houseMaterials "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Material "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Wood "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Or")]),t._v(" Material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stone\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" carMaterials "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Material "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Plastic "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Or")]),t._v(" Material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Metal\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" knifeMaterials "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Material "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Material"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Metal\n\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("houseMaterials"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'Prints "Wood, Stone"')]),t._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("carMaterials"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Prints 6")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"string-parsing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-parsing"}},[t._v("#")]),t._v(" String parsing")]),t._v(" "),a("p",[t._v("An Enum instance can be created by parsing a string representation of the Enum.")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v(" Module1\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Size\n        Small\n        Medium\n        Large\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" shirtSize "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DirectCast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Parse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Medium"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Prints 'Medium'")]),t._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shirtSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Waits until user presses any key")]),t._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReadKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v("\n\n")])])]),a("p",[t._v("See also: "),a("a",{attrs:{href:"http://stackoverflow.com/questions/852141/parse-a-string-to-an-enum-value-in-vb-net/852156#852156",target:"_blank",rel:"noopener noreferrer"}},[t._v("Parse a string to an Enum value in VB.NET"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"getvalues"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getvalues"}},[t._v("#")]),t._v(" GetValues()")]),t._v(" "),a("p",[t._v("' This method is useful for iterating Enum values '")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Animal\n    Dog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    Cat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    Frog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" Animals "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" animal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Animals\n    Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v("\n\n")])])]),a("p",[t._v("Prints:")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[t._v("1\n2\n4")]),t._v(" "),a("h2",{attrs:{id:"tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[t._v("#")]),t._v(" ToString()")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("ToString")]),t._v(" method on an enum returns the string name of the enumeration.  For instance:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v(" Module1\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Size\n        Small\n        Medium\n        Large\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" shirtSize "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Medium\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" output "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" shirtSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\' Writes "Medium"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Module")]),t._v("\n\n")])])]),a("p",[t._v("If, however, the string representation of the actual integer value of the enum is desired, you can cast the enum to an "),a("code",[t._v("Integer")]),t._v(" and then call "),a("code",[t._v("ToString")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" shirtSize "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Medium\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" output "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shirtSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nConsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\' Writes "1"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"determine-whether-a-enum-has-flagsattribute-specified-or-not"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#determine-whether-a-enum-has-flagsattribute-specified-or-not"}},[t._v("#")]),t._v(" Determine whether a Enum has FlagsAttribute specified or not")]),t._v(" "),a("p",[t._v("The next example can be used to determine whether a enumeration has the "),a("strong",[a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/system.flagsattribute(v=vs.110).aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("FlagsAttribute"),a("OutboundLink")],1)]),t._v(" specified. The methodology used is based on "),a("strong",[a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/f7ykdhsy(v=vs.110).aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reflection"),a("OutboundLink")],1)]),t._v(".")]),t._v(" "),a("p",[t._v("This example will give a "),a("code",[t._v("True")]),t._v(" result:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" enu "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("] "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" FileAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" hasFlags "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" enu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetCustomAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FlagsAttribute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inherit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nConsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{0} Enum has FlagsAttribute?: {1}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hasFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("This example will give a "),a("code",[t._v("False")]),t._v(" result:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" enu "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("] "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" ConsoleColor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" hasFlags "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" enu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetCustomAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FlagsAttribute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inherit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nConsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{0} Enum has FlagsAttribute?: {1}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hasFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("We can design a generic usage extension method like this one:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DebuggerStepThrough"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Extension"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("EditorBrowsable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EditorBrowsableState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Always"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" HasFlagsAttribute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ByVal")]),t._v(" sender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Boolean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" sender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetCustomAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FlagsAttribute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inherit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\n\n")])])]),a("p",[t._v("Usage Example:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" FileAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HasFlagsAttribute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"for-each-flag-flag-iteration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-each-flag-flag-iteration"}},[t._v("#")]),t._v(" For-each flag (flag iteration)")]),t._v(" "),a("p",[t._v("In some very specific scenarios we would feel the need to perform a specific action for each flag of the source enumeration.")]),t._v(" "),a("p",[t._v("We can write a simple "),a("strong",[t._v("Generic")]),t._v(" extension method to realize this task.")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DebuggerStepThrough"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Extension"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("EditorBrowsable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EditorBrowsableState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Always"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" ForEachFlag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ByVal")]),t._v(" sender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ByVal")]),t._v(" action "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" sender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Invoke"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" flag\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("p",[t._v("Usage Example:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" flags "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" FileAttributes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FileAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ReadOnly")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Or")]),t._v(" FileAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \nflags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ForEachFlag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" FileAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ByVal")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" FileAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"determine-the-amount-of-flags-in-a-flag-combination"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#determine-the-amount-of-flags-in-a-flag-combination"}},[t._v("#")]),t._v(" Determine the amount of flags in a flag combination")]),t._v(" "),a("p",[t._v("The next example is intended to count the amount of flags in the specified flag combination.")]),t._v(" "),a("p",[t._v("The example is provided as a extension method:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DebuggerStepThrough"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Extension"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("EditorBrowsable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EditorBrowsableState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Always"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" CountFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ByVal")]),t._v(" sender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" sender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","c')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\n\n")])])]),a("p",[t._v("Usage Example:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" flags "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" FileAttributes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FileAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Archive "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Or")]),t._v(" FileAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Compressed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CountFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nConsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"find-the-nearest-value-in-a-enum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-the-nearest-value-in-a-enum"}},[t._v("#")]),t._v(" Find the nearest value in a Enum")]),t._v(" "),a("p",[t._v("The next code illustrates how to find the nearest value of a "),a("strong",[t._v("Enum")]),t._v(".")]),t._v(" "),a("p",[t._v("First we define this "),a("strong",[t._v("Enum")]),t._v(" that will serve to specify search criteria (search direction)")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" EnumFindDirection "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),t._v("\n    Nearest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    Less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    LessOrEqual "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    Greater "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n    GreaterOrEqual "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n")])])]),a("p",[t._v("And now we implement the search algorithm:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DebuggerStepThrough"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Shared")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" FindNearestEnumValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ByVal")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Long")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                                  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ByVal")]),t._v(" direction "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" EnumFindDirection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" T\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" direction\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" EnumFindDirection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Nearest\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("From enumValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    Order By Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Abs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enumValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstOrDefault\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" EnumFindDirection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Less\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("First"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstOrDefault\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Else")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("From enumValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        Where Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enumValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" value\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastOrDefault\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" EnumFindDirection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LessOrEqual\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("First"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstOrDefault\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Else")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("From enumValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        Where Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enumValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastOrDefault\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" EnumFindDirection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Greater\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Last"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastOrDefault\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Else")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("From enumValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        Where Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enumValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" value\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstOrDefault\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Case")]),t._v(" EnumFindDirection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GreaterOrEqual\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Last"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastOrDefault\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Else")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("From enumValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GetType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        Where Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToInt64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enumValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstOrDefault\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\n\n")])])]),a("p",[t._v("Usage Example:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v(" Bitrate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),t._v("\n    Kbps128 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v("\n    Kbps192 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),t._v("\n    Kbps256 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v("\n    Kbps320 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("320")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Enum")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" nearestValue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Bitrate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FindNearestEnumValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" Bitrate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("224")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EnumFindDirection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GreaterOrEqual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);