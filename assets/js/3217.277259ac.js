(window.webpackJsonp=window.webpackJsonp||[]).push([[3217],{3625:function(a,t,n){"use strict";n.r(t);var e=n(31),o=Object(e.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"package-scanning"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#package-scanning"}},[a._v("#")]),a._v(" Package scanning")]),a._v(" "),n("p",[a._v("In this topic I will overview spring boot package scanning.")]),a._v(" "),n("p",[a._v("You can find some basic information in spring boot docs in the following link ("),n("a",{attrs:{href:"http://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-structuring-your-code.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("using-boot-structuring-your-code"),n("OutboundLink")],1),a._v(") but I will try to provide more detailed information.")]),a._v(" "),n("p",[a._v("Spring boot, and spring in general, provide a feature to automatically scan packages for certain annotations in order to create "),n("code",[a._v("beans")]),a._v(" and "),n("code",[a._v("configuration")]),a._v(".")]),a._v(" "),n("h2",{attrs:{id:"componentscan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#componentscan"}},[a._v("#")]),a._v(" @ComponentScan")]),a._v(" "),n("p",[a._v("You can use "),n("code",[a._v("@ComponentScan")]),a._v(" in order to configure more complex package scanning. There is also "),n("code",[a._v("@ComponentScans")]),a._v(" that act as a container annotation that aggregates several "),n("code",[a._v("@ComponentScan")]),a._v(" annotations.")]),a._v(" "),n("p",[n("strong",[a._v("Basic code examples")])]),a._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ComponentScan")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DemoAutoConfiguration")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ComponentScans")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ComponentScan")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"com.example1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ComponentScan")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"com.example2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DemoAutoConfiguration")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),n("p",[a._v("Stating "),n("code",[a._v("@ComponentScan")]),a._v(" with no configuration acts like "),n("code",[a._v("@SpringBootApplication")]),a._v(" and scans all packages under the class annotated with this annotation.")]),a._v(" "),n("p",[a._v("In this example I will state some of the useful attributes of "),n("code",[a._v("@ComponentScan")]),a._v(":")]),a._v(" "),n("ol",[n("li",[n("strong",[a._v("basePackages")]),a._v(" - can be used to state specific packages to scan.")]),a._v(" "),n("li",[n("strong",[a._v("useDefaultFilters")]),a._v(" - by setting this attribute to false (defaults true) you can make sure spring does not scan "),n("code",[a._v("@Component")]),a._v(", "),n("code",[a._v("@Repository")]),a._v(", "),n("code",[a._v("@Service")]),a._v(", or "),n("code",[a._v("@Controller")]),a._v(" automatically.")]),a._v(" "),n("li",[n("strong",[a._v("includeFilters")]),a._v(" - can be used to "),n("strong",[a._v("include")]),a._v(" specific spring annotations / regex patterns to include in package scanning.")]),a._v(" "),n("li",[n("strong",[a._v("excludeFilters")]),a._v(" - can be used to "),n("strong",[a._v("exclude")]),a._v(" specific spring annotations / regex patterns to include in package scanning.")])]),a._v(" "),n("p",[a._v("There are many more attributes but those are the most commonly used in order to customize package scanning.")]),a._v(" "),n("h2",{attrs:{id:"creating-your-own-auto-configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-your-own-auto-configuration"}},[a._v("#")]),a._v(" Creating your own auto-configuration")]),a._v(" "),n("p",[a._v("Spring boot is based on a lot of pre-made auto-configuration parent projects. You should already be familiar with spring boot starter projects.")]),a._v(" "),n("p",[a._v("You can easily create your own starter project by doing the following easy steps:")]),a._v(" "),n("ol",[n("li",[a._v("Create some "),n("code",[a._v("@Configuration")]),a._v(" classes to define default beans. You should use external properties as much as possible to allow customization and try to use auto-configuration helper annotations like "),n("code",[a._v("@AutoConfigureBefore")]),a._v(", "),n("code",[a._v("@AutoConfigureAfter")]),a._v(", "),n("code",[a._v("@ConditionalOnBean")]),a._v(", "),n("code",[a._v("@ConditionalOnMissingBean")]),a._v(" etc. You can find more detailed information on each annotation in the official documentation "),n("a",{attrs:{href:"http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-auto-configuration.html#boot-features-condition-annotations",target:"_blank",rel:"noopener noreferrer"}},[a._v("Condition annotations"),n("OutboundLink")],1)]),a._v(" "),n("li",[a._v("Place an auto-configuration file/files that aggregates all of the "),n("code",[a._v("@Configuration")]),a._v(" classes.")]),a._v(" "),n("li",[a._v("Create a file named "),n("code",[a._v("spring.factories")]),a._v(" and place it in "),n("code",[a._v("src/main/resources/META-INF")]),a._v(".")]),a._v(" "),n("li",[a._v("In "),n("code",[a._v("spring.factories")]),a._v(", set "),n("code",[a._v("org.springframework.boot.autoconfigure.EnableAutoConfiguration")]),a._v(" property with comma separated values of your "),n("code",[a._v("@Configuration")]),a._v(" classes:")])]),a._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("boot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("autoconfigure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("EnableAutoConfiguration")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\\\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mycorp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("libx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("autoconfigure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("LibXAutoConfiguration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\\\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mycorp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("libx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("autoconfigure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("LibXWebAutoConfiguration")]),a._v("\n\n")])])]),n("p",[a._v("Using this method you can create your own auto-configuration classes that will be picked by spring-boot. Spring-boot automatically scan all maven/gradle dependencies for a "),n("code",[a._v("spring.factories")]),a._v(" file, if it finds one, it adds all "),n("code",[a._v("@Configuration")]),a._v(" classes specified in it to its auto-configuration process.")]),a._v(" "),n("p",[a._v("Make sure your "),n("code",[a._v("auto-configuration")]),a._v(" starter project does not contain "),n("code",[a._v("spring boot maven plugin")]),a._v(" because it will package the project as an executable JAR and won't be loaded by the classpath as intended - spring boot will not be able to find your "),n("code",[a._v("spring.factories")]),a._v(" and won't load your configuration")]),a._v(" "),n("h2",{attrs:{id:"springbootapplication"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springbootapplication"}},[a._v("#")]),a._v(" @SpringBootApplication")]),a._v(" "),n("p",[a._v("The most basic way to structure your code using spring boot for good automatic package scanning is using "),n("code",[a._v("@SpringBootApplication")]),a._v(" annotation. This annotation provide in itself 3 other annotations that helps with automatic scanning: "),n("code",[a._v("@SpringBootConfiguration")]),a._v(", "),n("code",[a._v("@EnableAutoConfiguration")]),a._v(", "),n("code",[a._v("@ComponentScan")]),a._v(" (more info about each annotation in the "),n("code",[a._v("Parameters")]),a._v(" section).")]),a._v(" "),n("p",[n("code",[a._v("@SpringBootApplication")]),a._v(" will usualy be placed in the main package and all other components will be placed in packages under this file:")]),a._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[a._v("com\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" example\n     "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" myproject\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Application")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("annotated "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("with")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SpringBootApplication")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" domain\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Customer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CustomerRepository")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" service\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("   "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CustomerService")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n         "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" web\n             "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CustomerController")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java\n\n")])])]),n("p",[a._v("Unless mentioned otherwise, spring boot detects "),n("code",[a._v("@Configuration")]),a._v(", "),n("code",[a._v("@Component")]),a._v(", "),n("code",[a._v("@Repository")]),a._v(", "),n("code",[a._v("@Service")]),a._v(", "),n("code",[a._v("@Controller")]),a._v(", "),n("code",[a._v("@RestController")]),a._v(" annotations automatically under the scanned packages ("),n("code",[a._v("@Configuration")]),a._v(" and "),n("code",[a._v("@RestController")]),a._v(" are being picked because they are annotated by "),n("code",[a._v("@Component")]),a._v(" and "),n("code",[a._v("@Controller")]),a._v(" accordingly).")]),a._v(" "),n("p",[n("strong",[a._v("Basic Code example:")])]),a._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SpringBootApplication")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Application")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SpringApplication")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Application")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),n("p",[n("strong",[a._v("Setting packages/classes explicitly")])]),a._v(" "),n("p",[a._v("Since version "),n("strong",[a._v("1.3")]),a._v(" you can also tell spring boot to scan specific packages by setting "),n("code",[a._v("scanBasePackages")]),a._v(" or "),n("code",[a._v("scanBasePackageClasses")]),a._v(" in "),n("code",[a._v("@SpringBootApplication")]),a._v(" instead of specifying "),n("code",[a._v("@ComponentScan")]),a._v(".")]),a._v(" "),n("ol",[n("li",[n("code",[a._v('@SpringBootApplication(scanBasePackages = "com.example.myproject")')]),a._v(" - set "),n("code",[a._v("com.example.myproject")]),a._v(" as the base package to scan.")]),a._v(" "),n("li",[n("code",[a._v("@SpringBootApplication(scanBasePackageClasses = CustomerController.class)")]),a._v(" - type-safe alternative to "),n("code",[a._v("scanBasePackages")]),a._v(" sets the package of "),n("code",[a._v("CustomerController.java")]),a._v(", "),n("code",[a._v("com.example.myproject.web")]),a._v(", as the base package to scan.")])]),a._v(" "),n("p",[n("strong",[a._v("Excluding auto-configuration")])]),a._v(" "),n("p",[a._v("Another important feature is the ability to exclude specific auto-configuration classes using "),n("code",[a._v("exclude")]),a._v(" or "),n("code",[a._v("excludeName")]),a._v(" ("),n("code",[a._v("excludeName")]),a._v(" exist since version "),n("strong",[a._v("1.3")]),a._v(").")]),a._v(" "),n("ol",[n("li",[n("code",[a._v("@SpringBootApplication(exclude = DemoConfiguration.class)")]),a._v(" - will exclude "),n("code",[a._v("DemoConfiguration")]),a._v(" from auto package scanning.")]),a._v(" "),n("li",[n("code",[a._v('@SpringBootApplication(excludeName = "DemoConfiguration")')]),a._v(" - will do the same using class fully classified name.")])]),a._v(" "),n("h4",{attrs:{id:"parameters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[a._v("Annotation")]),a._v(" "),n("th",[a._v("Details")])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("@SpringBootApplication")]),a._v(" "),n("td",[a._v("Main spring boot application annotation. used one time in the application, contains a main method, and act as main package for package scanning")])]),a._v(" "),n("tr",[n("td",[a._v("@SpringBootConfiguration")]),a._v(" "),n("td",[a._v("Indicates that a class provides Spring Boot application. Should be declared only once in the application, usually automatically by setting "),n("code",[a._v("@SpringBootApplication")])])]),a._v(" "),n("tr",[n("td",[a._v("@EnableAutoConfiguration")]),a._v(" "),n("td",[a._v("Enable auto-configuration of the Spring Application Context. Should be declared only once in the application, usually automatically by setting "),n("code",[a._v("@SpringBootApplication")])])]),a._v(" "),n("tr",[n("td",[a._v("@ComponentScan")]),a._v(" "),n("td",[a._v("Used to trigger automatic package scanning on a certain package and its children or to set custom package scanning")])]),a._v(" "),n("tr",[n("td",[a._v("@Configuration")]),a._v(" "),n("td",[a._v("Used to declare one or more "),n("code",[a._v("@Bean")]),a._v(" methods. Can be picked by auto package scanning in order to declare one or more "),n("code",[a._v("@Bean")]),a._v(" methods instead of traditional xml configuration")])]),a._v(" "),n("tr",[n("td",[a._v("@Bean")]),a._v(" "),n("td",[a._v("Indicates that a method produces a bean to be managed by the Spring container. Usually "),n("code",[a._v("@Bean")]),a._v(" annotated methods will be placed in "),n("code",[a._v("@Configuration")]),a._v(" annotated classes that will be picked by package scanning to create java configuration based beans.")])]),a._v(" "),n("tr",[n("td",[a._v("@Component")]),a._v(" "),n("td",[a._v("By declaring a class as a "),n("code",[a._v("@Component")]),a._v(" it becomes a candidates for auto-detection when using annotation-based configuration and classpath scanning. Usually a class annotated with "),n("code",[a._v("@Component")]),a._v(" will become a "),n("code",[a._v("bean")]),a._v(" in the application")])]),a._v(" "),n("tr",[n("td",[a._v("@Repository")]),a._v(" "),n("td",[a._v('Originally defined by Domain-Driven Design (Evans, 2003) as "a mechanism for encapsulating storage. It is usualy used to indicate a '),n("code",[a._v("Repository")]),a._v(" for "),n("code",[a._v("spring data")])])]),a._v(" "),n("tr",[n("td",[a._v("@Service")]),a._v(" "),n("td",[a._v("Very similar in practice to "),n("code",[a._v("@Component")]),a._v('. originally defined by Domain-Driven Design (Evans, 2003) as "an operation offered as an interface that stands alone in the model, with no encapsulated state."')])]),a._v(" "),n("tr",[n("td",[a._v("@Controller")]),a._v(" "),n("td",[a._v('Indicates that an annotated class is a "Controller" (e.g. a web controller).')])]),a._v(" "),n("tr",[n("td",[a._v("@RestController")]),a._v(" "),n("td",[a._v("A convenience annotation that is itself annotated with "),n("code",[a._v("@Controller")]),a._v(" and "),n("code",[a._v("@ResponseBody")]),a._v(". Will be automatically picked by default because it contains the "),n("code",[a._v("@Controller")]),a._v(" annotation that is picked by default.")])])])])])}),[],!1,null,null,null);t.default=o.exports}}]);