(window.webpackJsonp=window.webpackJsonp||[]).push([[3388],{3797:function(t,s,e){"use strict";e.r(s);var n=e(31),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"tsconfig-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tsconfig-json"}},[t._v("#")]),t._v(" tsconfig.json")]),t._v(" "),e("h2",{attrs:{id:"create-typescript-project-with-tsconfig-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-typescript-project-with-tsconfig-json"}},[t._v("#")]),t._v(" Create TypeScript project with tsconfig.json")]),t._v(" "),e("p",[t._v("The presence of a "),e("strong",[t._v("tsconfig.json")]),t._v(" file indicates that the current directory is the root of a TypeScript enabled project.")]),t._v(" "),e("p",[t._v("Initializing a TypeScript project, or better put tsconfig.json file, can be done through the following command:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("tsc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("init\n\n")])])]),e("p",[t._v("As of TypeScript v2.3.0 and higher this will create the following tsconfig.json by default:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compilerOptions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Basic Options */")]),t._v("                       \n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"target"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es5"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commonjs"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Specify module code generation: 'commonjs', 'amd', 'system', 'umd' or 'es2015'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "lib": [],                             /* Specify library files to be included in the compilation:  */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "allowJs": true,                       /* Allow javascript files to be compiled. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "checkJs": true,                       /* Report errors in .js files. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"jsx\": \"preserve\",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"declaration\": true,                   /* Generates corresponding '.d.ts' file. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"sourceMap\": true,                     /* Generates corresponding '.map' file. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "outFile": "./",                       /* Concatenate and emit output to single file. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "outDir": "./",                        /* Redirect output structure to the directory. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "removeComments": true,                /* Do not emit comments to output. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noEmit": true,                        /* Do not emit outputs. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"importHelpers\": true,                 /* Import emit helpers from 'tslib'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"downlevelIteration\": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"isolatedModules\": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */")]),t._v("\n                                              \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Strict Type-Checking Options */")]),t._v("        \n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strict"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Enable all strict type-checking options. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"noImplicitAny\": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "strictNullChecks": true,              /* Enable strict null checks. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"noImplicitThis\": true,                /* Raise error on 'this' expressions with an implied 'any' type. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */')]),t._v("\n                                              \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Additional Checks */")]),t._v("                   \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noUnusedLocals": true,                /* Report errors on unused locals. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noUnusedParameters": true,            /* Report errors on unused parameters. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */')]),t._v("\n                                              \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Module Resolution Options */")]),t._v("           \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"moduleResolution\": \"node\",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"paths\": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "typeRoots": [],                       /* List of folders to include type definitions from. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "types": [],                           /* Type declaration files to be included in compilation. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */')]),t._v("\n                                              \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Source Map Options */")]),t._v("                  \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \"inlineSources\": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */")]),t._v("\n                                              \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Experimental Options */")]),t._v("                \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[t._v("Most, if not all, options are generated automatically with only the bare necessities left uncommented.")]),t._v(" "),e("p",[t._v("Older versions of TypeScript, like for example v2.0.x and lower, would generate a tsconfig.json like this:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compilerOptions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commonjs"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"target"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es5"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noImplicitAny"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sourceMap"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"configuration-for-fewer-programming-errors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration-for-fewer-programming-errors"}},[t._v("#")]),t._v(" Configuration for fewer programming errors")]),t._v(" "),e("p",[t._v("There are very good configurations to force typings and get more helpful errors which are not activated by default.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compilerOptions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alwaysStrict"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Parse in strict mode and emit "use strict" for each source file. ')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// If you have wrong casing in referenced files e.g. the filename is Global.ts and you have a /// <reference path="global.ts" /> to reference this file, then this can cause to unexpected errors. Visite: http://stackoverflow.com/questions/36628612/typescript-transpiler-casing-issue')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"forceConsistentCasingInFileNames"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Disallow inconsistently-cased references to the same file.")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "allowUnreachableCode": false, // Do not report errors on unreachable code. (Default: False)')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "allowUnusedLabels": false, // Do not report errors on unused labels. (Default: False)')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noFallthroughCasesInSwitch"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Report errors for fall through cases in switch statement.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noImplicitReturns"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Report error when not all code paths in function return a value.")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noUnusedParameters"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Report errors on unused parameters.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noUnusedLocals"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Report errors on unused locals.")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noImplicitAny"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Raise error on expressions and declarations with an implied "any" type.')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noImplicitThis"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Raise error on this expressions with an implied "any" type.')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strictNullChecks"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The null and undefined values are not in the domain of every type and are only assignable to themselves and any.")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// To enforce this rules, add this configuration.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noEmitOnError"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not emit outputs if any errors were reported.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[t._v("Not enough? If you are a hard coder and want more, then you may be interested to check your TypeScript files with tslint before compiling it with tsc. Check how to "),e("a",{attrs:{href:"http://stackoverflow.com/documentation/typescript/7457/enforcing-code-style-guideline-with-tslint/25319/configuration-for-fewer-programming-errors#t=201611030920457805689",target:"_blank",rel:"noopener noreferrer"}},[t._v("configure tslint for even stricter code"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"compileonsave"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compileonsave"}},[t._v("#")]),t._v(" compileOnSave")]),t._v(" "),e("p",[t._v("Setting a top-level property "),e("code",[t._v("compileOnSave")]),t._v(" signals to the IDE to generate all files for a given "),e("strong",[t._v("tsconfig.json")]),t._v(" upon saving.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compileOnSave"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compilerOptions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exclude"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[t._v("This feature is available since TypeScript 1.8.4 and onward, but needs to be directly supported by IDE's. Currently, examples of supported IDE's are:")]),t._v(" "),e("ul",[e("li",[t._v("Visual Studio 2015 "),e("a",{attrs:{href:"https://github.com/Microsoft/TypeScript/issues/6782",target:"_blank",rel:"noopener noreferrer"}},[t._v("with Update 3"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.jetbrains.com/webstorm/2016/03/how-to-compile-typescript-in-webstorm/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JetBrains WebStorm"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Atom "),e("a",{attrs:{href:"https://github.com/TypeStrong/atom-typescript/blob/master/docs/tsconfig.md#compileonsave",target:"_blank",rel:"noopener noreferrer"}},[t._v("with atom-typescript"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"comments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#comments"}},[t._v("#")]),t._v(" Comments")]),t._v(" "),e("p",[t._v("A tsconfig.json file can contain both line and block comments, using the same rules as ECMAScript.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Leading comment")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compilerOptions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this is a line comment")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commonjs"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//eol line comment")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"target"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*inline block*/")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es5"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* This is a\n        block\n        comment */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* trailing comment */")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"preserveconstenums"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preserveconstenums"}},[t._v("#")]),t._v(" preserveConstEnums")]),t._v(" "),e("p",[t._v("Typescript supports costant enumerables, declared through "),e("code",[t._v("const enum")]),t._v(".")]),t._v(" "),e("p",[t._v("This is usually just syntax sugar as the costant enums are inlined in compiled JavaScript.")]),t._v(" "),e("p",[t._v("For instance the following code")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Tristate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    True"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    False"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Unknown\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" something "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("True"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("compiles to")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" something "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("Although the perfomance benefit from inlining, you may prefer to keep enums even if costant (ie: you may wish readability on development code), to do this you have to set in "),e("strong",[t._v("tsconfig.json")]),t._v(" the "),e("code",[t._v("preserveConstEnums")]),t._v(" clausole into the "),e("code",[t._v("compilerOptions")]),t._v(" to "),e("code",[t._v("true")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compilerOptions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"preserveConstEnums"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exclude"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[t._v("By this way the previous example would be compiled as any other enums, as shown in following snippet.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"True"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"True"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"False"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"False"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unknown"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unknown"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tristate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Tristate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" something "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Tristate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("True\n\n")])])]),e("h4",{attrs:{id:"syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),e("ul",[e("li",[t._v("Uses JSON file format")]),t._v(" "),e("li",[t._v("Can also accept JavaScript style comments")])]),t._v(" "),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),e("h3",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("p",[t._v("The presence of a tsconfig.json file in a directory indicates that the directory is the root of a TypeScript project. The tsconfig.json file specifies the root files and the compiler options required to compile the project.")]),t._v(" "),e("h3",{attrs:{id:"using-tsconfig-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-tsconfig-json"}},[t._v("#")]),t._v(" Using tsconfig.json")]),t._v(" "),e("ul",[e("li",[t._v("By invoking tsc with no input files, in which case the compiler searches for the tsconfig.json file starting in the current directory and continuing up the parent directory chain.\n")]),e("li",[t._v("By invoking tsc with no input files and a --project (or just -p) command line option that specifies the path of a directory containing a tsconfig.json file.\nWhen input files are specified on the command line, tsconfig.json files are")])]),t._v(" "),e("h3",{attrs:{id:"details"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#details"}},[t._v("#")]),t._v(" Details")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v('"compilerOptions"')]),t._v(" property can be omitted, in which case the compiler’s defaults are used. See our full list of supported "),e("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Compiler Options"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("If no "),e("code",[t._v('"files"')]),t._v(' property is present in a tsconfig.json, the compiler defaults to including all TypeScript (*.ts or *.tsx) files in the containing directory and subdirectories. When a "files" property is present, only the specified files are included.')]),t._v(" "),e("p",[t._v("If the "),e("code",[t._v('"exclude"')]),t._v(" property is specified, the compiler includes all TypeScript (*.ts or *.tsx) files in the containing directory and subdirectories except for those files or folders that are excluded.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v('"files"')]),t._v(' property cannot be used in conjunction with the "exclude" property. If both are specified then the "files" property takes precedence.')]),t._v(" "),e("p",[t._v("Any files that are referenced by those specified in the "),e("code",[t._v('"files"')]),t._v(' property are also included. Similarly, if a file B.ts is referenced by another file A.ts, then B.ts cannot be excluded unless the referencing file A.ts is also specified in the "exclude" list.')]),t._v(" "),e("p",[t._v("A "),e("code",[t._v("tsconfig.json")]),t._v(" file is permitted to be completely empty, which compiles all files in the containing directory and subdirectories with the default compiler options.")]),t._v(" "),e("p",[t._v("Compiler options specified on the command line override those specified in the tsconfig.json file.")]),t._v(" "),e("h3",{attrs:{id:"schema"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#schema"}},[t._v("#")]),t._v(" Schema")]),t._v(" "),e("p",[t._v("Schema can be found at: "),e("a",{attrs:{href:"http://json.schemastore.org/tsconfig",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://json.schemastore.org/tsconfig"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=a.exports}}]);