(window.webpackJsonp=window.webpackJsonp||[]).push([[2401],{2809:function(t,s,e){"use strict";e.r(s);var a=e(31),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"perl-testing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#perl-testing"}},[t._v("#")]),t._v(" Perl Testing")]),t._v(" "),e("h2",{attrs:{id:"perl-unit-testing-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#perl-unit-testing-example"}},[t._v("#")]),t._v(" Perl Unit Testing Example")]),t._v(" "),e("p",[t._v('The following is a simple example Perl test script, that gives some structure to allow for testing of other methods in the class/package under test.\nThe script produces standard output with simple "ok" / "not ok" text, which is called TAP (Test Anything Protocol).')]),t._v(" "),e("p",[t._v("Typically the "),e("a",{attrs:{href:"http://perldoc.perl.org/prove.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("prove"),e("OutboundLink")],1),t._v(" command runs the script(s) and summarises the test results.")]),t._v(" "),e("div",{staticClass:"language-perl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-perl"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/env perl")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPAN")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" Modern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Perl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" Carp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" Test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("More"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" Test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Exception"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" Const"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Fast"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Custom")]),t._v("\nBEGIN "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" use_ok"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Local::MyPackage'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconst "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PACKAGE_UNDER_TEST")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Local::MyPackage'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example test of method 'file_type_build'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sub")]),t._v(" test_file_type_build")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("%arg")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@_")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$label")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file_type_build'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$got_file_type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$filename")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/etc/passwd'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check the method call lives")]),t._v("\n    lives_ok"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sub")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$got_file_type")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PACKAGE_UNDER_TEST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("file_type_build"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                filename "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$filename")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$label - lives"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check the result of the method call matches our expected result.")]),t._v("\n    like"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$got_file_type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("qr{ASCII[ ]text}ix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$label - result"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## end sub test_file_type_build")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# More tests can be added here for method 'file_type_build', or other methods.")]),t._v("\n\n\nMAIN"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n   subtest "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file_type_build'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sub")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      test_file_type_build"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# More tests of the method can be added here.")]),t._v("\n      done_testing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Tests of other methods can be added here, just like above.")]),t._v("\n\n\n   done_testing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## end MAIN:")]),t._v("\n\n")])])]),e("p",[e("strong",[t._v("Best Practice")])]),t._v(" "),e("p",[t._v("A test script should only test one package/class, but there many scripts may be used to test a package/class.")]),t._v(" "),e("p",[e("strong",[t._v("Further Reading")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://perldoc.perl.org/Test/More.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Test::More"),e("OutboundLink")],1),t._v(" - The basic test operations.")]),t._v(" "),e("li",[e("a",{attrs:{href:"http://search.cpan.org/%7Eadie/Test-Exception/lib/Test/Exception.pm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Test::Exception"),e("OutboundLink")],1),t._v(" - Testing thrown exceptions.")]),t._v(" "),e("li",[e("a",{attrs:{href:"http://search.cpan.org/%7Edcantrell/Test-Differences/lib/Test/Differences.pm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Test::Differences"),e("OutboundLink")],1),t._v(" - Comparing test results that have complex data structures.")]),t._v(" "),e("li",[e("a",{attrs:{href:"http://search.cpan.org/%7Eether/Test-Class/lib/Test/Class.pm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Test::Class"),e("OutboundLink")],1),t._v(" - Class based testing rather than script. Similarities to JUnit.")]),t._v(" "),e("li",[e("a",{attrs:{href:"http://sqa.fyicenter.com/Perl_Test_Tutorial/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Perl Testing Tutorials"),e("OutboundLink")],1),t._v(" - Further reading.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);