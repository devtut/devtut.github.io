(window.webpackJsonp=window.webpackJsonp||[]).push([[3166],{3574:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nested-form-in-ruby-on-rails"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nested-form-in-ruby-on-rails"}},[t._v("#")]),t._v(" Nested form in Ruby on Rails")]),t._v(" "),a("h2",{attrs:{id:"how-to-setup-a-nested-form-in-ruby-on-rails"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-setup-a-nested-form-in-ruby-on-rails"}},[t._v("#")]),t._v(" How to setup a nested form in Ruby on Rails")]),t._v(" "),a("p",[t._v("The first to thing to have: a model that contains a "),a("code",[t._v("has_many")]),t._v(" relation with another model.")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Project")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationRecord")]),t._v("\n  has_many "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":todos")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Todo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationRecord")]),t._v("\n  belongs_to "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":project")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("In "),a("code",[t._v("ProjectsController")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProjectsController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@project")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("In a nested form, you can create child objects with a parent object at the same time.")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("%= nested_form_for @project do |f| %>\n  <%=")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("%>\n  <%= f.text_field :name %>")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now comes the part for `Todo` object %>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("%= f.fields_for :todo do |todo_field| %>\n    <%=")]),t._v(" todo_field"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("%>\n    <%= todo_field.text_field :name %>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("%>\n<% end %>")]),t._v("\n\n")])])]),a("p",[t._v("As we initialized "),a("code",[t._v("@project")]),t._v(" with "),a("code",[t._v("Project.new")]),t._v(" to have something for creating a new "),a("code",[t._v("Project")]),t._v(" object, same way for creating a "),a("code",[t._v("Todo")]),t._v(" object, we have to have something like this, and there are multiple ways to do so:")]),t._v(" "),a("li",[t._v("\nIn `Projectscontroller`, in `new` method, you can write: `@todo = @project.todos.build` or `@todo = @project.todos.new` to instantiate a new `Todo` object.\n")]),t._v(" "),a("li",[t._v("\nYou can also do this in view: `<%= f.fields_for :todos, @project.todos.build %>`\n")]),t._v(" "),a("p",[t._v("For strong params, you can include them in the following way:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("project_params")])]),t._v("\n  params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("permit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" todo_attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("Since, the "),a("code",[t._v("Todo")]),t._v(" objects will be created through the creation of a "),a("code",[t._v("Project")]),t._v(" object, so you have to specify this thing in "),a("code",[t._v("Project")]),t._v(" model by adding the following line:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("accepts_nested_attributes_for "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":todos")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);