(window.webpackJsonp=window.webpackJsonp||[]).push([[3168],{3576:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"prawn-pdf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prawn-pdf"}},[t._v("#")]),t._v(" Prawn PDF")]),t._v(" "),a("h2",{attrs:{id:"advanced-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-example"}},[t._v("#")]),t._v(" Advanced Example")]),t._v(" "),a("p",[t._v("This is the advanced approach with example")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FundsController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@funds")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Fund")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("all_funds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@fund")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Fund")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    respond_to "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html\n      format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pdf "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n        pdf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FundsPdf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@fund")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" view_context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        send_data pdf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fund_'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("#{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@fund")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created_at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strftime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d/%m/%Y"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("}")])]),t._v('.pdf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/pdf"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("  \n\n")])])]),a("p",[t._v("I above code we have this line "),a("code",[t._v("FundsPdf.new(@fund, view_context)")]),t._v(". Here we are initializing FundsPdf class with @fund instance and view_context to use helper methods in FundsPdf. FundsPdf wuld look like this")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\nclass FundPdf < Prawn::Document\n\n  def initialize(fund, view)\n    super()\n    @fund = fund\n    @view = view\n    upper_half\n    lower_half\n  end\n\n  def upper_half\n    logopath =  "#{Rails.root}/app/assets/images/logo.png"\n    image logopath, :width => 197, :height => 91\n    move_down 10\n    draw_text "Receipt", :at => [220, 575], size: 22\n    move_down 80\n    text "Hello #{@invoice.customer.profile.first_name.capitalize},"\n  end\n\n  def thanks_message\n    move_down 15\n    text "Thank you for your order.Print this receipt as \n    confirmation of your order.",\n    :indent_paragraphs => 40, :size => 13\n  end\nend \n\n')])])]),a("p",[t._v("This is one of the best approach to generate PDF with classes using Prawn gem.")]),t._v(" "),a("h2",{attrs:{id:"basic-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-example"}},[t._v("#")]),t._v(" Basic Example")]),t._v(" "),a("p",[t._v("You need to add Gem and PDF MIME:Type inside mime_types.rb as we need to notify rails about PDF mime type.")]),t._v(" "),a("p",[t._v("After that we can generate Pdf with Prawn in following basic ways")]),t._v(" "),a("h3",{attrs:{id:"this-is-the-basic-assignment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-is-the-basic-assignment"}},[t._v("#")]),t._v(" This is the basic assignment")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("pdf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Prawn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Document")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\npdf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\npdf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render_file "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"assignment.pdf"')]),t._v("\n\n")])])]),a("h3",{attrs:{id:"we-can-do-it-with-implicit-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#we-can-do-it-with-implicit-block"}},[t._v("#")]),t._v(" We can do it with Implicit Block")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Prawn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Document")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("generate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"implicit.pdf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n text "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"with-explicit-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with-explicit-block"}},[t._v("#")]),t._v(" With Explicit Block")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Prawn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Document")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("generate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"explicit.pdf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("pdf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n pdf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);