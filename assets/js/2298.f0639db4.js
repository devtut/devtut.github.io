(window.webpackJsonp=window.webpackJsonp||[]).push([[2298],{2706:function(t,a,e){"use strict";e.r(a);var n=e(31),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"nsattributedstring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nsattributedstring"}},[t._v("#")]),t._v(" NSAttributedString")]),t._v(" "),e("h2",{attrs:{id:"creating-a-string-that-has-custom-kerning-letter-spacing-editshare"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-string-that-has-custom-kerning-letter-spacing-editshare"}},[t._v("#")]),t._v(" Creating a string that has custom kerning (letter spacing) editshare")]),t._v(" "),e("p",[e("code",[t._v("NSAttributedString")]),t._v(" (and its mutable sibling "),e("code",[t._v("NSMutableAttributedString")]),t._v(")  allows you to create strings that are complex in their appearance to the user.")]),t._v(" "),e("p",[t._v("A common application is to use this to display a string and adding custom kerning / letter-spacing.")]),t._v(" "),e("p",[t._v("This would be achieved as follows (where label is a "),e("code",[t._v("UILabel")]),t._v('), giving a different kerning for the word "kerning"')]),t._v(" "),e("div",{staticClass:"language-objectivec extra-class"},[e("pre",{pre:!0,attrs:{class:"language-objectivec"}},[e("code",[t._v("NSMutableAttributedString "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("attributedString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nattributedString "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMutableAttributedString alloc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Apply kerning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attributedString addAttribute"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSKernAttributeName value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" range"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSMakeRange")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("label setAttributedText"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("attributedString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"create-a-string-with-text-struck-through"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-string-with-text-struck-through"}},[t._v("#")]),t._v(" Create a string with text struck through")]),t._v(" "),e("div",{staticClass:"language-objectivec extra-class"},[e("pre",{pre:!0,attrs:{class:"language-objectivec"}},[e("code",[t._v("NSMutableAttributedString "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("attributeString "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMutableAttributedString alloc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Your String here"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attributeString addAttribute"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSStrikethroughStyleAttributeName\n                    value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n                    range"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSMakeRange")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attributeString length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"using-enumerating-over-attributes-in-a-string-and-underline-part-of-string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-enumerating-over-attributes-in-a-string-and-underline-part-of-string"}},[t._v("#")]),t._v(" Using Enumerating over Attributes in a String and underline part of string")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\nNSMutableDictionary *attributesDictionary = [NSMutableDictionary dictionary];\n [attributesDictionary setObject:[UIFont systemFontOfSize:14] forKey:NSFontAttributeName];\n //[attributesDictionary setObject:[UIColor redColor] forKey:NSForegroundColorAttributeName];\n NSMutableAttributedString *attributedString = [[NSMutableAttributedString alloc]initWithString:@"Google www.google.com link" attributes:attributesDictionary];\n\n [attributedString enumerateAttribute:(NSString *) NSFontAttributeName\n                             inRange:NSMakeRange(0, [attributedString length])\n                             options:NSAttributedStringEnumerationLongestEffectiveRangeNotRequired\n                          usingBlock:^(id value, NSRange range, BOOL *stop) {\n                              NSLog(@"Attribute: %@, %@", value, NSStringFromRange(range));\n                             }];\n\n  NSMutableAttributedString *attributedStr = [[NSMutableAttributedString alloc] initWithString:@"www.google.com "];\n\n  [attributedString addAttribute:NSUnderlineStyleAttributeName\n                         value:[NSNumber numberWithInt:NSUnderlineStyleDouble]\n                         range:NSMakeRange(7, attributedStr.length)];\n\n  [attributedString addAttribute:NSForegroundColorAttributeName\n                         value:[UIColor blueColor]\n                         range:NSMakeRange(6,attributedStr.length)];\n\n  _attriLbl.attributedText = attributedString;//_attriLbl (of type UILabel) added in storyboard\n\n')])])]),e("p",[e("strong",[t._v("Output:")])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://i.stack.imgur.com/nqxsQ.png",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"http://i.stack.imgur.com/nqxsQ.png",alt:"enter image description here"}}),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"how-you-create-a-tri-color-attributed-string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-you-create-a-tri-color-attributed-string"}},[t._v("#")]),t._v(" How you create a tri-color attributed string.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\nNSMutableAttributedString * string = [[NSMutableAttributedString alloc] initWithString:@"firstsecondthird"];\n[string addAttribute:NSForegroundColorAttributeName value:[UIColor redColor] range:NSMakeRange(0,5)];\n[string addAttribute:NSForegroundColorAttributeName value:[UIColor greenColor] range:NSMakeRange(5,6)];\n[string addAttribute:NSForegroundColorAttributeName value:[UIColor blueColor] range:NSMakeRange(11,5)];\n\n')])])]),e("p",[t._v("Range : start to end string")]),t._v(" "),e("p",[t._v("Here we have firstsecondthird string so in first we have set range (0,5) so from starting first character to fifth character it will display in green text color.")])])}),[],!1,null,null,null);a.default=r.exports}}]);