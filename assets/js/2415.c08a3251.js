(window.webpackJsonp=window.webpackJsonp||[]).push([[2415],{2823:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"xml-parsing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xml-parsing"}},[t._v("#")]),t._v(" XML Parsing")]),t._v(" "),a("h2",{attrs:{id:"parsing-with-xml-twig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsing-with-xml-twig"}},[t._v("#")]),t._v(" Parsing with XML::Twig")]),t._v(" "),a("div",{staticClass:"language-perl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env perl")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" strict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" warnings "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" XML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Twig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$twig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" XML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Twig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("parse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("*DATA")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#we can use the 'root' method to find the root of the XML.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$twig")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#first_child finds the first child element matching a value.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$title")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("first_child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#text reads the text of the element.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$title_text")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$title")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Title is: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$title_text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#The above could be combined:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$twig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("first_child_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## You can use the 'children' method to iterate multiple items:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$twig")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("first_child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#children can optionally take an element 'tag' - otherwise it just returns all of them.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("children "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#the 'att' method reads an attribute")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Element with ID: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$element")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("att"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'none here'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" is "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$element")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#And if we need to do something more complicated, we an use 'xpath'.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#get_xpath or findnodes do the same thing:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#return a list of matches, or if you specify a second numeric argument, just that numbered match.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#xpath syntax is fairly extensive, but in this one - we search:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# anywhere in the tree: //")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nodes called 'item'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#with an id attribute [@id]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#and with that id attribute equal to "1000". ')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#by specifying '0' we say 'return just the first match'.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Item 1000 is: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$twig")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("get_xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//item[@id=\"1000\"]'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#this combines quite well with `map` to e.g. do the same thing on multiple items")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"All IDs:\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" join "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" att"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$twig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" get_xpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'//item'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#note how this also finds the item under 'summary', because of //")]),t._v("\n\n__DATA__\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("xml version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),t._v(" encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<root>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<title>")]),t._v("some sample xml"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</title>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("first key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v(" key2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<second>")]),t._v("Some text"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</second>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</first>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<third>")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("fourth key3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Text here too"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</fourth>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</third>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<list>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("item id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Item1"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</item>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("item id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Item2"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</item>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("item id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Item3"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</item>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("item id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"66"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Item66"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</item>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("item id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"88"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Item88"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</item>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("item id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Item100"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</item>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("item id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1000"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Item1000"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</item>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<notanitem>")]),t._v("Not an item at all really"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</notanitem>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</list>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<summary>")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("item id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no_id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Test"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</item>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</summary>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</root>")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"consuming-xml-with-xml-rabbit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consuming-xml-with-xml-rabbit"}},[t._v("#")]),t._v(" Consuming XML with XML::Rabbit")]),t._v(" "),a("p",[t._v("With "),a("a",{attrs:{href:"http://search.cpan.org/%7Erobins/XML-Rabbit/lib/XML/Rabbit.pm",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("XML::Rabbit")]),a("OutboundLink")],1),t._v(" it is possible to consume XML files easily. You "),a("strong",[t._v("define")]),t._v(" in a declarative way and with an XPath syntax what you are looking for in the XML and "),a("code",[t._v("XML::Rabbit")]),t._v(" will return objects according to the given definition.")]),t._v(" "),a("p",[a("strong",[t._v("Definition:")])]),t._v(" "),a("div",{staticClass:"language-perl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" Bookstore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" XML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_object_list books "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./book'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bookstore::Book'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfinalize_class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" Bookstore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Book"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" XML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value bookid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./@id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value author "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./author'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value genre "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./genre'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./price'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value publish_date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./publish_date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value description "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./description'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_object purchase_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./purchase_data'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bookstore::Purchase'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfinalize_class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" Bookstore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Purchase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" XML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./price'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhas_xpath_value date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfinalize_class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("XML Consumption:")])]),t._v(" "),a("div",{staticClass:"language-perl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" strict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" warnings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" Library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" feature "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("qw(say)")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" Carp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" autodie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Showing data information"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bookstore")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Bookstore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("new"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./sample.xml'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bookstore")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("books"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("bookid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Title: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Author: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("author"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("Notes:")])]),t._v(" "),a("p",[t._v("Please be careful with the following:")]),t._v(" "),a("li",[t._v("\nThe first class has to be `XML::Rabbit::Root`. It will place you inside the main tag of the XML document. In our case it will place us inside `"),a("catalog",[t._v("`\n")])],1),t._v(" "),a("li",[t._v("\nNested classes which are optional. Those classes need to be accessed via a try/catch (or `eval / $@` check) block. Optional fields will simply return `null`. For example, for `purchase_data` the loop would be:\n")]),t._v(" "),a("div",{staticClass:"language-perl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bookstore")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("books"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("bookid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Title: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Author: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("author"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    try "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Purchase price: "')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$book")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("purchase_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" catch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No purchase price available\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("sample.xml")])]),t._v(" "),a("div",{staticClass:"language-perl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("xml version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<catalog>")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("book id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bk101"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<author>")]),t._v("Gambardella"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Matthew"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</author>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<title>")]),t._v("XML Developer's Guide"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</title>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<genre>Computer</genre>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<price>44.95</price>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<publish_date>2000-10-01</publish_date>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<description>")]),t._v("An in"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("depth look at creating applications \n      with XML"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</description>")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</book>")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("book id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bk102"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<author>")]),t._v("Ralls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Kim"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</author>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<title>")]),t._v("Midnight Rain"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</title>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<genre>Fantasy</genre>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<price>5.95</price>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<publish_date>2000-12-16</publish_date>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<description>")]),t._v("A former architect battles corporate zombies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n      an evil sorceress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" her own childhood to become queen \n      of the world"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</description>")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</book>")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("book id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bk103"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<author>")]),t._v("Corets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Eva"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</author>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<title>")]),t._v("Maeve Ascendant"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</title>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<genre>Fantasy</genre>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<price>5.95</price>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<publish_date>2000-11-17</publish_date>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<description>")]),t._v("After the collapse of a nanotechnology \n      society in England"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" the young survivors lay the \n      foundation "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a new society"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</description>")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</book>")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("book id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bk104"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<author>")]),t._v("Corets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Eva"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</author>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<title>")]),t._v("Oberon's Legacy"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</title>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<genre>Fantasy</genre>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<price>5.95</price>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<publish_date>2001-03-10</publish_date>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<description>")]),t._v("In post"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("apocalypse England"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" the mysterious \n      agent known only as Oberon helps to create a new life \n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the inhabitants of London"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" Sequel to Maeve \n      Ascendant"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</description>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<purchase_data>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<date>2001-12-21</date>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("<price>20</price>")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</purchase_data>")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</book>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token filehandle symbol"}},[t._v("</catalog>")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"parsing-with-xml-libxml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsing-with-xml-libxml"}},[t._v("#")]),t._v(" Parsing with XML::LibXML")]),t._v(" "),a("div",{staticClass:"language-perl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This uses the 'sample.xml' given in the XML::Twig example.    ")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Module requirements (1.70 and above for use of load_xml)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" XML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("LibXML "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.70'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# let's be a good perl dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" strict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" warnings "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the LibXML Document Object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$xml")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" XML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("LibXML"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("new"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Where we are retrieving the XML from")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sample.xml'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load the XML from the file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dom")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" XML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("LibXML"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("load_xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    location "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the docroot")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dom")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("getDocumentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if the document has children")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("hasChildNodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# getElementsByLocalName returns a node list of all elements who's")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# localname matches 'title', and we want the first occurrence")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (via get_node(1))")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$title")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("getElementsByLocalName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("defined "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the first matched node out of the nodeList")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$title")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("get_node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the text of the target node")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$title_text")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("textContent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"The first node with name 'title' contains: $title_text\\n\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The above calls can be combined, but is possibly prone to errors")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (if the getElementsByLocalName() failed to match a node).")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# my $title_text = $root->getElementsByLocalName('title')->get_node(1)->textContent;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Using Xpath, get the price of the book with id 'bk104'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set our xpath")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$xpath")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("q!/catalog/book[@id='bk104']/price!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Does that xpath exist?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("exists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$xpath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pull in the twig")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$match")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$xpath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("defined "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the first matched node out of the nodeList")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$match")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("get_node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pull in the text of that node")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("my")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$match_text")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$node")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("textContent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The price of the book with id bk104 is: $match_text\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);