(window.webpackJsonp=window.webpackJsonp||[]).push([[1995],{2402:function(a,s,t){"use strict";t.r(s);var e=t(31),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"dbcc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbcc"}},[a._v("#")]),a._v(" DBCC")]),a._v(" "),t("h2",{attrs:{id:"dbcc-maintenance-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbcc-maintenance-commands"}},[a._v("#")]),a._v(" DBCC maintenance commands")]),a._v(" "),t("p",[a._v("DBCC commands enable user to maintain space in database, clean caches, shrink databases and tables.")]),a._v(" "),t("p",[a._v("Examples are:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" DROPCLEANBUFFERS \n\n")])])]),t("p",[a._v("Removes all clean buffers from the buffer pool, and columnstore objects from the columnstore object pool.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" FREEPROCCACHE\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- or")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" FREEPROCCACHE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x060006001ECA270EC0215D05000000000000000000000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),t("p",[a._v("Removes all SQL query in plan cache. Every new plan will be recompiled:\nYou can specify plan handle, query handle to clean plans for the specific query plan or SQL statement.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" FREESYSTEMCACHE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ALL'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" myresourcepool"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- or")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" FREESYSTEMCACHE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),t("p",[a._v("Cleans all cached entries created by system. It can clean entries o=in all or some specified resource pool ("),t("strong",[a._v("myresourcepool")]),a._v(" in the example above)")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" FLUSHAUTHCACHE \n\n")])])]),t("p",[a._v("Empties the database authentication cache containing information about logins and firewall rules.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" SHRINKDATABASE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("MyDB "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n\n")])])]),t("p",[a._v("Shrinks database MyDB to 10%. Second parameter is optional. You can use database id instead of name.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" SHRINKFILE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("DataFile1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n\n")])])]),t("p",[a._v("Shrinks data file named DataFile1 in the current database. Target size is 7 MB (tis parameter is optional).")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" CLEANTABLE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("AdventureWorks2012"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Production.Document'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n\n")])])]),t("p",[a._v("Reclaims a space from specified table")]),a._v(" "),t("h2",{attrs:{id:"dbcc-validation-statements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbcc-validation-statements"}},[a._v("#")]),a._v(" DBCC validation statements")]),a._v(" "),t("p",[a._v("DBCC commands enable user to validate state of database.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" Table1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WITH")]),a._v(" NOCHECK "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CONSTRAINT")]),a._v(" chkTab1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CHECK")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Col1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \nGO  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" CHECKCONSTRAINTS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Table1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--OR")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" CHECKCONSTRAINTS "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Table1.chkTable1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n\n")])])]),t("p",[a._v("Check constraint is added with nocheck options, so it will not be checked on existing data. DBCC will trigger constraint check.")]),a._v(" "),t("p",[a._v("Following DBCC commands check integrity of database, table or catalog:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" CHECKTABLE tablename1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" tableid\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" CHECKDB databasename1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" dbid\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" CHECKFILEGROUP filegroup_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" filegroup_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" CHECKCATALOG databasename1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" database_id1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"dbcc-informational-statements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbcc-informational-statements"}},[a._v("#")]),a._v(" DBCC informational statements")]),a._v(" "),t("p",[a._v("DBCC commands can show information about database objects.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" PROCCACHE\n\n")])])]),t("p",[a._v("Displays information in a table format about the procedure cache.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" OUTPUTBUFFER "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" session_id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" request_id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  \n\n")])])]),t("p",[a._v("Returns the current output buffer in hexadecimal and ASCII format for the specified session_id (and optional request_id).")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" INPUTBUFFER "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" session_id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" request_id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  \n\n")])])]),t("p",[a._v("Displays the last statement sent from a client to an instance of Microsoft SQL Server.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" SHOW_STATISTICS "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" table_or_indexed_view_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" column_statistic_or_index_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"dbcc-trace-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbcc-trace-commands"}},[a._v("#")]),a._v(" DBCC Trace commands")]),a._v(" "),t("p",[a._v("Trace flags in SQL Server are used to modify behavior of SQL server, turn on/off some features. DBCC commands can control trace flags:")]),a._v(" "),t("p",[a._v("The following example switches on trace flag 3205 globally and 3206 for the current session:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" TRACEON "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3205")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" TRACEON "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3206")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),t("p",[a._v("The following example switches off trace flag 3205 globally and 3206 for the current session:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" TRACEON "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3205")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" TRACEON "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3206")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),t("p",[a._v("The following example displays the status of trace flags 2528 and 3205:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" TRACESTATUS "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2528")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3205")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n\n")])])]),t("h2",{attrs:{id:"dbcc-statement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbcc-statement"}},[a._v("#")]),a._v(" DBCC statement")]),a._v(" "),t("p",[a._v("DBCC statements act as Database Console Commands for SQL Server.\nTo get the syntax information for the specified DBCC command use DBCC HELP (...) statement.")]),a._v(" "),t("p",[a._v("The following example returns all DBCC statements for which Help is available:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" HELP "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'?'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n\n")])])]),t("p",[a._v("The following example returns options for DBCC CHECKDB statement:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DBCC")]),a._v(" HELP "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'CHECKDB'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);