(window.webpackJsonp=window.webpackJsonp||[]).push([[1514],{1922:function(t,e,a){"use strict";a.r(e);var n=a(31),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"alternative-collections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alternative-collections"}},[t._v("#")]),t._v(" Alternative Collections")]),t._v(" "),a("h2",{attrs:{id:"multimap-in-guava-apache-and-eclipse-collections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multimap-in-guava-apache-and-eclipse-collections"}},[t._v("#")]),t._v(" Multimap in Guava, Apache and Eclipse Collections")]),t._v(" "),a("p",[t._v("This multimap allows duplicate key-value pairs. JDK analogs are HashMap<K, List>, HashMap<K, Set> and so on.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Key's order")]),t._v(" "),a("th",[t._v("Value's order")]),t._v(" "),a("th",[t._v("Duplicate")]),t._v(" "),a("th",[t._v("Analog key")]),t._v(" "),a("th",[t._v("Analog value")]),t._v(" "),a("th",[t._v("Guava")]),t._v(" "),a("th",[t._v("Apache")]),t._v(" "),a("th",[t._v("Eclipse (GS) Collections")]),t._v(" "),a("th",[t._v("JDK")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("not defined")]),t._v(" "),a("td",[t._v("Insertion-order")]),t._v(" "),a("td",[t._v("yes")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ArrayList"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ArrayListMultimap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ArrayListMultimap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("code",[t._v("MultiValueMap")])]),t._v(" "),a("td",[a("code",[t._v("FastListMultimap")])]),t._v(" "),a("td",[a("code",[t._v("HashMap<K, ArrayList<V>>")])])]),t._v(" "),a("tr",[a("td",[t._v("not defined")]),t._v(" "),a("td",[t._v("not defined")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/HashSet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashSet"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/HashMultimap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMultimap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("code",[t._v("MultiValueMap. multiValueMap( new HashMap<K, Set>(), HashSet.class);")])]),t._v(" "),a("td",[a("code",[t._v("UnifiedSetMultimap")])]),t._v(" "),a("td",[a("code",[t._v("HashMap<K, HashSet<V>>")])])]),t._v(" "),a("tr",[a("td",[t._v("not defined")]),t._v(" "),a("td",[t._v("sorted")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/TreeSet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeSet"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("code",[t._v("Multimaps. newMultimap( HashMap, Supplier <TreeSet>)")])]),t._v(" "),a("td",[a("code",[t._v("MultiValueMap.multiValueMap( new HashMap<K, Set>(), TreeSet.class)")])]),t._v(" "),a("td",[a("code",[t._v("TreeSortedSet- Multimap")])]),t._v(" "),a("td",[a("code",[t._v("HashMap<K, TreeSet<V>>")])])]),t._v(" "),a("tr",[a("td",[t._v("Insertion-order")]),t._v(" "),a("td",[t._v("Insertion-order")]),t._v(" "),a("td",[t._v("yes")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedHashMap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ArrayList"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/LinkedListMultimap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedListMultimap"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("MultiValueMap. multiValueMap(new LinkedHashMap<K, List>(), ArrayList.class);")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("LinkedHashMap< K, ArrayList>")])]),t._v(" "),a("tr",[a("td",[t._v("Insertion-order")]),t._v(" "),a("td",[t._v("Insertion-order")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedHashMap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashSet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedHashSet"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/LinkedHashMultimap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedHashMultimap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("code",[t._v("MultiValueMap. multiValueMap(new LinkedHashMap<K, Set>(), LinkedHashSet.class)")])]),t._v(" "),a("td"),t._v(" "),a("td",[a("code",[t._v("LinkedHashMap<K, LinkedHashSet<V>>")])])]),t._v(" "),a("tr",[a("td",[t._v("sorted")]),t._v(" "),a("td",[t._v("sorted")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/TreeMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeMap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/TreeSet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeSet"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/TreeMultimap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeMultimap"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("code",[t._v("MultiValueMap. multiValueMap( new TreeMap<K, Set>(),TreeSet.class)")])]),t._v(" "),a("td"),t._v(" "),a("td",[a("code",[t._v("TreeMap<K, TreeSet<V>>")])])])])]),t._v(" "),a("p",[a("strong",[t._v("Task")]),t._v(': Parse "Hello World! Hello All! Hi World!" string to separate words and print all indexes of every word using MultiMap (for example, Hello=[0, 2], World!=[1, 5] and so on)')]),t._v(" "),a("p",[a("strong",[t._v("1. MultiValueMap from  Apache")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n   String INPUT_TEXT = "Hello World! Hello All! Hi World!";\n    // Parse text to words and index\n    List<String> words = Arrays.asList(INPUT_TEXT.split(" "));\n    // Create Multimap\n    MultiMap<String, Integer> multiMap = new MultiValueMap<String, Integer>();\n\n\n    // Fill Multimap\n    int i = 0;\n    for(String word: words) {\n        multiMap.put(word, i);\n        i++;\n    }\n\n    // Print all words\n    System.out.println(multiMap); // print {Hi=[4], Hello=[0, 2], World!=[1, 5], All!=[3]} - in random orders\n    // Print all unique words\n    System.out.println(multiMap.keySet());    // print [Hi, Hello, World!, All!] - in random orders\n\n    // Print all indexes\n    System.out.println("Hello = " + multiMap.get("Hello"));    // print [0, 2]\n    System.out.println("World = " + multiMap.get("World!"));    // print [1, 5]\n    System.out.println("All = " + multiMap.get("All!"));    // print [3]\n    System.out.println("Hi = " + multiMap.get("Hi"));    // print [4]\n    System.out.println("Empty = " + multiMap.get("Empty"));    // print null\n\n    // Print count unique words\n    System.out.println(multiMap.keySet().size());    //print 4\n\n')])])]),a("p",[a("strong",[t._v("2. HashBiMap from GS / Eclipse Collection")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n   String[] englishWords = {"one", "two", "three","ball","snow"};\n    String[] russianWords = {"jeden", "dwa", "trzy", "kula", "snieg"};\n\n    // Create Multiset\n    MutableBiMap<String, String> biMap = new HashBiMap(englishWords.length);\n    // Create English-Polish dictionary\n    int i = 0;\n    for(String englishWord: englishWords) {\n        biMap.put(englishWord, russianWords[i]);\n        i++;\n    }\n\n    // Print count words\n    System.out.println(biMap); // print {two=dwa, ball=kula, one=jeden, snow=snieg, three=trzy} - in random orders\n    // Print all unique words\n    System.out.println(biMap.keySet());    // print [snow, two, one, three, ball] - in random orders\n    System.out.println(biMap.values());    // print [dwa, kula, jeden, snieg, trzy] - in random orders\n\n    // Print translate by words\n    System.out.println("one = " + biMap.get("one"));    // print one = jeden\n    System.out.println("two = " + biMap.get("two"));    // print two = dwa\n    System.out.println("kula = " + biMap.inverse().get("kula"));    // print kula = ball\n    System.out.println("snieg = " + biMap.inverse().get("snieg"));    // print snieg = snow\n    System.out.println("empty = " + biMap.get("empty"));    // print empty = null\n\n    // Print count word\'s pair\n    System.out.println(biMap.size());    //print 5\n\n')])])]),a("li",[t._v("\nHashMultiMap from Guava\n"),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" INPUT_TEXT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World! Hello All! Hi World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Parse text to words and index")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" words "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INPUT_TEXT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create Multimap")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Multimap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" multiMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMultimap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fill Multimap")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" word"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" words"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print all words")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print {Hi=[4], Hello=[0, 2], World!=[1, 5], All!=[3]} - keys and values in random orders")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print all unique words")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keySet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print [Hi, Hello, World!, All!] - in random orders")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print all indexes")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print [0, 2]")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print [1, 5]")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"All = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"All!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print [3]")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print [4]")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Empty = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Empty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print []")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print count all words")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//print 6")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print count unique words")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("multiMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keySet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//print 4")]),t._v("\n\n")])])])]),t._v(" "),a("h3",{attrs:{id:"nore-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nore-examples"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Nore examples:")])]),t._v(" "),a("p",[a("strong",[t._v("I. Apache Collection:")])]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/ApacheMultiValueMapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("MultiValueMap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/ApacheMultiValueMapLinkedTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("MultiValueMapLinked"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/ApacheMultiValueMapTreeTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("MultiValueMapTree"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("II. GS / Eclipse Collection")])]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/gs-eclipse/src/GsFastListMultimapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("FastListMultimap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/gs-eclipse/src/GsHashBiMapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashBagMultimap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/gs-eclipse/src/GsTreeSortedSetMultimapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeSortedSetMultimap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/gs-eclipse/src/GsUnifiedSetMultimapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("UnifiedSetMultimap"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("III. Guava")])]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections//src/HashMultiMapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMultiMap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections//src/LinkedHashMultimapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedHashMultimap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections//src/LinkedListMultimapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedListMultimap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections//src/TreeMultimapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeMultimap"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections//src/ArrayListMultimapTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ArrayListMultimap"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"apache-hashbag-guava-hashmultiset-and-eclipse-hashbag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache-hashbag-guava-hashmultiset-and-eclipse-hashbag"}},[t._v("#")]),t._v(" Apache HashBag, Guava HashMultiset and Eclipse HashBag")]),t._v(" "),a("p",[t._v("A Bag/ultiset stores each object in the collection together with a count of occurrences. Extra methods on the interface allow multiple copies of an object to be added or removed at once. JDK analog is HashMap<T, Integer>, when values is count of copies this key.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("Type")])]),t._v(" "),a("th",[a("strong",[t._v("Guava")])]),t._v(" "),a("th",[a("strong",[t._v("Apache Commons Collections")])]),t._v(" "),a("th",[a("strong",[t._v("GS Collections")])]),t._v(" "),a("th",[a("strong",[t._v("JDK")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Order not defined")]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/HashMultiset.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMultiset"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://commons.apache.org/proper/commons-collections/javadocs/api-3.2.1/org/apache/commons/collections/bag/HashBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://www.goldmansachs.com/gs-collections/javadoc/6.1.0/com/gs/collections/impl/bag/mutable/HashBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMap"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v("Sorted")]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/TreeMultiset.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeMultiset"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://commons.apache.org/proper/commons-collections/javadocs/api-3.2.1/org/apache/commons/collections/TreeBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://www.goldmansachs.com/gs-collections/javadoc/6.1.0/com/gs/collections/impl/bag/sorted/mutable/TreeBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/TreeMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeMap"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v("Insertion-order")]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/LinkedHashMultiset.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedHashMultiset"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashMap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedHashMap"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v("Concurrent variant")]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ConcurrentHashMultiset.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConcurrentHashMultiset"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://commons.apache.org/proper/commons-collections/javadocs/api-3.2.1/org/apache/commons/collections/bag/SynchronizedBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SynchronizedBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://www.goldmansachs.com/gs-collections/javadoc/6.1.0/com/gs/collections/impl/bag/mutable/SynchronizedBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SynchronizedBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("code",[t._v("Collections.synchronizedMap(HashMap<String, Integer>)")])])]),t._v(" "),a("tr",[a("td",[t._v("Concurrent and sorted")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[a("a",{attrs:{href:"http://commons.apache.org/proper/commons-collections/javadocs/api-3.2.1/org/apache/commons/collections/bag/SynchronizedSortedBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SynchronizedSortedBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://www.goldmansachs.com/gs-collections/javadoc/6.1.0/com/gs/collections/impl/bag/sorted/mutable/SynchronizedSortedBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SynchronizedSortedBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("code",[t._v("Collections.synchronizedSortedMap(TreeMap<String,Integer>)")])])]),t._v(" "),a("tr",[a("td",[t._v("Immutable collection")]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableMultiset.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ImmutableMultiset"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://commons.apache.org/proper/commons-collections/javadocs/api-3.2.1/org/apache/commons/collections/bag/UnmodifiableBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("UnmodifiableBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://www.goldmansachs.com/gs-collections/javadoc/6.1.0/com/gs/collections/impl/bag/mutable/UnmodifiableBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("UnmodifiableBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("code",[t._v("Collections.unmodifiableMap(HashMap<String, Integer)]")])])]),t._v(" "),a("tr",[a("td",[t._v("Immutable and sorted")]),t._v(" "),a("td",[a("a",{attrs:{href:"http://google.github.io/guava/releases/snapshot/api/docs/com/google/common/collect/ImmutableSortedMultiset.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ImmutableSortedMultiset"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"http://commons.apache.org/proper/commons-collections/javadocs/api-3.2.1/org/apache/commons/collections/bag/UnmodifiableSortedBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("UnmodifiableSortedBag"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("UnmodifiableSortedBag")]),t._v(" "),a("td",[a("code",[t._v("Collections.unmodifiableSortedMap(TreeMap<String, Integer>")]),t._v(")")])])])]),t._v(" "),a("p",[a("strong",[t._v("Examples")]),t._v(":")]),t._v(" "),a("h3",{attrs:{id:"_1-using-synchronizedsortedbag-from-apache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-using-synchronizedsortedbag-from-apache"}},[t._v("#")]),t._v(" 1. "),a("a",{attrs:{href:"http://www.goldmansachs.com/gs-collections/javadoc/6.1.0/com/gs/collections/impl/bag/sorted/mutable/SynchronizedSortedBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Using SynchronizedSortedBag from Apache"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n   // Parse text to separate words\n    String INPUT_TEXT = "Hello World! Hello All! Hi World!";\n    // Create Multiset\n    Bag bag = SynchronizedSortedBag.synchronizedBag(new TreeBag(Arrays.asList(INPUT_TEXT.split(" "))));\n\n    // Print count words\n    System.out.println(bag); // print [1:All!,2:Hello,1:Hi,2:World!]- in natural (alphabet) order\n    // Print all unique words\n    System.out.println(bag.uniqueSet());    // print [All!, Hello, Hi, World!]- in natural (alphabet) order\n\n\n    // Print count occurrences of words\n    System.out.println("Hello = " + bag.getCount("Hello"));    // print 2\n    System.out.println("World = " + bag.getCount("World!"));    // print 2\n    System.out.println("All = " + bag.getCount("All!"));    // print 1\n    System.out.println("Hi = " + bag.getCount("Hi"));    // print 1\n    System.out.println("Empty = " + bag.getCount("Empty"));    // print 0\n\n    // Print count all words\n    System.out.println(bag.size());    //print 6\n\n    // Print count unique words\n    System.out.println(bag.uniqueSet().size());    //print 4\n\n')])])]),a("h3",{attrs:{id:"_2-using-treebag-from-eclipse-gc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-using-treebag-from-eclipse-gc"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"http://www.goldmansachs.com/gs-collections/javadoc/6.1.0/com/gs/collections/impl/bag/sorted/mutable/TreeBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("2. Using TreeBag from Eclipse(GC)"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n   // Parse text to separate words\n    String INPUT_TEXT = "Hello World! Hello All! Hi World!";\n    // Create Multiset\n    MutableSortedBag<String> bag =  TreeBag.newBag(Arrays.asList(INPUT_TEXT.split(" ")));\n\n    // Print count words\n    System.out.println(bag); // print [All!, Hello, Hello, Hi, World!, World!]- in natural order\n    // Print all unique words\n    System.out.println(bag.toSortedSet());    // print [All!, Hello, Hi, World!]- in natural order\n\n    // Print count occurrences of words\n    System.out.println("Hello = " + bag.occurrencesOf("Hello"));    // print 2\n    System.out.println("World = " + bag.occurrencesOf("World!"));    // print 2\n    System.out.println("All = " + bag.occurrencesOf("All!"));    // print 1\n    System.out.println("Hi = " + bag.occurrencesOf("Hi"));    // print 1\n    System.out.println("Empty = " + bag.occurrencesOf("Empty"));    // print 0\n\n    // Print count all words\n    System.out.println(bag.size());    //print 6\n\n    // Print count unique words\n    System.out.println(bag.toSet().size());    //print 4\n\n')])])]),a("h3",{attrs:{id:"_3-using-linkedhashmultiset-from-guava"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-using-linkedhashmultiset-from-guava"}},[t._v("#")]),t._v(" 3. "),a("a",{attrs:{href:"http://www.goldmansachs.com/gs-collections/javadoc/6.1.0/com/gs/collections/impl/bag/sorted/mutable/SynchronizedSortedBag.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Using LinkedHashMultiset from Guava"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n   // Parse text to separate words\n    String INPUT_TEXT = "Hello World! Hello All! Hi World!";\n    // Create Multiset\n    Multiset<String> multiset = LinkedHashMultiset.create(Arrays.asList(INPUT_TEXT.split(" ")));\n\n    // Print count words\n    System.out.println(multiset); // print [Hello x 2, World! x 2, All!, Hi]- in predictable iteration order\n    // Print all unique words\n    System.out.println(multiset.elementSet());    // print [Hello, World!, All!, Hi] - in predictable iteration order\n\n    // Print count occurrences of words\n    System.out.println("Hello = " + multiset.count("Hello"));    // print 2\n    System.out.println("World = " + multiset.count("World!"));    // print 2\n    System.out.println("All = " + multiset.count("All!"));    // print 1\n    System.out.println("Hi = " + multiset.count("Hi"));    // print 1\n    System.out.println("Empty = " + multiset.count("Empty"));    // print 0\n\n    // Print count all words\n    System.out.println(multiset.size());    //print 6\n\n    // Print count unique words\n    System.out.println(multiset.elementSet().size());    //print 4\n\n')])])]),a("h3",{attrs:{id:"more-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#more-examples"}},[t._v("#")]),t._v(" "),a("strong",[t._v("More examples:")])]),t._v(" "),a("p",[a("strong",[t._v("I. Apache Collection:")])]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/ApacheHashBagTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashBag"),a("OutboundLink")],1),t._v(" - order not defined")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/ApacheSynchronizedBagTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("SynchronizedBag"),a("OutboundLink")],1),t._v(" - concurrent and order not defined")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/ApacheSynchronizedSortedBagTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("SynchronizedSortedBag"),a("OutboundLink")],1),t._v(" - - concurrent and sorted order")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/ApacheTreeBagTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeBag"),a("OutboundLink")],1),t._v(" - sorted order")])]),t._v(" "),a("p",[a("strong",[t._v("II. GS / Eclipse Collection")])]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/gs-eclipse/src/GsMutableBagTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("MutableBag"),a("OutboundLink")],1),t._v(" - order not defined")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/gs-eclipse/src/GsMutableSortedBagTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("MutableSortedBag"),a("OutboundLink")],1),t._v(" - sorted order")])]),t._v(" "),a("p",[a("strong",[t._v("III. Guava")])]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/guava/src/GuavaHashMultisetTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashMultiset"),a("OutboundLink")],1),t._v(" - order not defined")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections//src/TreeMultisetTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("TreeMultiset"),a("OutboundLink")],1),t._v(" - sorted order")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections//src/LinkedHashMultisetTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("LinkedHashMultiset"),a("OutboundLink")],1),t._v(" - insertion order")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections//src/ConcurrentHashMultisetTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConcurrentHashMultiset"),a("OutboundLink")],1),t._v(" - concurrent and order not defined")])]),t._v(" "),a("h2",{attrs:{id:"compare-operation-with-collections-create-collections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compare-operation-with-collections-create-collections"}},[t._v("#")]),t._v(" Compare operation with collections - Create collections")]),t._v(" "),a("h3",{attrs:{id:"compare-operation-with-collections-create-collections-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compare-operation-with-collections-create-collections-2"}},[t._v("#")]),t._v(" Compare operation with collections - Create collections")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("JDK")]),t._v(" "),a("th",[t._v("guava")]),t._v(" "),a("th",[t._v("gs-collections")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Create empty list")]),t._v(" "),a("td",[a("code",[t._v("new ArrayList<>")]),t._v("()")]),t._v(" "),a("td",[a("code",[t._v("Lists.newArrayList()")])]),t._v(" "),a("td",[a("code",[t._v("FastList.newList()")])])]),t._v(" "),a("tr",[a("td",[t._v("Create list from values")]),t._v(" "),a("td",[a("code",[t._v('Arrays.asList("1", "2", "3")')])]),t._v(" "),a("td",[a("code",[t._v('Lists.newArrayList("1", "2", "3")')])]),t._v(" "),a("td",[a("code",[t._v('FastList.newListWith("1", "2", "3")')])])]),t._v(" "),a("tr",[a("td",[t._v("Create list with capacity = 100")]),t._v(" "),a("td",[a("code",[t._v("new ArrayList<>(100)")])]),t._v(" "),a("td",[a("code",[t._v("Lists.newArrayListWithCapacity(100)")])]),t._v(" "),a("td",[a("code",[t._v("FastList.newList(100)")])])]),t._v(" "),a("tr",[a("td",[t._v("Create list from any collectin")]),t._v(" "),a("td",[a("code",[t._v("new ArrayList<>(collection)")])]),t._v(" "),a("td",[a("code",[t._v("Lists.newArrayList(collection)")])]),t._v(" "),a("td",[a("code",[t._v("FastList.newList(collection)")])])]),t._v(" "),a("tr",[a("td",[t._v("Create list from any Iterable")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[a("code",[t._v("Lists.newArrayList(iterable)")])]),t._v(" "),a("td",[a("code",[t._v("FastList.newList(iterable)")])])]),t._v(" "),a("tr",[a("td",[t._v("Create list from Iterator")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[a("code",[t._v("Lists.newArrayList(iterator)")])]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("Create list from array")]),t._v(" "),a("td",[a("code",[t._v("Arrays.asList(array)")])]),t._v(" "),a("td",[a("code",[t._v("Lists.newArrayList(array)")])]),t._v(" "),a("td",[a("code",[t._v("FastList.newListWith(array)")])])]),t._v(" "),a("tr",[a("td",[t._v("Create list using factory")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[a("code",[t._v('FastList.newWithNValues(10, () -> "1")')])])])])]),t._v(" "),a("p",[a("strong",[t._v("Examples:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n   System.out.println("createArrayList start");\n    // Create empty list\n    List<String> emptyGuava = Lists.newArrayList(); // using guava\n    List<String> emptyJDK = new ArrayList<>(); // using JDK\n    MutableList<String>  emptyGS = FastList.newList(); // using gs\n\n    // Create list with 100 element\n    List < String > exactly100 = Lists.newArrayListWithCapacity(100); // using guava\n    List<String> exactly100JDK = new ArrayList<>(100); // using JDK\n    MutableList<String>  empty100GS = FastList.newList(100); // using gs\n\n    // Create list with about 100 element\n    List<String> approx100 = Lists.newArrayListWithExpectedSize(100); // using guava\n    List<String> approx100JDK = new ArrayList<>(115); // using JDK\n    MutableList<String>  approx100GS = FastList.newList(115); // using gs\n\n    // Create list with some elements\n    List<String> withElements = Lists.newArrayList("alpha", "beta", "gamma"); // using guava\n    List<String> withElementsJDK = Arrays.asList("alpha", "beta", "gamma"); // using JDK\n    MutableList<String>  withElementsGS = FastList.newListWith("alpha", "beta", "gamma"); // using gs\n\n    System.out.println(withElements);\n    System.out.println(withElementsJDK);\n    System.out.println(withElementsGS);\n\n    // Create list from any Iterable interface (any collection)\n    Collection<String> collection = new HashSet<>(3);\n    collection.add("1");\n    collection.add("2");\n    collection.add("3");\n\n    List<String> fromIterable = Lists.newArrayList(collection); // using guava\n    List<String> fromIterableJDK = new ArrayList<>(collection); // using JDK\n    MutableList<String>  fromIterableGS = FastList.newList(collection); // using gs\n\n    System.out.println(fromIterable);\n    System.out.println(fromIterableJDK);\n    System.out.println(fromIterableGS);\n    /* Attention: JDK create list only from Collection, but guava and gs can create list from Iterable and Collection */\n\n    // Create list from any Iterator\n    Iterator<String> iterator = collection.iterator();\n    List<String> fromIterator = Lists.newArrayList(iterator); // using guava\n    System.out.println(fromIterator);\n\n    // Create list from any array\n    String[] array = {"4", "5", "6"};\n    List<String> fromArray = Lists.newArrayList(array); // using guava\n    List<String> fromArrayJDK = Arrays.asList(array); // using JDK\n    MutableList<String>  fromArrayGS = FastList.newListWith(array); // using gs\n    System.out.println(fromArray);\n    System.out.println(fromArrayJDK);\n    System.out.println(fromArrayGS);\n\n    // Create list using fabric\n    MutableList<String>  fromFabricGS = FastList.newWithNValues(10, () -> String.valueOf(Math.random())); // using gs\n    System.out.println(fromFabricGS);\n\n    System.out.println("createArrayList end");\n\n')])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("JDK")]),t._v(" "),a("th",[t._v("guava")]),t._v(" "),a("th",[t._v("gs-collections")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Create empty set")]),t._v(" "),a("td",[a("code",[t._v("new HashSet<>()")])]),t._v(" "),a("td",[a("code",[t._v("Sets.newHashSet()")])]),t._v(" "),a("td",[a("code",[t._v("UnifiedSet.newSet()")])])]),t._v(" "),a("tr",[a("td",[t._v("Creatre set from values")]),t._v(" "),a("td",[a("code",[t._v('new HashSet<>(Arrays.asList("alpha", "beta", "gamma")')]),t._v(")")]),t._v(" "),a("td",[a("code",[t._v('Sets.newHashSet("alpha", "beta", "gamma")')])]),t._v(" "),a("td",[a("code",[t._v('UnifiedSet.newSetWith("alpha", "beta", "gamma")')])])]),t._v(" "),a("tr",[a("td",[t._v("Create set from any collections")]),t._v(" "),a("td",[a("code",[t._v("new HashSet<>(collection)")])]),t._v(" "),a("td",[a("code",[t._v("Sets.newHashSet(collection)")])]),t._v(" "),a("td",[a("code",[t._v("UnifiedSet.newSet(collection)")])])]),t._v(" "),a("tr",[a("td",[t._v("Create set from any Iterable")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[a("code",[t._v("Sets.newHashSet(iterable)")])]),t._v(" "),a("td",[a("code",[t._v("UnifiedSet.newSet(iterable)")])])]),t._v(" "),a("tr",[a("td",[t._v("Create set from any Iterator")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[a("code",[t._v("Sets.newHashSet(iterator)")])]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("Create set from Array")]),t._v(" "),a("td",[a("code",[t._v("new HashSet<>(Arrays.asList(array))")])]),t._v(" "),a("td",[a("code",[t._v("Sets.newHashSet(array)")])]),t._v(" "),a("td",[a("code",[t._v("UnifiedSet.newSetWith(array)")])])])])]),t._v(" "),a("p",[a("strong",[t._v("Examples:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n   System.out.println("createHashSet start");\n    // Create empty set\n    Set<String> emptyGuava = Sets.newHashSet(); // using guava\n    Set<String> emptyJDK = new HashSet<>(); // using JDK\n    Set<String> emptyGS = UnifiedSet.newSet(); // using gs\n\n    // Create set with 100 element\n    Set<String> approx100 = Sets.newHashSetWithExpectedSize(100); // using guava\n    Set<String> approx100JDK = new HashSet<>(130); // using JDK\n    Set<String> approx100GS = UnifiedSet.newSet(130); // using gs\n\n    // Create set from some elements\n    Set<String> withElements =  Sets.newHashSet("alpha", "beta", "gamma"); // using guava\n    Set<String> withElementsJDK = new HashSet<>(Arrays.asList("alpha", "beta", "gamma")); // using JDK\n    Set<String> withElementsGS  = UnifiedSet.newSetWith("alpha", "beta", "gamma"); // using gs\n\n    System.out.println(withElements);\n    System.out.println(withElementsJDK);\n    System.out.println(withElementsGS);\n\n    // Create set from any Iterable interface (any collection)\n    Collection<String> collection = new ArrayList<>(3);\n    collection.add("1");\n    collection.add("2");\n    collection.add("3");\n\n    Set<String> fromIterable = Sets.newHashSet(collection); // using guava\n    Set<String> fromIterableJDK = new HashSet<>(collection); // using JDK\n    Set<String> fromIterableGS  = UnifiedSet.newSet(collection); // using gs\n\n    System.out.println(fromIterable);\n    System.out.println(fromIterableJDK);\n    System.out.println(fromIterableGS);\n    /* Attention: JDK create set only from Collection, but guava and gs can create set from Iterable and Collection */\n\n    // Create set from any Iterator\n    Iterator<String> iterator = collection.iterator();\n    Set<String> fromIterator = Sets.newHashSet(iterator); // using guava\n    System.out.println(fromIterator);\n\n    // Create set from any array\n    String[] array = {"4", "5", "6"};\n    Set<String> fromArray = Sets.newHashSet(array); // using guava\n    Set<String> fromArrayJDK = new HashSet<>(Arrays.asList(array)); // using JDK\n    Set<String> fromArrayGS  = UnifiedSet.newSetWith(array); // using gs\n    System.out.println(fromArray);\n    System.out.println(fromArrayJDK);\n    System.out.println(fromArrayGS);\n\n    System.out.println("createHashSet end");\n\n')])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("JDK")]),t._v(" "),a("th",[t._v("guava")]),t._v(" "),a("th",[t._v("gs-collections")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Create empty map")]),t._v(" "),a("td",[a("code",[t._v("new HashMap<>()")])]),t._v(" "),a("td",[a("code",[t._v("Maps.newHashMap()")])]),t._v(" "),a("td",[a("code",[t._v("UnifiedMap.newMap()")])])]),t._v(" "),a("tr",[a("td",[t._v("Create map with capacity = 130")]),t._v(" "),a("td",[a("code",[t._v("new HashMap<>(130)")])]),t._v(" "),a("td",[a("code",[t._v("Maps.newHashMapWithExpectedSize(100)")])]),t._v(" "),a("td",[a("code",[t._v("UnifiedMap.newMap(130)")])])]),t._v(" "),a("tr",[a("td",[t._v("Create map from other map")]),t._v(" "),a("td",[a("code",[t._v("new HashMap<>(map)")])]),t._v(" "),a("td",[a("code",[t._v("Maps.newHashMap(map)")])]),t._v(" "),a("td",[a("code",[t._v("UnifiedMap.newMap(map)")])])]),t._v(" "),a("tr",[a("td",[t._v("Create map from keys")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[a("code",[t._v('UnifiedMap.newWithKeysValues("1", "a", "2", "b")')])])])])]),t._v(" "),a("p",[a("strong",[t._v("Examples:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n   System.out.println("createHashMap start");\n    // Create empty map\n    Map<String, String> emptyGuava = Maps.newHashMap(); // using guava\n    Map<String, String> emptyJDK = new HashMap<>(); // using JDK\n    Map<String, String> emptyGS = UnifiedMap.newMap(); // using gs\n\n    // Create map with about 100 element\n    Map<String, String> approx100 = Maps.newHashMapWithExpectedSize(100); // using guava\n    Map<String, String> approx100JDK = new HashMap<>(130); // using JDK\n    Map<String, String> approx100GS = UnifiedMap.newMap(130); // using gs\n\n    // Create map from another map\n    Map<String, String> map = new HashMap<>(3);\n    map.put("k1","v1");\n    map.put("k2","v2");\n    Map<String, String> withMap =  Maps.newHashMap(map); // using guava\n    Map<String, String> withMapJDK = new HashMap<>(map); // using JDK\n    Map<String, String> withMapGS = UnifiedMap.newMap(map); // using gs\n\n    System.out.println(withMap);\n    System.out.println(withMapJDK);\n    System.out.println(withMapGS);\n\n    // Create map from keys\n    Map<String, String> withKeys =  UnifiedMap.newWithKeysValues("1", "a", "2", "b");\n    System.out.println(withKeys);\n\n    System.out.println("createHashMap end");\n\n')])])]),a("p",[t._v("More examples: "),a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/gs-eclipse/src/CreateCollectionTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("CreateCollectionTest"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/CollectionCompareTests.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("CollectionCompare"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/CollectionSearchTests.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("CollectionSearch"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/1.6-usefull-libraries/collections/apache-commons/src/JavaTransformTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaTransform"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v("This topic about Java collections from guava, apache, eclipse: Multiset, Bag, Multimap, utils function from this lib and so on.")])])}),[],!1,null,null,null);e.default=r.exports}}]);