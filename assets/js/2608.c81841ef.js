(window.webpackJsonp=window.webpackJsonp||[]).push([[2608],{3016:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"parameter-sets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameter-sets"}},[t._v("#")]),t._v(" Parameter sets")]),t._v(" "),s("p",[s("strong",[t._v("Parameter sets")]),t._v(" are used to limit the possible combination of parameters, or to enforce the use of parameters when 1 or more parameters are selected.")]),t._v(" "),s("p",[t._v("The examples will explain the use and reason of a parameter set.")]),t._v(" "),s("h2",{attrs:{id:"parameterset-to-enforce-the-use-of-a-parmeter-when-a-other-is-selected"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameterset-to-enforce-the-use-of-a-parmeter-when-a-other-is-selected"}},[t._v("#")]),t._v(" Parameterset to enforce the use of a parmeter when a other is selected.")]),t._v(" "),s("p",[t._v("When you want for example enforce the use of the parameter Password if the parameter User is provided. (and vise versa)")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Do")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Something\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Param")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Parameter(Mandatory=$true)]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[String]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SomeThingToDo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Credentials"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[String]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Computername")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LocalHost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Credentials"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[String]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Credentials"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[SecureString]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Password")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Do something")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This will not work he will ask for user and password")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Do")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Something "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("SomeThingToDo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get-help about_Functions_Advanced'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ComputerName\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This will not work he will ask for password")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Do")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Something "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("SomeThingToDo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get-help about_Functions_Advanced'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("User\n\n")])])]),s("h2",{attrs:{id:"parameter-set-to-limit-the-combination-of-parmeters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameter-set-to-limit-the-combination-of-parmeters"}},[t._v("#")]),t._v(" Parameter set to limit the combination of parmeters")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Do")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Something\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Param")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Parameter(Mandatory=$true)]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[String]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SomeThingToDo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Silently"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Switch]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Silently")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Loudly"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Switch]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Loudly")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Do something")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This will not work because you can not use the combination Silently and Loudly")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Do")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Something "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("SomeThingToDo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get-help about_Functions_Advanced'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Silently "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Loudly\n\n")])])]),s("h2",{attrs:{id:"simple-parameter-sets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simple-parameter-sets"}},[t._v("#")]),t._v(" Simple parameter sets")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" myFunction\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If parameter 'a' is used, then 'c' is mandatory")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If parameter 'b' is used, then 'c' is optional, but allowed")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can use parameter 'c' in combination with either 'a' or 'b'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 'a' and 'b' cannot be used together")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AandC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[switch]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BandC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[switch]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AandC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("parameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BandC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mandatory="),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[switch]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $PSCmdlet.ParameterSetName can be used to check which parameter set was used")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write-Host")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PSCmdlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ParameterSetName\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Valid syntaxes")]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# => "Parameter set : AandC"')]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# => "Parameter set : BandC"')]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# => "Parameter set : BandC"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Invalid syntaxes")]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# => "Parameter set cannot be resolved using the specified named parameters."')]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# => "Supply values for the following parameters:')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#    c:"')]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);