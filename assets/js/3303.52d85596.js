(window.webpackJsonp=window.webpackJsonp||[]).push([[3303],{3711:function(a,s,t){"use strict";t.r(s);var e=t(31),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[a._v("#")]),a._v(" UPDATE")]),a._v(" "),t("h2",{attrs:{id:"update-with-data-from-another-table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update-with-data-from-another-table"}},[a._v("#")]),a._v(" UPDATE with data from another table")]),a._v(" "),t("p",[a._v("The examples below fill in a "),t("code",[a._v("PhoneNumber")]),a._v(" for any Employee who is also a "),t("code",[a._v("Customer")]),a._v(" and currently does not have a phone number set in the "),t("code",[a._v("Employees")]),a._v(" Table.")]),a._v(" "),t("p",[a._v("(These examples use the "),t("a",{attrs:{href:"http://stackoverflow.com/documentation/sql/280/example-database/1014/employees-table#t=201606101329266248314",target:"_blank",rel:"noopener noreferrer"}},[a._v("Employees"),t("OutboundLink")],1),a._v(" and "),t("a",{attrs:{href:"http://stackoverflow.com/documentation/sql/280/example-database/1015/customers-table#t=201606101329266248314",target:"_blank",rel:"noopener noreferrer"}},[a._v("Customers"),t("OutboundLink")],1),a._v(" tables from the Example Databases.)")]),a._v(" "),t("h3",{attrs:{id:"standard-sql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#standard-sql"}},[a._v("#")]),a._v(" Standard SQL")]),a._v(" "),t("p",[a._v("Update using a correlated subquery:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" \n    Employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v(" PhoneNumber "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" \n         c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PhoneNumber\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" \n         Customers c\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" \n         c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FName \n         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("LName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("LName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" Employees"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PhoneNumber "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("IS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("\n\n")])])]),t("h3",{attrs:{id:"sql-2003"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-2003"}},[a._v("#")]),a._v(" SQL:2003")]),a._v(" "),t("p",[a._v("Update using "),t("code",[a._v("MERGE")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("MERGE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INTO")]),a._v(" \n    Employees e\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("USING")]),a._v(" \n    Customers c \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ON")]),a._v(" \n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Fname \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("LName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("LName\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PhoneNumber "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("IS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHEN")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("MATCHED")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("THEN")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" \n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v(" PhoneNumber "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PhoneNumber\n\n")])])]),t("h3",{attrs:{id:"sql-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-server"}},[a._v("#")]),a._v(" SQL Server")]),a._v(" "),t("p",[a._v("Update using "),t("code",[a._v("INNER JOIN")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" \n    Employees\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v(" \n    PhoneNumber "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PhoneNumber\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" \n    Employees e\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INNER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("JOIN")]),a._v(" Customers c\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ON")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FName \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("LName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("LName\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" \n    PhoneNumber "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("IS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"modifying-existing-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#modifying-existing-values"}},[a._v("#")]),a._v(" Modifying existing values")]),a._v(" "),t("p",[a._v("This example uses the "),t("a",{attrs:{href:"http://stackoverflow.com/documentation/sql/280/example-database/1016/cars-table#t=201606100144025167375",target:"_blank",rel:"noopener noreferrer"}},[a._v("Cars Table"),t("OutboundLink")],1),a._v(" from the Example Databases.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" Cars\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v(" TotalCost "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" TotalCost "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" Id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("or")]),a._v(" Id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n\n")])])]),t("p",[a._v("Update operations can include current values in the updated row. In this simple example the "),t("code",[a._v("TotalCost")]),a._v(" is incremented by 100 for two rows:")]),a._v(" "),t("ul",[t("li",[a._v("The TotalCost of Car #3 is increased from 100 to 200")]),a._v(" "),t("li",[a._v("The TotalCost of Car #4 is increased from 1254 to 1354")])]),a._v(" "),t("p",[a._v("A column's new value may be derived from its previous value or from any other column's value in the same table or a joined table.")]),a._v(" "),t("h2",{attrs:{id:"updating-specified-rows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#updating-specified-rows"}},[a._v("#")]),a._v(" Updating Specified Rows")]),a._v(" "),t("p",[a._v("This example uses the "),t("a",{attrs:{href:"http://stackoverflow.com/documentation/sql/280/example-database/1016/cars-table#t=201606100144025167375",target:"_blank",rel:"noopener noreferrer"}},[a._v("Cars Table"),t("OutboundLink")],1),a._v(" from the Example Databases.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" \n    Cars\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("Status")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'READY'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" \n    Id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n\n")])])]),t("p",[a._v("This statement will set the status of the row of 'Cars' with id 4 to \"READY\".")]),a._v(" "),t("p",[t("code",[a._v("WHERE")]),a._v(" clause contains a logical expression which is evaluated for each row. If a row fulfills the criteria, its value is updated. Otherwise, a row remains unchanged.")]),a._v(" "),t("h2",{attrs:{id:"updating-all-rows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#updating-all-rows"}},[a._v("#")]),a._v(" Updating All Rows")]),a._v(" "),t("p",[a._v("This example uses the "),t("a",{attrs:{href:"http://stackoverflow.com/documentation/sql/280/example-database/1016/cars-table#t=201606100144025167375",target:"_blank",rel:"noopener noreferrer"}},[a._v("Cars Table"),t("OutboundLink")],1),a._v(" from the Example Databases.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("UPDATE")]),a._v(" Cars\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("Status")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'READY'")]),a._v("\n\n")])])]),t("p",[a._v("This statement will set the 'status' column of all rows of the 'Cars' table to \"READY\" because it does not have a "),t("code",[a._v("WHERE")]),a._v(" clause to filter the set of rows.")]),a._v(" "),t("h2",{attrs:{id:"capturing-updated-records"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#capturing-updated-records"}},[a._v("#")]),a._v(" Capturing Updated records")]),a._v(" "),t("p",[a._v("Sometimes one wants to capture the records that have just been updated.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#TempUpdated(ID INT)")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("Update")]),a._v(" TableName "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v(" Col1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("42")]),a._v("\n    OUTPUT inserted"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ID "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INTO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#TempUpdated")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" Id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("50")]),a._v("\n\n")])])]),t("h4",{attrs:{id:"syntax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[a._v("#")]),a._v(" Syntax")]),a._v(" "),t("li",[a._v("UPDATE **table**"),t("br"),a._v("\nSET **column_name** = **value**, **column_name2** = **value_2**, ..., **column_name_n** = **value_n**"),t("br"),a._v("\nWHERE **condition** (**logical operator** condition_n)")])])}),[],!1,null,null,null);s.default=r.exports}}]);