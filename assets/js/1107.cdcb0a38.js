(window.webpackJsonp=window.webpackJsonp||[]).push([[1107],{1515:function(t,e,a){"use strict";a.r(e);var s=a(31),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"browsing-the-history"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#browsing-the-history"}},[t._v("#")]),t._v(" Browsing the history")]),t._v(" "),a("h2",{attrs:{id:"prettier-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prettier-log"}},[t._v("#")]),t._v(" Prettier log")]),t._v(" "),a("p",[t._v("To see the log in a prettier graph-like structure use:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --decorate --oneline --graph\n\n")])])]),a("p",[t._v("sample output :")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("* e0c1cea (HEAD -> maint, tag: v2.9.3, origin/maint) Git 2.9.3\n*   9b601ea Merge branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jk/difftool-in-subdir'")]),t._v(" into maint\n|\\\n| * 32b8c58 difftool: use Git::* functions instead of passing around state\n| * 98f917e difftool: avoid $GIT_DIR and $GIT_WORK_TREE\n| * 9ec26e7 difftool: fix argument handling in subdirs\n* |   f4fd627 Merge branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jk/reset-ident-time-per-commit'")]),t._v(" into maint\n...\n\n")])])]),a("p",[t._v("Since it's a pretty big command, you can assign an alias:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git config --global alias.lol "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log --decorate --oneline --graph"')]),t._v("\n\n")])])]),a("p",[t._v("To use the alias version:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# history of current branch :")]),t._v("\ngit lol\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# combined history of active branch (HEAD), develop and origin/master branches :")]),t._v("\ngit lol HEAD develop origin/master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# combined history of everything in your repo :")]),t._v("\ngit lol --all\n\n")])])]),a("h2",{attrs:{id:"regular-git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regular-git-log"}},[t._v("#")]),t._v(' "Regular" Git Log')]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log\n\n")])])]),a("p",[t._v("will display all your commits with the author and hash. This will be shown over multiple lines per commit. (If you wish to show a single line per commit, look at "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/git/240/git-logs/871/oneline#t=201604090859548590171",target:"_blank",rel:"noopener noreferrer"}},[t._v("onelineing"),a("OutboundLink")],1),t._v("). Use the "),a("code",[t._v("q")]),t._v(" key to exit the log.")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[t._v("By default, with no arguments, git log lists the commits made in that\nrepository in reverse chronological order – that is, the most recent\ncommits show up first. As you can see, this command lists each commit\nwith its SHA-1 checksum, the author’s name and email, the date\nwritten, and the commit message. - [**source**](https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History)")]),t._v(" "),a("p",[t._v("Example (from "),a("a",{attrs:{href:"https://github.com/FreeCodeCamp/FreeCodeCamp",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Free Code Camp")]),a("OutboundLink")],1),t._v(" repository):")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit 87ef97f59e2a2f4dc425982f76f14a57d0900bcf")]),t._v("\nMerge: e50ff0d eb8b729\nAuthor: Brian <sludge256@users.noreply.github.com>\nDate:   Thu Mar 24 15:52:07 2016 -0700\n\n    Merge pull request #7724 from BKinahan/fix/where-art-thou\n\n    Fix "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'its'")]),t._v(" typo in Where Art Thou description\n\n"),a("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit eb8b7298d516ea20a4aadb9797c7b6fd5af27ea5")]),t._v("\nAuthor: BKinahan <b.kinahan@gmail.com>\nDate:   Thu Mar 24 21:11:36 2016 +0000\n\n    Fix "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'its'")]),t._v(" typo in Where Art Thou description\n\n"),a("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit e50ff0d249705f41f55cd435f317dcfd02590ee7")]),t._v("\nMerge: 6b01875 2652d04\nAuthor: Mrugesh Mohapatra <raisedadead@users.noreply.github.com>\nDate:   Thu Mar 24 14:26:04 2016 +0530\n\n    Merge pull request #7718 from deathsythe47/fix/unnecessary-comma\n\n    Remove unnecessary comma from CONTRIBUTING.md\n\n")])])]),a("p",[t._v("If you wish to limit your command to last "),a("code",[t._v("n")]),t._v(" commits log you can simply pass a parameter. For example, if you wish to list last 2 commits logs")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log -2\n\n")])])]),a("h2",{attrs:{id:"oneline-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oneline-log"}},[t._v("#")]),t._v(" Oneline log")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --oneline\n\n")])])]),a("p",[t._v("will show all of your commits with only the first part of the hash and the commit message. Each commit will be in a single line, as the "),a("code",[t._v("oneline")]),t._v(" flag suggests.")]),t._v(" "),a("blockquote",[a("p",[t._v("The oneline option prints each commit on a single line, which is useful if you’re looking at a lot of commits. - "),a("a",{attrs:{href:"https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("source")]),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("Example (from "),a("a",{attrs:{href:"https://github.com/FreeCodeCamp/FreeCodeCamp",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Free Code Camp")]),a("OutboundLink")],1),t._v(" repository, with the same section of code from the other example):")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("87ef97f Merge pull request #7724 from BKinahan/fix/where-art-thou\neb8b729 Fix "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'its'")]),t._v(" typo in Where Art Thou description\ne50ff0d Merge pull request #7718 from deathsythe47/fix/unnecessary-comma\n2652d04 Remove unnecessary comma from CONTRIBUTING.md\n6b01875 Merge pull request #7667 from zerkms/patch-1\n766f088 Fixed assignment operator terminology\nd1e2468 Merge pull request #7690 from BKinahan/fix/unsubscribe-crash\nbed9de2 Merge pull request #7657 from Rafase282/fix/\n\n")])])]),a("p",[t._v("If you wish to limit you command to last "),a("code",[t._v("n")]),t._v(" commits log you can simply pass a parameter. For example, if you wish to list last 2 commits logs")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log -2 --oneline\n\n")])])]),a("h2",{attrs:{id:"colorize-logs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#colorize-logs"}},[t._v("#")]),t._v(" Colorize Logs")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --graph --pretty=format:"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%C(red)%h%Creset -%C(yellow)%d%Creset %s %C(green)(%cr) %C(yellow)<%an>%Creset'")]),t._v("\n\n")])])]),a("p",[t._v("The "),a("code",[t._v("format")]),t._v(" option allows you to specify your own log output format:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Details")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("%C(color_name)")])]),t._v(" "),a("td",[t._v("option colors the output that comes after it")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("%h")]),t._v(" or %H")]),t._v(" "),a("td",[t._v("abbreviates commit hash (use %H for complete hash)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("%Creset")])]),t._v(" "),a("td",[t._v("resets color to default terminal color")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("%d")])]),t._v(" "),a("td",[t._v("ref names")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("%s")])]),t._v(" "),a("td",[t._v("subject [commit message]")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("%cr")])]),t._v(" "),a("td",[t._v("committer date, relative to current date")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("%an")])]),t._v(" "),a("td",[t._v("author name")])])])]),t._v(" "),a("h2",{attrs:{id:"log-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-search"}},[t._v("#")]),t._v(" Log search")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log -S"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#define SAMPLES"')]),t._v("\n\n")])])]),a("p",[t._v("Searches for "),a("strong",[t._v("addition")]),t._v(" or "),a("strong",[t._v("removal")]),t._v(" of specific string or the string "),a("strong",[t._v("matching")]),t._v(" provided REGEXP. In this case we're looking for addition/removal of the string "),a("code",[t._v("#define SAMPLES")]),t._v(". For example:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+#define SAMPLES  100000")]),t._v("\n\n")])])]),a("p",[t._v("or")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-#define SAMPLES  100000")]),t._v("\n\n")])])]),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log -G"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#define SAMPLES"')]),t._v("\n\n")])])]),a("p",[t._v("Searches for "),a("strong",[t._v("changes")]),t._v(" in "),a("strong",[t._v("lines")]),t._v(" "),a("strong",[t._v("containing")]),t._v(" specific string or the string "),a("strong",[t._v("matching")]),t._v(" provided REGEXP. For example:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-#define SAMPLES  100000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+#define SAMPLES  100000000")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"list-all-contributions-grouped-by-author-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-all-contributions-grouped-by-author-name"}},[t._v("#")]),t._v(" List all contributions grouped by author name")]),t._v(" "),a("p",[a("code",[t._v("git shortlog")]),t._v(" summarizes "),a("code",[t._v("git log")]),t._v(" and groups by author")]),t._v(" "),a("p",[t._v("If no parameters are given, a list of all commits made per committer will be shown in chronological order.")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git shortlog")]),t._v("\nCommitter 1 (<number_of_commits>):\n    Commit Message 1\n    Commit Message 2\n    ...\nCommitter 2 (<number_of_commits>):\n    Commit Message 1\n    Commit Message 2\n    ...\n\n")])])]),a("p",[t._v("To simply see the number of commits and suppress the commit description, pass in the summary option:")]),t._v(" "),a("p",[a("code",[t._v("-s")])]),t._v(" "),a("p",[a("code",[t._v("--summary")])]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git shortlog"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")])]),t._v("\n<number_of_commits> Committer 1\n<number_of_commits> Committer 2\n\n")])])]),a("p",[t._v("To sort the output by number of commits instead of alphabetically by committer name, pass in the numbered option:")]),t._v(" "),a("p",[a("code",[t._v("-n")])]),t._v(" "),a("p",[a("code",[t._v("--numbered")])]),t._v(" "),a("p",[t._v("To add the email of a committer, add the email option:")]),t._v(" "),a("p",[a("code",[t._v("-e")])]),t._v(" "),a("p",[a("code",[t._v("--email")])]),t._v(" "),a("p",[t._v("A custom format option can also be provided if you want to display information other than the commit subject:")]),t._v(" "),a("p",[a("code",[t._v("--format")])]),t._v(" "),a("p",[t._v("This can be any string accepted by the "),a("code",[t._v("--format")]),t._v(" option of "),a("code",[t._v("git log")]),t._v(".")]),t._v(" "),a("p",[t._v("See "),a("strong",[a("a",{attrs:{href:"http://stackoverflow.com/documentation/git/240/browsing-the-history/13880/colorize-logs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Colorizing Logs"),a("OutboundLink")],1)]),t._v(" above for more information on this.")]),t._v(" "),a("h2",{attrs:{id:"searching-commit-string-in-git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#searching-commit-string-in-git-log"}},[t._v("#")]),t._v(" Searching commit string in git log")]),t._v(" "),a("p",[t._v("Searching git log using some string in log:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log [options] --grep "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"search_string"')]),t._v("\n\n")])])]),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --all --grep "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"removed file"')]),t._v("\n\n")])])]),a("p",[t._v("Will search for "),a("code",[t._v("removed file")]),t._v(" string in "),a("strong",[t._v("all logs")]),t._v(" in "),a("strong",[t._v("all branches")]),t._v(".")]),t._v(" "),a("p",[t._v("Starting from git 2.4+, the search can be inverted using the "),a("code",[t._v("--invert-grep")]),t._v(" option.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --grep="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add file"')]),t._v(" --invert-grep\n\n")])])]),a("p",[t._v("Will show all commits that do not contain "),a("code",[t._v("add file")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"filter-logs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filter-logs"}},[t._v("#")]),t._v(" Filter logs")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --after "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3 days ago'")]),t._v("\n\n")])])]),a("p",[t._v("Specific dates work too:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --after 2016-05-01\n\n")])])]),a("p",[t._v("As with other commands and flags that accept a date parameter,\nthe allowed date format is as supported by GNU date (highly flexible).")]),t._v(" "),a("p",[t._v("An alias to "),a("code",[t._v("--after")]),t._v(" is "),a("code",[t._v("--since")]),t._v(".")]),t._v(" "),a("p",[t._v("Flags exist for the converse too: "),a("code",[t._v("--before")]),t._v(" and "),a("code",[t._v("--until")]),t._v(".")]),t._v(" "),a("p",[t._v("You can also filter logs by "),a("code",[t._v("author")]),t._v(". e.g.")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --author=author\n\n")])])]),a("h2",{attrs:{id:"log-for-a-range-of-lines-within-a-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-for-a-range-of-lines-within-a-file"}},[t._v("#")]),t._v(" Log for a range of lines within a file")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -L")]),t._v(" 1,20:index.html")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit 6a57fde739de66293231f6204cbd8b2feca3a869")]),t._v("\nAuthor: John Doe <john@doe.com>\nDate:   Tue Mar 22 16:33:42 2016 -0500\n\n    commit message\n\ndiff --git a/index.html b/index.html\n"),a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/index.html")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/index.html")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -1,17 +1,20 @@")]),t._v("\n <!DOCTYPE HTML>\n <html>\n"),a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-       <head>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v('-        <meta charset="utf-8">')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+<head>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v('+    <meta charset="utf-8">')]),t._v("\n     <meta http-equiv="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X-UA-Compatible"')]),t._v(" content="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IE=edge"')]),t._v(">\n     <meta name="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"viewport"')]),t._v(" content="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"width=device-width, initial-scale=1"')]),t._v(">\n\n")])])]),a("h2",{attrs:{id:"log-with-changes-inline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-with-changes-inline"}},[t._v("#")]),t._v(" Log with changes inline")]),t._v(" "),a("p",[t._v("To see the log with changes inline, use the "),a("code",[t._v("-p")]),t._v(" or "),a("code",[t._v("--patch")]),t._v(" options.")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --patch\n\n")])])]),a("p",[t._v("Example (from "),a("a",{attrs:{href:"https://github.com/trello/scientist",target:"_blank",rel:"noopener noreferrer"}},[t._v("Trello Scientist"),a("OutboundLink")],1),t._v(" repository)")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("ommit 8ea1452aca481a837d9504f1b2c77ad013367d25\nAuthor: Raymond Chou <info@raychou.io>\nDate:   Wed Mar 2 10:35:25 2016 -0800\n\n    fix readme error link\n\ndiff --git a/README.md b/README.md\nindex 1120a00..9bef0ce 100644\n"),a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/README.md")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/README.md")]),t._v("\n@@ -134,7 +134,7 @@ the control function threw, but *after* testing the other functions and readying\n the logging. The criteria for matching errors is based on the constructor and\n message.\n\n"),a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-You can find this full example at [examples/errors.js](examples/error.js).")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+You can find this full example at [examples/errors.js](examples/errors.js).")]),t._v("\n\n ## Asynchronous behaviors\n\n\n"),a("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit d3178a22716cc35b6a2bdd679a7ec24bc8c63ffa")]),t._v("\n:\n\n")])])]),a("h2",{attrs:{id:"git-log-between-two-branches"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-log-between-two-branches"}},[t._v("#")]),t._v(" Git Log Between Two Branches")]),t._v(" "),a("p",[a("code",[t._v("git log master..foo")]),t._v(" will show the commits that are on "),a("code",[t._v("foo")]),t._v(" and not on "),a("code",[t._v("master")]),t._v(". Helpful for seeing what commits you've added since branching!")]),t._v(" "),a("h2",{attrs:{id:"log-showing-commited-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-showing-commited-files"}},[t._v("#")]),t._v(" Log showing commited files")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git log --stat\n\n")])])]),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit 4ded994d7fc501451fa6e233361887a2365b91d1")]),t._v("\nAuthor: Manassés Souza <manasses.inatel@gmail.com>\nDate:   Mon Jun 6 21:32:30 2016 -0300\n\n    MercadoLibre java-sdk dependency\n\n mltracking-poc/.gitignore |  1 +\n mltracking-poc/pom.xml    | 14 ++++++++++++--\n 2 files changed, 13 insertions(+), 2 deletions(-)\n\n"),a("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit 506fff56190f75bc051248770fb0bcd976e3f9a5")]),t._v("\nAuthor: Manassés Souza <manasses.inatel@gmail.com>\nDate:   Sat Jun 4 12:35:16 2016 -0300\n\n    [manasses] generated by SpringBoot initializr\n\n .gitignore                                                                            |  42 ++++++++++++\n mltracking-poc/mvnw                                                                   | 233 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n mltracking-poc/mvnw.cmd                                                               | 145 +++++++++++++++++++++++++++++++++++++++\n mltracking-poc/pom.xml                                                                |  74 ++++++++++++++++++++\n mltracking-poc/src/main/java/br/com/mls/mltracking/MltrackingPocApplication.java      |  12 ++++\n mltracking-poc/src/main/resources/application.properties                              |   0\n mltracking-poc/src/test/java/br/com/mls/mltracking/MltrackingPocApplicationTests.java |  18 +++++\n 7 files changed, 524 insertions(+)\n\n")])])]),a("h2",{attrs:{id:"show-the-contents-of-a-single-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-the-contents-of-a-single-commit"}},[t._v("#")]),t._v(" Show the contents of a single commit")]),t._v(" "),a("p",[t._v("Using "),a("a",{attrs:{href:"https://git-scm.com/docs/git-show",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("git show")]),a("OutboundLink")],1),t._v(" we can view a single commit")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git show 48c83b3\ngit show 48c83b3690dfc7b0e622fd220f8f37c26a77c934\n\n")])])]),a("p",[t._v("Example")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit 48c83b3690dfc7b0e622fd220f8f37c26a77c934")]),t._v("\nAuthor: Matt Clark <mrclark32493@gmail.com>\nDate:   Wed May 4 18:26:40 2016 -0400\n\n    The commit message will be shown here.\n\ndiff --git a/src/main/java/org/jdm/api/jenkins/BuildStatus.java b/src/main/java/org/jdm/api/jenkins/BuildStatus.java\nindex 0b57e4a..fa8e6a5 100755\n"),a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/src/main/java/org/jdm/api/jenkins/BuildStatus.java")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/src/main/java/org/jdm/api/jenkins/BuildStatus.java")]),t._v("\n@@ -50,7 +50,7 @@ public enum BuildStatus {\n\n                        colorMap.put(BuildStatus.UNSTABLE, Color.decode( "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#FFFF55"')]),t._v(" ));\n"),a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v('-                       colorMap.put(BuildStatus.SUCCESS,  Color.decode( "#55FF55" ));')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token inserted"}},[t._v('+                       colorMap.put(BuildStatus.SUCCESS,  Color.decode( "#33CC33" ));')]),t._v("\n                        colorMap.put(BuildStatus.BUILDING, Color.decode( "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#5555FF"')]),t._v(" ));\n\n")])])]),a("h2",{attrs:{id:"one-line-showing-commiter-name-and-time-since-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#one-line-showing-commiter-name-and-time-since-commit"}},[t._v("#")]),t._v(" One line showing commiter name and time since commit")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("tree = log --oneline --decorate --source --pretty=format:"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"%Cblue %h %Cgreen %ar %Cblue %an %C(yellow) %d %Creset %s\"'")]),t._v("  --all --graph\n\n")])])]),a("p",[t._v("example")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("*    40554ac  3 months ago  Alexander Zolotov    Merge pull request #95 from gmandnepr/external_plugins\n|\\\n| *  e509f61  3 months ago  Ievgen Degtiarenko    Documenting new property\n| *  46d4cb6  3 months ago  Ievgen Degtiarenko    Running idea with external plugins\n| *  6253da4  3 months ago  Ievgen Degtiarenko    Resolve external plugin classes\n| *  9fdb4e7  3 months ago  Ievgen Degtiarenko    Keep original artifact name as this may be important for intellij\n| *  22e82e4  3 months ago  Ievgen Degtiarenko    Declaring external plugin in intellij section\n|/\n*  bc3d2cb  3 months ago  Alexander Zolotov    Ignore DTD in plugin.xml\n\n")])])]),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("ul",[a("li",[t._v("git log [options][revision range] [[--] path...]")])]),t._v(" "),a("h4",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Explanation")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-q, --quiet")]),t._v(" "),a("td",[t._v("Quiet, suppresses diff output")])]),t._v(" "),a("tr",[a("td",[t._v("--source")]),t._v(" "),a("td",[t._v("Shows source of commit")])]),t._v(" "),a("tr",[a("td",[t._v("--use-mailmap")]),t._v(" "),a("td",[t._v("Use mail map file (changes user info for committing user)")])]),t._v(" "),a("tr",[a("td",[t._v("--decorate[=...]")]),t._v(" "),a("td",[t._v("Decorate options")])]),t._v(" "),a("tr",[a("td",[t._v("--L <n,m:file>")]),t._v(" "),a("td",[t._v("Show log for specific range of lines in a file, counting from 1. Starts from line n, goes to line m. Also shows diff.")])]),t._v(" "),a("tr",[a("td",[t._v("--show-signature")]),t._v(" "),a("td",[t._v("Display signatures of signed commits")])]),t._v(" "),a("tr",[a("td",[t._v("-i, --regexp-ignore-case")]),t._v(" "),a("td",[t._v("Match the regular expression limiting patterns without regard to letter case")])])])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v("References and up-to-date "),a("strong",[t._v("documentation")]),t._v(" : "),a("a",{attrs:{href:"https://git-scm.com/docs/git-log",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-log official documentation"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);