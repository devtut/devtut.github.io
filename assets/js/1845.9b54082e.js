(window.webpackJsonp=window.webpackJsonp||[]).push([[1845],{2253:function(t,a,n){"use strict";n.r(a);var s=n(31),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"getting-started-with-kotlin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getting-started-with-kotlin"}},[t._v("#")]),t._v(" Getting started with Kotlin")]),t._v(" "),n("h2",{attrs:{id:"hello-world"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[t._v("#")]),t._v(" Hello World")]),t._v(" "),n("p",[t._v("All Kotlin programs start at the "),n("code",[t._v("main")]),t._v(' function. Here is an example of a simple Kotlin "Hello World" program:')]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" my"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("program\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("Place the above code into a file named "),n("code",[t._v("Main.kt")]),t._v(" (this filename is entirely arbitrary)")]),t._v(" "),n("p",[t._v("When targeting the JVM, the function will be compiled as a static method in a class with a name derived from the filename. In the above example, the main class to run would be "),n("code",[t._v("my.program.MainKt")]),t._v(".")]),t._v(" "),n("p",[t._v("To change the name of the class that contains top-level functions for a particular file, place the following annotation at the top of the file above the package statement:")]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@file:JvmName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyApp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),n("p",[t._v("In this example, the main class to run would now be "),n("code",[t._v("my.program.MyApp")]),t._v(".")]),t._v(" "),n("p",[n("strong",[t._v("See also:")])]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://kotlinlang.org/docs/reference/java-to-kotlin-interop.html#package-level-functions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Package level functions"),n("OutboundLink")],1),t._v(" including "),n("code",[t._v("@JvmName")]),t._v(" annotation."),n("br")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://kotlinlang.org/docs/reference/annotations.html#annotation-use-site-targets",target:"_blank",rel:"noopener noreferrer"}},[t._v("Annotation use-site targets"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"hello-world-using-a-companion-object"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hello-world-using-a-companion-object"}},[t._v("#")]),t._v(" Hello World using a Companion Object")]),t._v(" "),n("p",[t._v("Similar to using an Object Declaration, you can define the "),n("code",[t._v("main")]),t._v(" function of a Kotlin program using a "),n("a",{attrs:{href:"https://kotlinlang.org/docs/reference/object-declarations.html#companion-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("Companion Object"),n("OutboundLink")],1),t._v(" of a class.")]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" my"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("program\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" App "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("companion")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@JvmStatic")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("The class name that you will run is the name of your class, in this case is "),n("code",[t._v("my.program.App")]),t._v(".")]),t._v(" "),n("p",[t._v("The advantage to this method over a top-level function is that the class name to run is more self-evident, and any other functions you add are scoped into the class "),n("code",[t._v("App")]),t._v(". This is similar to the "),n("code",[t._v("Object Declaration")]),t._v(" example, other than you are in control of instantiating any classes to do further work.")]),t._v(" "),n("p",[t._v('A slight variation that instantiates the class to do the actual "hello":')]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" App "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("companion")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@JvmStatic")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[n("strong",[t._v("See also:")])]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://kotlinlang.org/docs/reference/java-to-kotlin-interop.html#static-methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("Static Methods"),n("OutboundLink")],1),t._v(" including the @JvmStatic annotation")])]),t._v(" "),n("h2",{attrs:{id:"hello-world-using-an-object-declaration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hello-world-using-an-object-declaration"}},[t._v("#")]),t._v(" Hello World using an Object Declaration")]),t._v(" "),n("p",[t._v("You can alternatively use an "),n("a",{attrs:{href:"https://kotlinlang.org/docs/reference/object-declarations.html#object-declarations",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object Declaration"),n("OutboundLink")],1),t._v(" that contains the main function for a Kotlin program.")]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" my"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("program\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" App "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation builtin"}},[t._v("@JvmStatic")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("The class name that you will run is the name of your object, in this case is "),n("code",[t._v("my.program.App")]),t._v(".")]),t._v(" "),n("p",[t._v("The advantage to this method over a top-level function is that the class name to run is more self-evident, and any other functions you add are scoped into the class "),n("code",[t._v("App")]),t._v(".  You then also have a singleton instance of "),n("code",[t._v("App")]),t._v(" to store state and do other work.")]),t._v(" "),n("p",[n("strong",[t._v("See also:")])]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://kotlinlang.org/docs/reference/java-to-kotlin-interop.html#static-methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("Static Methods"),n("OutboundLink")],1),t._v(" including the "),n("code",[t._v("@JvmStatic")]),t._v(" annotation")])]),t._v(" "),n("h2",{attrs:{id:"main-methods-using-varargs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#main-methods-using-varargs"}},[t._v("#")]),t._v(" Main methods using varargs")]),t._v(" "),n("p",[t._v("All of these main method styles can also be used with "),n("a",{attrs:{href:"https://kotlinlang.org/docs/reference/functions.html#variable-number-of-arguments-varargs",target:"_blank",rel:"noopener noreferrer"}},[t._v("varargs"),n("OutboundLink")],1),t._v(":")]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" my"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("program\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vararg")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("h2",{attrs:{id:"compile-and-run-kotlin-code-in-command-line"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#compile-and-run-kotlin-code-in-command-line"}},[t._v("#")]),t._v(" Compile and Run Kotlin Code in Command Line")]),t._v(" "),n("p",[t._v("As java provide two different commands to compile and run Java code. Same as Kotlin also provide you different commands.")]),t._v(" "),n("p",[n("code",[t._v("javac")]),t._v(" to compile java files.\n"),n("code",[t._v("java")]),t._v(" to run java files.")]),t._v(" "),n("p",[t._v("Same as\n"),n("code",[t._v("kotlinc")]),t._v(" to compile kotlin files\n"),n("code",[t._v("kotlin")]),t._v(" to run kotlin files.")]),t._v(" "),n("h2",{attrs:{id:"reading-input-from-command-line"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reading-input-from-command-line"}},[t._v("#")]),t._v(" Reading input from Command Line")]),t._v(" "),n("p",[t._v("The arguments passed from the console can be received in the Kotlin program and it can be used as an input. You can pass N (1 2 3 and so on) numbers of arguments from the command prompt.")]),t._v(" "),n("p",[t._v("A simple example of a command-line argument in Kotlin.")]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Enter Two number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLine")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// !! this operator use for NPE(NullPointerException).")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Max number is : '),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("maxNum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("maxNum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" max "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The value of a is '),n("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$a")]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        a\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The value of b is '),n("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$b")]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        b\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("Here, Enter two number from the command line to find the maximum number.\nOutput :")]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[t._v("Enter Two number\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("71")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enter two number from command line")]),t._v("\n\nThe value of b "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v("\nMax number "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v("\n\n")])])]),n("p",[t._v("For !! Operator Please check "),n("a",{attrs:{href:"https://kotlinlang.org/docs/reference/null-safety.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Null Safety"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("Note: Above example compile and run on Intellij.")]),t._v(" "),n("h4",{attrs:{id:"remarks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://kotlinlang.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kotlin"),n("OutboundLink")],1),t._v(" is a statically-typed object-oriented programming language developed by JetBrains primarily targeting the JVM. Kotlin is developed with the goals of being quick to compile, backwards-compatible, very type safe, and 100% interoperable with Java. Kotlin is also developed with the goal of providing many of the features wanted by Java developers. Kotlin's standard compiler allows it to be compiled both into Java bytecode for the JVM and into JavaScript.")]),t._v(" "),n("h3",{attrs:{id:"compiling-kotlin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#compiling-kotlin"}},[t._v("#")]),t._v(" Compiling Kotlin")]),t._v(" "),n("p",[t._v("Kotlin has a standard IDE plugin for Eclipse and IntelliJ. Kotlin can also be compiled "),n("a",{attrs:{href:"http://kotlinlang.org/docs/reference/using-maven.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("using Maven"),n("OutboundLink")],1),t._v(", "),n("a",{attrs:{href:"http://kotlinlang.org/docs/reference/using-ant.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("using Ant"),n("OutboundLink")],1),t._v(", and "),n("a",{attrs:{href:"http://kotlinlang.org/docs/reference/using-gradle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("using Gradle"),n("OutboundLink")],1),t._v(", or through the "),n("a",{attrs:{href:"https://kotlinlang.org/docs/tutorials/command-line.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("command line"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("It is worth noting in "),n("code",[t._v("$ kotlinc Main.kt")]),t._v(" will output a java class file, in this case "),n("code",[t._v("MainKt.class")]),t._v(" (Note the Kt appended to the class name). However if one was to run the class file using "),n("code",[t._v("$ java MainKt")]),t._v(" java will throw the following exception:")]),t._v(" "),n("div",{staticClass:"language-kotlin extra-class"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[t._v("Exception "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" thread "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NoClassDefFoundError"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" kotlin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("jvm"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("internal")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Intrinsics\n    at MainKt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCaused "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClassNotFoundException"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" kotlin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jvm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("internal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Intrinsics\n    at java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("URLClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("findClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("URLClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("381")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    at java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("424")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    at sun"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("misc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Launcher$AppClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Launcher"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("335")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    at java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("357")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" more\n\n\n")])])]),n("p",[t._v("In order to run the resulting class file using Java, one must include the Kotlin runt-time jar file to the current class path.")]),t._v(" "),n("p",[n("code",[t._v("java -cp .:/path/to/kotlin/runtime/jar/kotlin-runtime.jar MainKt")])])])}),[],!1,null,null,null);a.default=e.exports}}]);