(window.webpackJsonp=window.webpackJsonp||[]).push([[484],{892:function(s,a,e){"use strict";e.r(a);var t=e(31),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"change-shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#change-shell"}},[s._v("#")]),s._v(" Change shell")]),s._v(" "),e("h2",{attrs:{id:"find-the-current-shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#find-the-current-shell"}},[s._v("#")]),s._v(" Find the current shell")]),s._v(" "),e("p",[s._v("There are a few ways to determine the current shell")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$SHELL")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"change-the-shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#change-the-shell"}},[s._v("#")]),s._v(" Change the shell")]),s._v(" "),e("p",[s._v("To change the current bash run these commands")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("SHELL")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/bin/bash\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" /bin/bash\n\n")])])]),e("p",[s._v("to change the bash that opens on startup edit "),e("code",[s._v(".profile")]),s._v(" and add those lines")]),s._v(" "),e("h2",{attrs:{id:"list-available-shells"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-available-shells"}},[s._v("#")]),s._v(" List available shells")]),s._v(" "),e("p",[s._v("To list available login shells :")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/shells\n\n")])])]),e("p",[s._v("Example:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/shells\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/shells: valid login shells")]),s._v("\n/bin/sh\n/bin/dash\n/bin/bash\n/bin/rbash\n\n")])])]),e("h4",{attrs:{id:"syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[s._v("#")]),s._v(" Syntax")]),s._v(" "),e("ul",[e("li",[s._v("echo $0")]),s._v(" "),e("li",[s._v("ps -p $$")]),s._v(" "),e("li",[s._v("echo $SHELL")]),s._v(" "),e("li",[s._v("export SHELL=/bin/bash")]),s._v(" "),e("li",[s._v("exec /bin/bash")]),s._v(" "),e("li",[s._v("cat /etc/shells")])])])}),[],!1,null,null,null);a.default=n.exports}}]);