(window.webpackJsonp=window.webpackJsonp||[]).push([[1973],{2381:function(t,e,a){"use strict";a.r(e);var s=a(31),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"aggregate-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aggregate-functions"}},[t._v("#")]),t._v(" Aggregate Functions")]),t._v(" "),a("p",[t._v("Aggregate functions in SQL Server run calculations on sets of values, returning a single value.")]),t._v(" "),a("h2",{attrs:{id:"sum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sum"}},[t._v("#")]),t._v(" SUM()")]),t._v(" "),a("p",[t._v("Returns sum of numeric values in a given column.")]),t._v(" "),a("p",[t._v("We have table as shown in figure that will be used to perform different aggregate functions. The table name is "),a("strong",[t._v("Marksheet")]),t._v(".")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://i.stack.imgur.com/gUPGI.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/gUPGI.png",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MarksObtained"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("From")]),t._v(" Marksheet\n\n")])])]),a("p",[t._v("The "),a("code",[t._v("sum")]),t._v(" function doesn't consider rows with NULL value in the field used as parameter")]),t._v(" "),a("p",[t._v("In the above example if we have another row like this:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("106")]),t._v("    Italian    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n\n")])])]),a("p",[t._v("This row will not be consider in sum calculation")]),t._v(" "),a("h2",{attrs:{id:"avg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#avg"}},[t._v("#")]),t._v(" AVG()")]),t._v(" "),a("p",[t._v("Returns average of numeric values in a given column.")]),t._v(" "),a("p",[t._v("We have table as shown in figure that will be used to perform different aggregate functions. The table name is "),a("strong",[t._v("Marksheet")]),t._v(".")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://i.stack.imgur.com/gUPGI.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/gUPGI.png",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MarksObtained"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("From")]),t._v(" Marksheet\n\n")])])]),a("p",[t._v("The "),a("code",[t._v("average")]),t._v(" function doesn't consider rows with NULL value in the field used as parameter")]),t._v(" "),a("p",[t._v("In the above example if we have another row like this:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("106")]),t._v("    Italian    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n\n")])])]),a("p",[t._v("This row will not be consider in average calculation")]),t._v(" "),a("h2",{attrs:{id:"max"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#max"}},[t._v("#")]),t._v(" MAX()")]),t._v(" "),a("p",[t._v("Returns the largest value in a given column.")]),t._v(" "),a("p",[t._v("We have table as shown in figure that will be used to perform different aggregate functions. The table name is "),a("strong",[t._v("Marksheet")]),t._v(".")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://i.stack.imgur.com/gUPGI.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/gUPGI.png",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MarksObtained"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("From")]),t._v(" Marksheet\n\n")])])]),a("h2",{attrs:{id:"min"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#min"}},[t._v("#")]),t._v(" MIN()")]),t._v(" "),a("p",[t._v("Returns the smallest value in a given column.")]),t._v(" "),a("p",[t._v("We have table as shown in figure that will be used to perform different aggregate functions. The table name is "),a("strong",[t._v("Marksheet")]),t._v(".")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://i.stack.imgur.com/gUPGI.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/gUPGI.png",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MarksObtained"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("From")]),t._v(" Marksheet\n\n")])])]),a("h2",{attrs:{id:"count"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#count"}},[t._v("#")]),t._v(" COUNT()")]),t._v(" "),a("p",[t._v("Returns the total number of values in a given column.")]),t._v(" "),a("p",[t._v("We have table as shown in figure that will be used to perform different aggregate functions. The table name is "),a("strong",[t._v("Marksheet")]),t._v(".")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://i.stack.imgur.com/gUPGI.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://i.stack.imgur.com/gUPGI.png",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MarksObtained"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("From")]),t._v(" Marksheet\n\n")])])]),a("p",[t._v("The "),a("code",[t._v("count")]),t._v(" function doesn't consider rows with NULL value in the field used as parameter. Usually the count parameter is * (all fields) so only if all fields of row are NULLs this row will not be considered")]),t._v(" "),a("p",[t._v("In the above example if we have another row like this:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("106")]),t._v("    Italian    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n\n")])])]),a("p",[t._v("This row will not be consider in count calculation")]),t._v(" "),a("p",[a("strong",[t._v("NOTE")])]),t._v(" "),a("p",[t._v("The function "),a("code",[t._v("COUNT(*)")]),t._v(" returns the number of rows in a table. This value can also be obtained by using a constant non-null expression that contains no column references, such as "),a("code",[t._v("COUNT(1)")]),t._v(".")]),t._v(" "),a("p",[t._v("Example")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("From")]),t._v(" Marksheet\n\n")])])]),a("h2",{attrs:{id:"count-column-name-with-group-by-column-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#count-column-name-with-group-by-column-name"}},[t._v("#")]),t._v(" COUNT(Column_Name) with GROUP BY Column_Name")]),t._v(" "),a("p",[t._v("Most of the time we like to get the total number of occurrence of a column value in a table for example:")]),t._v(" "),a("p",[t._v("TABLE NAME :  REPORTS")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("ReportName")]),t._v(" "),a("th",[t._v("ReportPrice")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Test")]),t._v(" "),a("td",[t._v("10.00   $")])]),t._v(" "),a("tr",[a("td",[t._v("Test")]),t._v(" "),a("td",[t._v("10.00   $")])]),t._v(" "),a("tr",[a("td",[t._v("Test")]),t._v(" "),a("td",[t._v("10.00   $")])]),t._v(" "),a("tr",[a("td",[t._v("Test 2")]),t._v(" "),a("td",[t._v("11.00   $")])]),t._v(" "),a("tr",[a("td",[t._v("Test")]),t._v(" "),a("td",[t._v("10.00   $")])]),t._v(" "),a("tr",[a("td",[t._v("Test 3")]),t._v(" "),a("td",[t._v("14.00   $")])]),t._v(" "),a("tr",[a("td",[t._v("Test 3")]),t._v(" "),a("td",[t._v("14.00   $")])]),t._v(" "),a("tr",[a("td",[t._v("Test 4")]),t._v(" "),a("td",[t._v("100.00   $")])])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  \n    ReportName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" REPORT NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ReportName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" COUNT \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("     \n    REPORTS \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" \n    ReportName \n\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("REPORT NAME")]),t._v(" "),a("th",[t._v("COUNT")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Test")]),t._v(" "),a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("Test 2")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("Test 3")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("Test 4")]),t._v(" "),a("td",[t._v("1")])])])]),t._v(" "),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("ul",[a("li",[t._v("AVG([ALL|DISTINCT]"),a("strong",[t._v("expression")]),t._v(")")]),t._v(" "),a("li",[t._v("COUNT([ALL|DISTINCT]"),a("strong",[t._v("expression")]),t._v(")")]),t._v(" "),a("li",[t._v("MAX([ALL|DISTINCT]"),a("strong",[t._v("expression")]),t._v(")")]),t._v(" "),a("li",[t._v("MIN([ALL|DISTINCT]"),a("strong",[t._v("expression")]),t._v(")")]),t._v(" "),a("li",[t._v("SUM([ALL|DISTINCT]"),a("strong",[t._v("expression")]),t._v(")")])])])}),[],!1,null,null,null);e.default=n.exports}}]);