(window.webpackJsonp=window.webpackJsonp||[]).push([[2566],{2975:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" UPDATE")]),t._v(" "),s("h2",{attrs:{id:"updating-a-table-based-on-joining-another-table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-a-table-based-on-joining-another-table"}},[t._v("#")]),t._v(" Updating a table based on joining another table")]),t._v(" "),s("p",[t._v("You can also update data in a table based on data from another table:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" person \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" state_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cities"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state_code \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" cities\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" cities"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("city "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("Here we are joining the "),s("code",[t._v("person")]),t._v(" "),s("code",[t._v("city")]),t._v(" column to the "),s("code",[t._v("cities")]),t._v(" "),s("code",[t._v("city")]),t._v(" column in order to get the city's state code. This is then used to update the "),s("code",[t._v("state_code")]),t._v(" column in the "),s("code",[t._v("person")]),t._v(" table.")]),t._v(" "),s("h2",{attrs:{id:"update-all-rows-in-a-table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-all-rows-in-a-table"}},[t._v("#")]),t._v(" Update all rows in a table")]),t._v(" "),s("p",[t._v("You update all rows in table by simply providing a "),s("code",[t._v("column_name = value")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" planet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Earth'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"update-all-rows-meeting-a-condition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-all-rows-meeting-a-condition"}},[t._v("#")]),t._v(" Update all rows meeting a condition")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NY'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" city "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'New York'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"updating-multiple-columns-in-table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-multiple-columns-in-table"}},[t._v("#")]),t._v(" Updating multiple columns in table")]),t._v(" "),s("p",[t._v("You can update multiple columns in a table in the same statement, separating "),s("code",[t._v("col=val")]),t._v(" pairs with commas:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" person \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" country "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'USA'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n       state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NY'")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" city "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'New York'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);