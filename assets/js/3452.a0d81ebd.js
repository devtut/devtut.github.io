(window.webpackJsonp=window.webpackJsonp||[]).push([[3452],{3860:function(s,t,a){"use strict";a.r(t);var e=a(31),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"byval-and-byref-keywords"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#byval-and-byref-keywords"}},[s._v("#")]),s._v(" ByVal and ByRef keywords")]),s._v(" "),a("h2",{attrs:{id:"byref-keyword"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#byref-keyword"}},[s._v("#")]),s._v(" ByRef keyword")]),s._v(" "),a("p",[s._v("ByRef keyword before method parameter says that parameter will be sent in a way allowing the method to change (assign a new value) the variable underlying the parameter.")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Class")]),s._v(" SomeClass\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Property")]),s._v(" Member "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Class")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Module")]),s._v(" Program\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" someInstance "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("New")]),s._v(" SomeClass "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("With")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Member "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n        Foo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' here someInstance is not Nothing")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' but someInstance.Member is -42")]),s._v("\n\n        Bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' here someInstance is Nothing")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ByVal")]),s._v(" arg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" SomeClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Member "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Member "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' change argument content")]),s._v("\n        arg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("Nothing")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' change (re-assign) argument")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" Bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ByRef")]),s._v(" param "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Member "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Member "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' change argument content")]),s._v("\n        arg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("Nothing")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' change (re-assign) argument")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Module")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"byval-keyword"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#byval-keyword"}},[s._v("#")]),s._v(" ByVal keyword")]),s._v(" "),a("p",[s._v("ByVal keyword before method parameter (or no keyword as ByVal is assumed by default) says that parameter will be sent in a way "),a("strong",[s._v("not")]),s._v(" allowing the method to change (assign a new value) the variable underlying the parameter."),a("br"),s._v("\nIt doesn't prevent the content (or state) of the argument to be changed if it's a class.")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Class")]),s._v(" SomeClass\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Property")]),s._v(" Member "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Class")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Module")]),s._v(" Program\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" someInstance "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("New")]),s._v(" SomeClass "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("With")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Member "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        Foo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' here someInstance is not Nothing (still the same object)")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' but someInstance.Member is -42 (internal state can still be changed)")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v("\n        Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' here number is still 42")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ByVal")]),s._v(" arg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" SomeClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Member "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Member "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' change argument content")]),s._v("\n        arg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("Nothing")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' change (re-assign) argument")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("    \n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" Foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("' No ByVal or ByRef keyword, ByVal is assumed")]),s._v("\n        arg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("arg\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Module")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);