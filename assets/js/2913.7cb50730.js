(window.webpackJsonp=window.webpackJsonp||[]).push([[2913],{3321:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"lubridate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lubridate"}},[t._v("#")]),t._v(" lubridate")]),t._v(" "),a("h2",{attrs:{id:"parsing-dates-and-datetimes-from-strings-with-lubridate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsing-dates-and-datetimes-from-strings-with-lubridate"}},[t._v("#")]),t._v(" Parsing dates and datetimes from strings with lubridate")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("lubridate")]),t._v(" package provides convenient functions to format date and datetime objects from character strings. The functions are permutations of")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Letter")]),t._v(" "),a("th",[t._v("Element to parse")]),t._v(" "),a("th",[t._v("Base R equivalent")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("y")]),t._v(" "),a("td",[t._v("year")]),t._v(" "),a("td",[a("code",[t._v("%y")]),t._v(", "),a("code",[t._v("%Y")])])]),t._v(" "),a("tr",[a("td",[t._v("m (with y and d)")]),t._v(" "),a("td",[t._v("month")]),t._v(" "),a("td",[a("code",[t._v("%m")]),t._v(", "),a("code",[t._v("%b")]),t._v(", "),a("code",[t._v("%h")]),t._v(", "),a("code",[t._v("%B")])])]),t._v(" "),a("tr",[a("td",[t._v("d")]),t._v(" "),a("td",[t._v("day")]),t._v(" "),a("td",[a("code",[t._v("%d")]),t._v(", "),a("code",[t._v("%e")])])]),t._v(" "),a("tr",[a("td",[t._v("h")]),t._v(" "),a("td",[t._v("hour")]),t._v(" "),a("td",[a("code",[t._v("%H")]),t._v(", "),a("code",[t._v("%I%p")])])]),t._v(" "),a("tr",[a("td",[t._v("m (with h and s)")]),t._v(" "),a("td",[t._v("minute")]),t._v(" "),a("td",[a("code",[t._v("%M")])])]),t._v(" "),a("tr",[a("td",[t._v("s")]),t._v(" "),a("td",[t._v("seconds")]),t._v(" "),a("td",[a("code",[t._v("%S")])])])])]),t._v(" "),a("p",[t._v("e.g. "),a("code",[t._v("ymd()")]),t._v(" for parsing a date with the year followed by the month followed by the day, e.g. "),a("code",[t._v('"2016-07-22"')]),t._v(", or "),a("code",[t._v("ymd_hms()")]),t._v(" for parsing a datetime in the order year, month, day, hours, minutes, seconds, e.g. "),a("code",[t._v('"2016-07-22 13:04:47"')]),t._v(".")]),t._v(" "),a("p",[t._v("The functions are able to recognize most separators (such as "),a("code",[t._v("/")]),t._v(", "),a("code",[t._v("-")]),t._v(", and whitespace) without additional arguments. They also work with inconsistent separators.")]),t._v(" "),a("h3",{attrs:{id:"dates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dates"}},[t._v("#")]),t._v(" Dates")]),t._v(" "),a("p",[t._v("The date functions return an object of class "),a("code",[t._v("Date")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lubridate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\nmdy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' 07/02/2016 '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7 / 03 / 2016'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' 7 / 4 / 16 '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-02" "2016-07-03" "2016-07-04"')]),t._v("\n\nymd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20160724"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016/07/23"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016-07-25"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# inconsistent separators")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-24" "2016-07-23" "2016-07-25"')]),t._v("\n\n")])])]),a("h3",{attrs:{id:"datetimes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datetimes"}},[t._v("#")]),t._v(" Datetimes")]),t._v(" "),a("h3",{attrs:{id:"utility-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#utility-functions"}},[t._v("#")]),t._v(" Utility functions")]),t._v(" "),a("p",[t._v("Datetimes can be parsed using "),a("code",[t._v("ymd_hms")]),t._v(" variants including "),a("code",[t._v("ymd_hm")]),t._v(" and "),a("code",[t._v("ymd_h")]),t._v(". All datetime functions can accept a "),a("code",[t._v("tz")]),t._v(" timezone argument akin to that of "),a("code",[t._v("as.POSIXct")]),t._v(" or "),a("code",[t._v("strptime")]),t._v(", but which defaults to "),a("code",[t._v('"UTC"')]),t._v(" instead of the local timezone.")]),t._v(" "),a("p",[t._v("The datetime functions return an object of class "),a("code",[t._v("POSIXct")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20160724 130102"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016/07/23 14:02:01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016-07-25 15:03:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nymd_hms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tz"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-24 13:01:02 EST" "2016-07-23 14:02:01 EST"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [3] "2016-07-25 15:03:00 EST"')]),t._v("\n\nymd_hms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-24 13:01:02 UTC" "2016-07-23 14:02:01 UTC"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [3] "2016-07-25 15:03:00 UTC"')]),t._v("\n\n")])])]),a("h3",{attrs:{id:"parser-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parser-functions"}},[t._v("#")]),t._v(" Parser functions")]),t._v(" "),a("p",[a("code",[t._v("lubridate")]),t._v(" also includes three functions for parsing datetimes with a formatting string like "),a("code",[t._v("as.POSIXct")]),t._v(" or "),a("code",[t._v("strptime")]),t._v(":")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Function")]),t._v(" "),a("th",[t._v("Output Class")]),t._v(" "),a("th",[t._v("Formatting strings accepted")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("parse_date_time")])]),t._v(" "),a("td",[t._v("POSIXct")]),t._v(" "),a("td",[t._v("Flexible. Will accept "),a("code",[t._v("strptime")]),t._v("-style with "),a("code",[t._v("%")]),t._v(" or "),a("code",[t._v("lubridate")]),t._v(" datetime function name style, e.g "),a("code",[t._v('"ymd hms"')]),t._v(". Will accept a vector of orders for heterogeneous data and guess which is appropriate.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("parse_date_time2")])]),t._v(" "),a("td",[t._v("Default POSIXct; if "),a("code",[t._v("lt = TRUE")]),t._v(", POSIXlt")]),t._v(" "),a("td",[t._v("Strict. Accepts only "),a("code",[t._v("strptime")]),t._v(" tokens (with or without "),a("code",[t._v("%")]),t._v(") from a limited set.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("fast_strptime")])]),t._v(" "),a("td",[t._v("Default POSIXlt; if "),a("code",[t._v("lt = FALSE")]),t._v(", POSIXct")]),t._v(" "),a("td",[t._v("Strict. Accepts only "),a("code",[t._v("%")]),t._v("-delimited "),a("code",[t._v("strptime")]),t._v(" tokens with delimiters ("),a("code",[t._v("-")]),t._v(", "),a("code",[t._v("/")]),t._v(", "),a("code",[t._v(":")]),t._v(", etc.) from a limited set.")])])])]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2016-07-22 13:04:47'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'07/22/2016 1:04:47 pm'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nparse_date_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mdy Imsp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ymd hms'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:04:47 UTC" "2016-07-22 13:04:47 UTC"')]),t._v("\n\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2016-07-22 13:04:47'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2016-07-22 14:47:58'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nparse_date_time2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orders "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Ymd HMS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:04:47 UTC" "2016-07-22 14:47:58 UTC"')]),t._v("\n\nfast_strptime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" format "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y-%m-%d %H:%M:%S'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:04:47 UTC" "2016-07-22 14:47:58 UTC"')]),t._v("\n\n")])])]),a("p",[a("code",[t._v("parse_date_time2")]),t._v(" and "),a("code",[t._v("fast_strptime")]),t._v(" use a fast C parser for efficiency.")]),t._v(" "),a("p",[t._v("See "),a("code",[t._v("?parse_date_time")]),t._v(" for formatting tokens.")]),t._v(" "),a("h2",{attrs:{id:"difference-between-period-and-duration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#difference-between-period-and-duration"}},[t._v("#")]),t._v(" Difference between period and duration")]),t._v(" "),a("p",[t._v("Unlike durations, periods can be used to accurately model clock times without knowing when events such as leap seconds, leap days, and DST changes occur.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("start_2012 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" ymd_hms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2012-01-01 12:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2012-01-01 12:00:00 UTC"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# period() considers leap year calculations.")]),t._v("\nstart_2012 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" period"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"years"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2013-01-01 12:00:00 UTC"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Here duration() doesn't consider leap year calculations. ")]),t._v("\nstart_2012 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" duration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2012-12-31 12:00:00 UTC"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"instants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instants"}},[t._v("#")]),t._v(" Instants")]),t._v(" "),a("p",[t._v("An instant is a specific moment in time. Any date-time object that refers to a moment of time is recognized as an instant. To test if an object is an instant, use "),a("code",[t._v("is.instant")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lubridate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntoday_start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" dmy_hms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"22.07.2016 12:00:00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# default tz="UTC"')]),t._v("\ntoday_start\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 12:00:00 IST"')]),t._v("\nis.instant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("today_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## [1] TRUE")]),t._v("\n\nnow_dt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" ymd_hms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tz"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnow_dt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:53:09 IST"')]),t._v("\nis.instant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## [1] TRUE")]),t._v("\n\nis.instant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"helloworld"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## [1] FALSE")]),t._v("\nis.instant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## [1] FALSE")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"intervals-durations-and-periods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intervals-durations-and-periods"}},[t._v("#")]),t._v(" Intervals, Durations and Periods")]),t._v(" "),a("p",[a("strong",[t._v("Intervals")]),t._v(" are simplest way of recording timespans in lubridate. An interval is a span of time that occurs between two specific "),a("strong",[t._v("instants")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create interval by substracting two instants")]),t._v("\ntoday_start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" ymd_hms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016-07-22 12-00-00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tz"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntoday_start\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 12:00:00 IST"')]),t._v("\ntoday_end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" ymd_hms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016-07-22 23-59-59"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tz"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntoday_end\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 23:59:59 IST"')]),t._v("\nspan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" today_end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" today_start\nspan\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Time difference of 11.99972 hours")]),t._v("\nas.interval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" today_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## [1] 2016-07-22 12:00:00 IST--2016-07-22 23:59:59 IST")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create interval using interval() function")]),t._v("\nspan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" interval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("today_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" today_end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2016")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" IST"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2016")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),t._v(" IST\n\n")])])]),a("p",[a("strong",[t._v("Durations")]),t._v(" measure the exact amount of time that occurs between two instants.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("duration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"seconds"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "60s"')]),t._v("\n\nduration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"minutes"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "120s (~2 minutes)"')]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("Note:")]),t._v(" Units larger than weeks are not used due to their variability.")]),t._v(" "),a("p",[t._v("Durations can be created using "),a("code",[t._v("dseconds")]),t._v(", "),a("code",[t._v("dminutes")]),t._v(" and other duration helper functions."),a("br"),t._v("\nRun "),a("code",[t._v("?quick_durations")]),t._v(" for complete list.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("dseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "60s"')]),t._v("\n\ndhours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "7200s (~2 hours)"')]),t._v("\n\ndyears"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "31536000s (~365 days)"')]),t._v("\n\n")])])]),a("p",[t._v("Durations can be subtracted and added to instants to get new instants.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("today_start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dhours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 17:00:00 IST"')]),t._v("\n\ntoday_start "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dhours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dminutes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 17:30:15 IST"')]),t._v("\n\n")])])]),a("p",[t._v("Durations can be created from intervals.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("as.duration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"43199s (~12 hours)"')]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("Periods")]),t._v(" measure the change in clock time that occurs between two instants.")]),t._v(" "),a("p",[t._v("Periods can be created using "),a("code",[t._v("period")]),t._v(" function as well other helper functions\nlike "),a("code",[t._v("seconds")]),t._v(", "),a("code",[t._v("hours")]),t._v(", etc. To get a complete list of period helper functions, Run "),a("code",[t._v("?quick_periods")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("period"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hour"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "1H 0M 0S"')]),t._v("\n\nhours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "1H 0M 0S"')]),t._v("\n\nperiod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"months"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "6m 0d 0H 0M 0S"')]),t._v("\n\nmonths"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "6m 0d 0H 0M 0S"')]),t._v("\n\nyears"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "1y 0m 0d 0H 0M 0S"')]),t._v("\n\n")])])]),a("p",[a("code",[t._v("is.period")]),t._v(" function can be used to check if an object is a period.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("is.period"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("years"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## [1] TRUE")]),t._v("\n\nis.period"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dyears"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## [1] FALSE")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"manipulating-date-and-time-in-lubridate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manipulating-date-and-time-in-lubridate"}},[t._v("#")]),t._v(" Manipulating date and time in lubridate")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndate\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## "2016-07-22 03:42:35 IST"')]),t._v("\n\nyear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 2016")]),t._v("\n\nminute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 42")]),t._v("\n\nwday"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" label "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" abbr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] Fri")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Levels: Sun < Mon < Tues < Wed < Thurs < Fri < Sat")]),t._v("\n\nday"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## "2016-07-31 03:42:35 IST"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If an element is set to a larger value than it supports, the difference")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  will roll over into the next higher element")]),t._v("\nday"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## "2016-08-01 03:42:35 IST"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"time-zones"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time-zones"}},[t._v("#")]),t._v(" Time Zones")]),t._v(" "),a("p",[a("code",[t._v("with_tz")]),t._v(" returns a date-time as it would appear in a different time zone.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("nyc_time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"America/New_York"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnyc_time\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 05:49:08 EDT"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# corresponding Europe/Moscow time")]),t._v("\nwith_tz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nyc_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tzone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Europe/Moscow"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 12:49:08 MSK"')]),t._v("\n\n")])])]),a("p",[a("code",[t._v("force_tz")]),t._v(" returns a the date-time that has the same clock time as x in the new time zone.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("nyc_time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"America/New_York"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnyc_time\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 05:49:08 EDT"')]),t._v("\n\nforce_tz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nyc_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tzone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Europe/Moscow"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# only timezone changes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 05:49:08 MSK"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"parsing-date-and-time-in-lubridate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsing-date-and-time-in-lubridate"}},[t._v("#")]),t._v(" Parsing date and time in lubridate")]),t._v(" "),a("p",[t._v("Lubridate provides "),a("code",[t._v("ymd()")]),t._v(" series of functions for parsing character strings into dates. The letters y, m, and d correspond to the year, month, and day elements of a date-time.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mdy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"07-21-2016"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns Date")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-21"')]),t._v("\n\nmdy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"07-21-2016"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTC"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns a vector of class POSIXt")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## "2016-07-21 UTC"')]),t._v("\n\ndmy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"21-07-2016"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns Date")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-21"')]),t._v("\n\ndmy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"21.07.2016"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"22.07.2016"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns vector of class Date")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-21" "2016-07-22"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"rounding-dates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rounding-dates"}},[t._v("#")]),t._v(" Rounding dates")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("now_dt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" ymd_hms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tz"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnow_dt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:53:09 IST"')]),t._v("\n\n")])])]),a("p",[a("code",[t._v("round_date()")]),t._v(" takes a date-time object and rounds it to the nearest integer value of the specified time unit.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("round_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"minute"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:53:00 IST"')]),t._v("\n\nround_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hour"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 14:00:00 IST"')]),t._v("\n\nround_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"year"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2017-01-01 IST"')]),t._v("\n\n")])])]),a("p",[a("code",[t._v("floor_date()")]),t._v(" takes a date-time object and rounds it down to the nearest integer value of the specified time unit.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("floor_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"minute"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:53:00 IST"')]),t._v("\n\nfloor_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hour"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:00:00 IST"')]),t._v("\n\nfloor_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"year"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-01-01 IST"')]),t._v("\n\n")])])]),a("p",[a("code",[t._v("ceiling_date()")]),t._v(" takes a date-time object and rounds it up to the nearest integer value of the specified time unit.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("ceiling_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"minute"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 13:54:00 IST"')]),t._v("\n\nceiling_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hour"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2016-07-22 14:00:00 IST"')]),t._v("\n\nceiling_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now_dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"year"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('## [1] "2017-01-01 IST"')]),t._v("\n\n")])])]),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("ul",[a("li",[t._v('ymd_hms(..., quiet = FALSE, tz = "UTC", locale = Sys.getlocale("LC_TIME"))')]),t._v(" "),a("li",[t._v('now(tzone = "")')]),t._v(" "),a("li",[t._v('interval(start, end, tzone = attr(start, "tzone"))')]),t._v(" "),a("li",[t._v('duration(num = NULL, units = "seconds", ...)')]),t._v(" "),a("li",[t._v('period(num = NULL, units = "second", ...)')])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v("To install package from CRAN:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("install.packages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lubridate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("To install development version from Github:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("devtools"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dev mode allows testing of development packages in a sandbox, without interfering")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# with the other packages you have installed.")]),t._v("\ndev_mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ninstall_github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hadley/lubridate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndev_mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("To get vignettes on lubridate package:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("vignette"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lubridate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("To get help about some function "),a("code",[t._v("foo")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("help"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# help about function foo")]),t._v("\n?foo          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# same thing")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# help("is.period")')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ?is.period")]),t._v("\n\n")])])]),a("p",[t._v("To get examples for a function "),a("code",[t._v("foo")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# example("interval")')]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);