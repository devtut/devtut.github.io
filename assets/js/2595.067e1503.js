(window.webpackJsonp=window.webpackJsonp||[]).push([[2595],{3003:function(e,t,a){"use strict";a.r(t);var s=a(31),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"handling-secrets-and-credentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handling-secrets-and-credentials"}},[e._v("#")]),e._v(" Handling Secrets and Credentials")]),e._v(" "),a("p",[e._v("In Powershell, to avoid storing the password in "),a("strong",[e._v("clear text")]),e._v(" we use different methods of encryption and store it as secure string. When you are not specifying a key or securekey, this will only work for the same user on the same computer will be able to decrypt the encrypted string if youâ€™re not using Keys/SecureKeys. Any process that runs under that same user account will be able to decrypt that encrypted string on that same machine.")]),e._v(" "),a("h2",{attrs:{id:"accessing-the-plaintext-password"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessing-the-plaintext-password"}},[e._v("#")]),e._v(" Accessing the Plaintext Password")]),e._v(" "),a("p",[e._v("The password in a credential object is an encrypted "),a("code",[e._v("[SecureString]")]),e._v(". The most straightforward way is to get a "),a("code",[e._v("[NetworkCredential]")]),e._v(" which does not store the password encrypted:")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Credential")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$plainPass")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("GetNetworkCredential"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Password\n\n")])])]),a("p",[e._v("The helper method ("),a("code",[e._v(".GetNetworkCredential()")]),e._v(") only exists on "),a("code",[e._v("[PSCredential]")]),e._v(" objects."),a("br"),e._v(" To directly deal with a "),a("code",[e._v("[SecureString]")]),e._v(", use .NET methods:")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$bstr")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token namespace"}},[e._v("[System.Runtime.InteropServices.Marshal]")]),e._v("::SecureStringToBSTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$secStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$plainPass")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token namespace"}},[e._v("[System.Runtime.InteropServices.Marshal]")]),e._v("::PtrToStringAuto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$bstr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n")])])]),a("h2",{attrs:{id:"prompting-for-credentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prompting-for-credentials"}},[e._v("#")]),e._v(" Prompting for Credentials")]),e._v(" "),a("p",[e._v("To prompt for credentials, you should almost always use the "),a("a",{attrs:{href:"https://technet.microsoft.com/en-us/library/hh849815.aspx",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Get-Credential")]),a("OutboundLink")],1),e._v(" cmdlet:")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Credential")]),e._v("\n\n")])])]),a("p",[e._v("Pre-filled user name:")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Credential")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("UserName "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'myUser'")]),e._v("\n\n")])])]),a("p",[e._v("Add a custom prompt message:")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Credential")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Message "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Please enter your company email address and password.'")]),e._v("\n\n")])])]),a("h2",{attrs:{id:"working-with-stored-credentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#working-with-stored-credentials"}},[e._v("#")]),e._v(" Working with Stored Credentials")]),e._v(" "),a("p",[e._v("To store and retrieve encrypted credentials easily, use PowerShell's built-in XML serialization (Clixml):")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Credential")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Export-CliXml")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Path "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'C:\\My\\Path\\cred.xml'")]),e._v("\n\n")])])]),a("p",[e._v("To re-import:")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Import-CliXml")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Path "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'C:\\My\\Path\\cred.xml'")]),e._v("\n\n")])])]),a("p",[e._v("The important thing to remember is that by default this uses the Windows data protection API, and the key used to encrypt the password is specific to both the "),a("strong",[e._v("user and the machine")]),e._v(" that the code is running under.")]),e._v(" "),a("p",[a("strong",[e._v("As a result, the encrypted credential cannot be imported by a different user nor the same user on a different computer.")])]),e._v(" "),a("p",[e._v("By encrypting several versions of the same credential with different running users and on different computers, you can have the same secret available to multiple users.")]),e._v(" "),a("p",[e._v("By putting the user and computer name in the file name, you can store all of the encrypted secrets in a way that allows for the same code to use them without hard coding anything:")]),e._v(" "),a("h3",{attrs:{id:"encrypter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#encrypter"}},[e._v("#")]),e._v(" Encrypter")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# run as each user, and on each computer")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Credential")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Export-CliXml")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Path "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"C:\\My\\Secrets\\myCred_${env:USERNAME}_${env:COMPUTERNAME}.xml"')]),e._v("\n\n")])])]),a("h3",{attrs:{id:"the-code-that-uses-the-stored-credentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-code-that-uses-the-stored-credentials"}},[e._v("#")]),e._v(" The code that uses the stored credentials:")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credential")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Import-CliXml")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Path "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"C:\\My\\Secrets\\myCred_${env:USERNAME}_${env:COMPUTERNAME}.xml"')]),e._v("\n\n")])])]),a("p",[e._v("The correct version of the file for the running user will be loaded automatically (or it will fail because the file doesn't exist).")]),e._v(" "),a("h2",{attrs:{id:"storing-the-credentials-in-encrypted-form-and-passing-it-as-parameter-when-required"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storing-the-credentials-in-encrypted-form-and-passing-it-as-parameter-when-required"}},[e._v("#")]),e._v(" Storing the credentials in Encrypted form and Passing it as parameter when Required")]),e._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$username")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"user1@domain.com"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$pwdTxt")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Content")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"C:\\temp\\Stored_Password.txt"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$securePwd")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$pwdTxt")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ConvertTo-SecureString")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credObject")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("New-Object")]),e._v(" System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Management"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Automation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PSCredential "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("ArgumentList "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$securePwd")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Now, $credObject is having the credentials stored and you can pass it wherever you want.")]),e._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## Import Password with AES")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$username")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"user1@domain.com"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$AESKey")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Content")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$AESKeyFilePath")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$pwdTxt")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Get-Content")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SecurePwdFilePath")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$securePwd")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$pwdTxt")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ConvertTo-SecureString")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Key "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$AESKey")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$credObject")]),e._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("New-Object")]),e._v(" System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Management"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Automation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PSCredential "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("ArgumentList "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$securePwd")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Now, $credObject is having the credentials stored with AES Key and you can pass it wherever you want.")]),e._v("\n\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);