(window.webpackJsonp=window.webpackJsonp||[]).push([[2352],{2760:function(s,t,e){"use strict";e.r(t);var a=e(31),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"hints"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hints"}},[s._v("#")]),s._v(" Hints")]),s._v(" "),e("h2",{attrs:{id:"parallel-hint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parallel-hint"}},[s._v("#")]),s._v(" Parallel Hint")]),s._v(" "),e("p",[s._v("Statement-level parallel hints are the easiest:")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*+ PARALLEL(8) */")]),s._v(" first_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" last_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee emp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),e("p",[s._v("Object-level parallel hints give more control but are more prone to errors; developers often forget to use the alias instead of the object name, or they forget to include some objects.")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*+ PARALLEL(emp,8) */")]),s._v(" first_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" last_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee emp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),e("p",[e("code",[s._v("SELECT /*+ PARALLEL(table_alias,Degree of Parallelism) */ FROM table_name table_alias;")])]),s._v(" "),e("p",[s._v("Let's say a query takes 100 seconds to execute without using parallel hint.\nIf we change DOP to 2 for same query, then "),e("strong",[s._v("ideally")]),s._v(" the same query with parallel hint will take 50 second. Similarly using DOP as 4 will take 25 seconds.")]),s._v(" "),e("p",[s._v("In practice, parallel execution depends on many other factors and does not scale linearly.  This is especially true for small run times where the parallel overhead may be larger than the gains from running in multiple parallel servers.")]),s._v(" "),e("h2",{attrs:{id:"use-nl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-nl"}},[s._v("#")]),s._v(" USE_NL")]),s._v(" "),e("p",[s._v("Use Nested Loops.")]),s._v(" "),e("p",[s._v("Usage : "),e("code",[s._v("use_nl(A B)")])]),s._v(" "),e("p",[s._v("This hint will ask the engine to use nested loop method to join the tables A and B. That is row by row comparison. The hint does not force the order of the join, just asks for NL.")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*+use_nl(e d)*/")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Employees E\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Departments D "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" E"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DepartmentID "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" D"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID\n\n")])])]),e("h2",{attrs:{id:"append-hint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#append-hint"}},[s._v("#")]),s._v(" APPEND HINT")]),s._v(" "),e("p",[s._v('"Use DIRECT PATH method for inserting new rows".')]),s._v(" "),e("p",[s._v("The "),e("code",[s._v("APPEND")]),s._v(" hint instructs the engine to use "),e("a",{attrs:{href:"http://docs.oracle.com/cd/E11882_01/server.112/e41084/sql_elements006.htm#SQLRF50901",target:"_blank",rel:"noopener noreferrer"}},[s._v("direct path load"),e("OutboundLink")],1),s._v(". This means that the engine will not use a conventional insert using memory structures and standard locks, but will write directly to the tablespace the data. Always creates new blocks which are appended to the table's segment. This will be faster, but have some limitations:")]),s._v(" "),e("ul",[e("li",[s._v("You cannot read from the table you appended in the same session until you commmit or rollback the transaction.")]),s._v(" "),e("li",[s._v("If there are triggers defined on the table Oracle "),e("a",{attrs:{href:"https://asktom.oracle.com/pls/apex/f?p=100:11:0::::P11_QUESTION_ID:1211797200346279484#2096268200346987629",target:"_blank",rel:"noopener noreferrer"}},[s._v("will not use direct path"),e("OutboundLink")],1),s._v("(it's a different story for sqlldr loads).")]),s._v(" "),e("li",[s._v("others")])]),s._v(" "),e("p",[s._v("Example.")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*+append*/")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" Employees\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Employees"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"use-hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-hash"}},[s._v("#")]),s._v(" USE_HASH")]),s._v(" "),e("p",[s._v("Instructs the engine to use hash method to join tables in the argument.")]),s._v(" "),e("p",[s._v("Usage : "),e("code",[s._v("use_hash(TableA [TableB] ... [TableN])")])]),s._v(" "),e("p",[s._v("As "),e("a",{attrs:{href:"https://jonathanlewis.wordpress.com/2013/09/07/hash-joins/",target:"_blank",rel:"noopener noreferrer"}},[s._v("explained"),e("OutboundLink")],1),s._v(" in "),e("a",{attrs:{href:"https://docs.oracle.com/database/121/TGSQL/glossary.htm#GUID-FF45796B-8A90-45C6-8A40-0B308B72AF7C",target:"_blank",rel:"noopener noreferrer"}},[s._v("many"),e("OutboundLink")],1),s._v(" "),e("a",{attrs:{href:"http://logicalread.solarwinds.com/oracle-11g-hash-joins-mc02/#.V5Wm4_mnoUI",target:"_blank",rel:"noopener noreferrer"}},[s._v("places"),e("OutboundLink")],1),s._v(',  "in a HASH join, Oracle accesses one table (usually the smaller of the joined results) and builds a hash table on the join key in memory. It then scans the other table in the join (usually the larger one) and probes the hash table for matches to it."')]),s._v(" "),e("p",[s._v("It is preferred against Nested Loops method when the tables are big, no indexes are at hand, etc.")]),s._v(" "),e("p",[e("strong",[s._v("Note")]),s._v(": The hint does not force the order of the join, just asks for HASH JOIN method.")]),s._v(" "),e("p",[s._v("Example of usage:")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*+use_hash(e d)*/")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Employees E\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Departments D "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" E"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DepartmentID "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" D"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID\n\n")])])]),e("h2",{attrs:{id:"full"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full"}},[s._v("#")]),s._v(" FULL")]),s._v(" "),e("p",[s._v("The FULL hint tells Oracle to perform a full table scan on a specified table, no matter if an index can be used.")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" fullTable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("level")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" dual "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("connect")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("level")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" fullTable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),e("p",[s._v("With no hints, the index is used:")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" fullTable f "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------------------------------------------------------------------------")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Id  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Operation         "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Rows")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Bytes "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Cost "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("CPU"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Time")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------------------------------------------------------------------------")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" STATEMENT  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("      "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SORT AGGREGATE   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("      "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("            "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("          "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" RANGE SCAN"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" IDX  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------------------------------------------------------------------------")]),s._v("\n\n")])])]),e("p",[s._v("FULL hint forces a full scan:")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*+ full(f) */")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" fullTable f "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------------------------------------------------------------------------------")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Id  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Operation          "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Name      "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Rows")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Bytes "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Cost "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("CPU"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Time")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------------------------------------------------------------------------------")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" STATEMENT   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("47")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SORT AGGREGATE    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("            "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("          "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" ACCESS "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FULL")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" FULLTABLE "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("47")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------------------------------------------------------------------------------")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"result-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#result-cache"}},[s._v("#")]),s._v(" Result Cache")]),s._v(" "),e("p",[s._v("Oracle ("),e("strong",[s._v("11g and above")]),s._v(") allows the SQL queries to be cached in the "),e("a",{attrs:{href:"https://docs.oracle.com/cd/B19306_01/server.102/b14220/memory.htm#i10093",target:"_blank",rel:"noopener noreferrer"}},[s._v("SGA"),e("OutboundLink")],1),s._v(" and reused to improve performance. It queries the data from cache rather than database. Subsequent execution of same query is faster because now the data is being pulled from cache.")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*+ result_cache */")]),s._v(" number "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" main_table"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),e("p",[s._v("Output -")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[s._v("Number\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\nElapsed: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("02.20")]),s._v("\n\n")])])]),e("p",[s._v("If I run the same query again now, the time to execute will reduce since the data is now fetched from cache which was set during the first execution.")]),s._v(" "),e("p",[s._v("Output -")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[s._v("Number\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\nElapsed: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("00.10")]),s._v("\n\n")])])]),e("p",[s._v("Notice how the elapsed time reduced from "),e("strong",[s._v("2.20 seconds")]),s._v(" to "),e("strong",[s._v("0.10 seconds")]),s._v(".")]),s._v(" "),e("blockquote"),s._v(" "),e("p",[s._v("Result Cache holds the cache until the data in database is updated/altered/deleted. Any change will release the cache.")]),s._v(" "),e("h4",{attrs:{id:"parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[s._v("#")]),s._v(" Parameters")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("Parameters")]),s._v(" "),e("th",[s._v("Details")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("Degree of Parallelism (DOP)")]),s._v(" "),e("td",[s._v("It is the number of parallel connection/processes which you want your query to open up. It is usually 2, 4, 8, 16 so on.")])]),s._v(" "),e("tr",[e("td",[s._v("Table Name")]),s._v(" "),e("td",[s._v("The name of the table on which parallel hint will be applied.")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);