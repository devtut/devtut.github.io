(window.webpackJsonp=window.webpackJsonp||[]).push([[1288],{1695:function(a,t,e){"use strict";e.r(t);var s=e(31),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"pixel-manipulation-with-getimagedata-and-putimagedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pixel-manipulation-with-getimagedata-and-putimagedata"}},[a._v("#")]),a._v(' Pixel Manipulation with "getImageData" and "putImageData"')]),a._v(" "),e("h2",{attrs:{id:"introduction-to-context-getimagedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction-to-context-getimagedata"}},[a._v("#")]),a._v(' Introduction to "context.getImageData"')]),a._v(" "),e("p",[a._v("Html5 Canvas gives you the ability to fetch and change the color of any pixel on the canvas.")]),a._v(" "),e("p",[e("strong",[a._v("You can use Canvas's pixel manipulation to:")])]),a._v(" "),e("ul",[e("li",[a._v("Create a color-picker for an image or select a color on a color-wheel.")]),a._v(" "),e("li",[a._v("Create complex image filters like blurring and edge detection.")]),a._v(" "),e("li",[a._v("Recolor any part of an image at the pixel level (if you use HSL you can even recolor an image while retaining the important Lighting & Saturation so the result doesn't look like someone slapped paint on the image). Note: Canvas now has Blend Compositing that can also recolor an image in some cases.")]),a._v(" "),e("li",[a._v('"Knockout" the background around a person/item in an image,')]),a._v(" "),e("li",[a._v("Create a paint-bucket tool to detect and Floodfill part of an image (eg, change the color of a user-clicked flower petal from green to yellow).")]),a._v(" "),e("li",[a._v("Examine an image for content (eg. facial recognition).")])]),a._v(" "),e("p",[e("strong",[a._v("Common issues:")])]),a._v(" "),e("ul",[e("li",[a._v("For security reasons, "),e("code",[a._v("getImageData")]),a._v(" is disabled if you have drawn an image originating on a different domain than the web page itself.")]),a._v(" "),e("li",[e("code",[a._v("getImageData")]),a._v(" is a relatively expensive method because it creates a large pixel-data array and because it does not use the GPU to assist its efforts. Note: Canvas now has blend compositing that can do some of the same pixel manipulation that "),e("code",[a._v("getImageData")]),a._v(" does.")]),a._v(" "),e("li",[a._v("For .png images, "),e("code",[a._v("getImageData")]),a._v(" might not report the exact same colors as in the original .png file because the browser is allowed to do gamma-correction and alpha-premultiplication when drawing images on the canvas.")])]),a._v(" "),e("p",[e("strong",[a._v("Getting pixel colors")])]),a._v(" "),e("p",[a._v("Use "),e("code",[a._v("getImageData")]),a._v(" to fetch the pixel colors for all or part of your canvas content.")]),a._v(" "),e("p",[a._v("The "),e("code",[a._v("getImageData")]),a._v(" method returns an "),e("code",[a._v("imageData")]),a._v(" object")]),a._v(" "),e("p",[a._v("The "),e("code",[a._v("imageData")]),a._v(" object has a "),e("code",[a._v(".data")]),a._v(" property that contains the pixel color information.")]),a._v(" "),e("p",[a._v("The "),e("code",[a._v("data")]),a._v(" property is a "),e("code",[a._v("Uint8ClampedArray")]),a._v(" containing the Red, Green, Blue & Alpha (opacity) color data for all requested pixels.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// determine which pixels to fetch (this fetches all pixels on the canvas)")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" x"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" y"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" width"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("canvas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("width"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" height"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("canvas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Fetch the imageData object ")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" imageData "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("getImageData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("width"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Pull the pixel color data array from the imageData object")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" pixelDataArray "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" imageData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),e("p",[a._v("You can get position of any [x,y] pixel within "),e("code",[a._v("data")]),a._v(" array like this:")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// the data[] array position for pixel [x,y]")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" n "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" canvas"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("width "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),e("p",[a._v("And then you can fetch that pixel's red, green, blue & alpha values like this:")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// the RGBA info for pixel [x,y]")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" red"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" green"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" blue"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" alpha"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),e("h3",{attrs:{id:"an-illustration-showing-how-the-pixel-data-array-is-structured"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#an-illustration-showing-how-the-pixel-data-array-is-structured"}},[a._v("#")]),a._v(" An Illustration showing how the pixel data array is structured")]),a._v(" "),e("p",[e("code",[a._v("context.getImageData")]),a._v(" is illustrated below for a small 2x3 pixel sized canvas:")]),a._v(" "),e("p",[e("a",{attrs:{href:"http://i.stack.imgur.com/XekRd.png",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"http://i.stack.imgur.com/XekRd.png",alt:"enter image description here"}}),e("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);