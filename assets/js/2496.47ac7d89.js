(window.webpackJsonp=window.webpackJsonp||[]).push([[2496],{2904:function(t,e,a){"use strict";a.r(e);var s=a(31),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"psr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#psr"}},[t._v("#")]),t._v(" PSR")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"http://www.php-fig.org/psr/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PSR"),a("OutboundLink")],1),t._v(" (PHP Standards Recommendation) is a series of recommendations put together by the "),a("a",{attrs:{href:"http://www.php-fig.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("FIG"),a("OutboundLink")],1),t._v(" (Framework Interop Group).")]),t._v(" "),a("p",[t._v('"The idea behind the group is for project representatives to talk about the commonalities between our projects and find ways we can work together" - '),a("a",{attrs:{href:"http://www.php-fig.org/faqs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("FIG FAQ"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("PSRs can be in the following states: Accepted, Review, Draft or Deprecated.")]),t._v(" "),a("h2",{attrs:{id:"psr-4-autoloader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#psr-4-autoloader"}},[t._v("#")]),t._v(" PSR-4: Autoloader")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.php-fig.org/psr/psr-4/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PSR-4"),a("OutboundLink")],1),t._v(" is an "),a("strong",[t._v("accepted recommendation")]),t._v(" that outlines the standard for autoloading classes via filenames. This recommendation is recommended as the alternative to the earlier (and now deprecated) "),a("a",{attrs:{href:"http://www.php-fig.org/psr/psr-0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PSR-0"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("The fully qualified class name should match the following requirement:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n\\<NamespaceName>(\\<SubNamespaceNames>)*\\<ClassName>\n\n")])])]),a("ul",[a("li",[t._v("It MUST contain a top level vendor namespace (E.g.: "),a("code",[t._v("Alphabet")]),t._v(")")]),t._v(" "),a("li",[t._v("It MAY contain one or more sub-namespaces (E.g.: "),a("code",[t._v("Google\\AdWord")]),t._v(")")]),t._v(" "),a("li",[t._v("It MUST contain an ending class name (E.g.: "),a("code",[t._v("KeywordPlanner")]),t._v(")")])]),t._v(" "),a("p",[t._v("Thus the final class name would be "),a("code",[t._v("Alphabet\\Google\\AdWord\\KeywordPlanner")]),t._v(". The fully qualified class name should also translate into a meaningful file path therefore "),a("code",[t._v("Alphabet\\Google\\AdWord\\KeywordPlanner")]),t._v(" would be located in "),a("code",[t._v("[path_to_source]/Alphabet/Google/AdWord/KeywordPlanner.php")])]),t._v(" "),a("p",[t._v("Starting with PHP 5.3.0, a "),a("a",{attrs:{href:"http://php.net/manual/en/function.spl-autoload-register.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("custom autoloader function"),a("OutboundLink")],1),t._v(" can be defined to load files based on the path and filename pattern that you define.")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Edit your php to include something like:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spl_autoload_register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'classes/'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'.class.php'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("Replacing the location ('classes/') and filename extension ('.class.php') with values that apply to your structure.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/documentation/php/1053/composer-dependency-manager",target:"_blank",rel:"noopener noreferrer"}},[t._v("Composer"),a("OutboundLink")],1),t._v(" package manager "),a("a",{attrs:{href:"https://getcomposer.org/doc/01-basic-usage.md#autoloading",target:"_blank",rel:"noopener noreferrer"}},[t._v("supports PSR-4"),a("OutboundLink")],1),t._v(" which means, if you follow the standard, you can load your classes in your project automatically using Composer's vendor autoloader.")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Edit the composer.json file to include")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"autoload"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"psr-4"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"Alphabet\\\\"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"[path_to_source]"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("Regenerate the autoloader file")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[t._v("$ composer dump"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("autoload\n\n")])])]),a("p",[t._v("Now in your code you can do the following:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__DIR__")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/vendor/autoload.php'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$KeywordPlanner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name class-name-fully-qualified"}},[t._v("Alphabet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Google"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("AdWord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("KeywordPlanner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])]),a("h2",{attrs:{id:"psr-1-basic-coding-standard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#psr-1-basic-coding-standard"}},[t._v("#")]),t._v(" PSR-1: Basic Coding Standard")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.php-fig.org/psr/psr-1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PSR-1"),a("OutboundLink")],1),t._v(" is an "),a("strong",[t._v("accepted recommendation")]),t._v(" and outlines a basic standard recommendation for how code should be written.")]),t._v(" "),a("ul",[a("li",[t._v("It outlines naming convetions for classes, methods and constants.")]),t._v(" "),a("li",[t._v("It makes adopting PSR-0 or PSR-4 recommendations a requirement.")]),t._v(" "),a("li",[t._v("It indicates which PHP tags to use: "),a("code",[t._v("<?php")]),t._v(" and "),a("code",[t._v("<?=")]),t._v(" but not "),a("code",[t._v("<?")]),t._v(".")]),t._v(" "),a("li",[t._v("It specifies what file encoding to use (UTF8).")]),t._v(" "),a("li",[t._v("It also states that files should either declare new symbols (classes, functions, constants, etc.) and cause no other side effects, or execute logic with side effects and not define symbols, but do both.")])]),t._v(" "),a("h2",{attrs:{id:"psr-8-huggable-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#psr-8-huggable-interface"}},[t._v("#")]),t._v(" PSR-8: Huggable Interface")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/php-fig/fig-standards/tree/master/proposed/psr-8-hug",target:"_blank",rel:"noopener noreferrer"}},[t._v("PSR-8"),a("OutboundLink")],1),t._v(" is a spoof PSR ("),a("strong",[t._v("currently in Draft")]),t._v(") "),a("a",{attrs:{href:"https://groups.google.com/d/msg/php-fig/pcCMC6Kpq74/fEhWihgz_zMJ",target:"_blank",rel:"noopener noreferrer"}},[t._v("proposed by Larry Garfield"),a("OutboundLink")],1),t._v(" as an April Fools joke on 1 April 2014.")]),t._v(" "),a("p",[t._v("The draft outlines how to define an interface to make an object "),a("code",[t._v("Huggable")]),t._v(".")]),t._v(" "),a("p",[t._v("Excert from the code outline:")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("Psr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Hug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Defines a huggable object.\n *\n * A huggable object expresses mutual affection with another huggable object.\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("Huggable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * Hugs this object.\n     *\n     * All hugs are mutual. An object that is hugged MUST in turn hug the other\n     * object back by calling hug() on the first parameter. All objects MUST\n     * implement a mechanism to prevent an infinite loop of hugging.\n     *\n     * @param Huggable $h\n     *   The object that is hugging this object.\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("hug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("Huggable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$h")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);