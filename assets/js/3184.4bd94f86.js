(window.webpackJsonp=window.webpackJsonp||[]).push([[3184],{3593:function(s,t,a){"use strict";a.r(t);var n=a(31),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"safe-constantize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#safe-constantize"}},[s._v("#")]),s._v(" Safe Constantize")]),s._v(" "),a("h2",{attrs:{id:"successful-safe-constantize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#successful-safe-constantize"}},[s._v("#")]),s._v(" Successful safe_constantize")]),s._v(" "),a("p",[a("code",[s._v("User")]),s._v(" is an "),a("code",[s._v("ActiveRecord")]),s._v(" or "),a("code",[s._v("Mongoid")]),s._v(" class. Replace "),a("code",[s._v("User")]),s._v(" with any "),a("code",[s._v("Rails")]),s._v(" class in your project (even something like "),a("code",[s._v("Integer")]),s._v(" or "),a("code",[s._v("Array")]),s._v(")")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("my_string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"User"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Capitalized string")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => 'User'")]),s._v("\nmy_constant "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" my_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("safe_constantize\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => User")]),s._v("\nmy_constant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => 18")]),s._v("\n\nmy_string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Array"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => 'Array'")]),s._v("\nmy_constant "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" my_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("safe_constantize\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => Array")]),s._v("\nmy_constant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => [nil, nil, nil, nil]")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"unsuccessful-safe-constantize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unsuccessful-safe-constantize"}},[s._v("#")]),s._v(" Unsuccessful safe_constantize")]),s._v(" "),a("p",[s._v("This example will not work because the string passed in isn't recognized as a constant in the project. Even if you pass in "),a("code",[s._v('"array"')]),s._v(", it won't work as it isn't capitalized.")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("my_string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not_a_constant"')]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => 'not_a_constant'")]),s._v("\nmy_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("safe_constantize\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => nil")]),s._v("\n\nmy_string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"array"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Not capitalized!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => 'array'")]),s._v("\nmy_string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("safe_constantize\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# => nil")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);