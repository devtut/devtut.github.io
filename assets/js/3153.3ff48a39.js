(window.webpackJsonp=window.webpackJsonp||[]).push([[3153],{3560:function(s,t,a){"use strict";a.r(t);var e=a(31),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"factory-girl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#factory-girl"}},[s._v("#")]),s._v(" Factory Girl")]),s._v(" "),a("h2",{attrs:{id:"defining-factories"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defining-factories"}},[s._v("#")]),s._v(" Defining Factories")]),s._v(" "),a("p",[s._v("If you have a ActiveRecord User class with name and email attributes, you could create a factory for it by making the FactoryGirl guess it:")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FactoryGirl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("define "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  factory "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":user")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it will guess the User class")]),s._v("\n    name     "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),s._v("\n    email    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"john@example.com"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n\n")])])]),a("p",[s._v("Or you can make it explicit and even change its name:")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FactoryGirl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("define "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  factory "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":user_jack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("User")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    name     "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jack"')]),s._v("\n    email    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jack@example.com"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n\n")])])]),a("p",[s._v("Then in your spec you can use the FactoryGirl's methods with these, like this:")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To create a non saved instance of the User class filled with John's data ")]),s._v("\nbuild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and to create a non saved instance of the User class filled with Jack's data")]),s._v("\nbuild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":user_jack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("p",[s._v("The most common methods are:")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build returns a non saved instance")]),s._v("\nuser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" build"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create returns a saved instance")]),s._v("\nuser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Attributes_for returns a hash of the attributes used to build an instance")]),s._v("\nattrs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" attributes_for"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);