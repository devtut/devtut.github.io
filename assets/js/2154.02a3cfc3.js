(window.webpackJsonp=window.webpackJsonp||[]).push([[2154],{2562:function(t,e,s){"use strict";s.r(e);var a=s(31),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"time-with-subsecond-precision"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#time-with-subsecond-precision"}},[t._v("#")]),t._v(" Time with subsecond precision")]),t._v(" "),s("h2",{attrs:{id:"get-the-current-time-with-millisecond-precision"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-the-current-time-with-millisecond-precision"}},[t._v("#")]),t._v(" Get the current time with millisecond precision")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("does the trick.")]),t._v(" "),s("h2",{attrs:{id:"get-the-current-time-in-a-form-that-looks-like-a-javascript-timestamp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-the-current-time-in-a-form-that-looks-like-a-javascript-timestamp"}},[t._v("#")]),t._v(" Get the current time in a form that looks like a Javascript timestamp.")]),t._v(" "),s("p",[t._v("Javascript timestamps are based on the venerable UNIX "),s("code",[t._v("time_t")]),t._v(" data type, and show the number of milliseconds since "),s("code",[t._v("1970-01-01 00:00:00")]),t._v(" UTC.")]),t._v(" "),s("p",[t._v("This expression gets the current time as a Javascript timestamp integer. (It does so correctly regardless of the current time_zone setting.)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\nROUND(UNIX_TIMESTAMP(NOW(3)) * 1000.0, 0)\n\n")])])]),s("p",[t._v("If you have "),s("code",[t._v("TIMESTAMP")]),t._v(" values stored in a column, you can retrieve them as integer Javascript timestamps using the UNIX_TIMESTAMP() function.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n SELECT ROUND(UNIX_TIMESTAMP(column) * 1000.0, 0)\n\n")])])]),s("p",[t._v("If your column contains "),s("code",[t._v("DATETIME")]),t._v(" columns and you retrieve them as Javascript timestamps, those timestamps will be offset by the time zone offset of the time zone they're stored in.")]),t._v(" "),s("h2",{attrs:{id:"create-a-table-with-columns-to-store-sub-second-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-table-with-columns-to-store-sub-second-time"}},[t._v("#")]),t._v(" Create a  table with columns to store sub-second time.")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" times "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n     dt "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n     ts "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TIMESTAMP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("makes a table with millisecond-precision date / time fields.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\nINSERT INTO times VALUES (NOW(3), NOW(3));\n\n")])])]),s("p",[t._v("inserts a row containing "),s("code",[t._v("NOW()")]),t._v(" values with millisecond precision into the table.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\nINSERT INTO times VALUES ('2015-01-01 16:34:00.123','2015-01-01 16:34:00.128');\n\n")])])]),s("p",[t._v("inserts specific millisecond precision values.")]),t._v(" "),s("p",[s("strong",[t._v("Notice")]),t._v(" that you must use "),s("code",[t._v("NOW(3)")]),t._v(" rather than "),s("code",[t._v("NOW()")]),t._v(" if you use that function to insert high-precision time values.")]),t._v(" "),s("h2",{attrs:{id:"convert-a-millisecond-precision-date-time-value-to-text"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#convert-a-millisecond-precision-date-time-value-to-text"}},[t._v("#")]),t._v(" Convert a millisecond-precision date / time value to text.")]),t._v(" "),s("p",[s("code",[t._v("%f")]),t._v(" is the fractional precision format specifier for "),s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_date-format",target:"_blank",rel:"noopener noreferrer"}},[t._v("the DATE_FORMAT() function"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" DATE_FORMAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y-%m-%d %H:%i:%s.%f'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("displays a value like "),s("code",[t._v("2016-11-19 09:52:53.248000")]),t._v(" with fractional microseconds. Because we used "),s("code",[t._v("NOW(3)")]),t._v(", the final three digits in the fraction are 0.")]),t._v(" "),s("h2",{attrs:{id:"store-a-javascript-timestamp-into-a-timestamp-column"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#store-a-javascript-timestamp-into-a-timestamp-column"}},[t._v("#")]),t._v(" Store a Javascript timestamp into a TIMESTAMP column")]),t._v(" "),s("p",[t._v("If you have a Javascript timestamp value, for example "),s("code",[t._v("1478960868932")]),t._v(", you can convert that to a MySQL fractional time value like this:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("FROM_UNIXTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1478960868932")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("It's simple to use that kind of expression to store your Javascript timestamp into a MySQL table. Do this:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("col"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FROM_UNIXTIME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1478960868932")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("(Obviously, you'll want to insert other columns.)")]),t._v(" "),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),s("p",[t._v("You need to be at MySQL version 5.6.4 or later to declare columns with fractional-second time datatypes.")]),t._v(" "),s("p",[t._v("For example, "),s("code",[t._v("DATETIME(3)")]),t._v(" will give you millisecond resolution in your timestamps, and "),s("code",[t._v("TIMESTAMP(6)")]),t._v(" will give you microsecond resolution on a *nix-style timestamp.")]),t._v(" "),s("p",[t._v("Read this: "),s("a",{attrs:{href:"http://dev.mysql.com/doc/refman/5.7/en/fractional-seconds.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://dev.mysql.com/doc/refman/5.7/en/fractional-seconds.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("NOW(3)")]),t._v(" will give you the present time from your MySQL server's operating system with millisecond precision.")]),t._v(" "),s("p",[t._v("(Notice that MySQL internal fractional arithmetic, like * 0.001, is always handled as IEEE754 double precision floating point, so it's unlikely you'll lose precision before the Sun becomes a white dwarf star.)")])])}),[],!1,null,null,null);e.default=n.exports}}]);