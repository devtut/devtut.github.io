(window.webpackJsonp=window.webpackJsonp||[]).push([[2633],{3041:function(t,a,s){"use strict";s.r(a);var n=s(31),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tcp-communication-with-powershell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-communication-with-powershell"}},[t._v("#")]),t._v(" TCP Communication with PowerShell")]),t._v(" "),s("h2",{attrs:{id:"tcp-listener"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-listener"}},[t._v("#")]),t._v(" TCP listener")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Receive-TCPMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Param")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Parameter(Mandatory=$true, Position=0)]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ValidateNotNullOrEmpty()]")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[int]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Port")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Process")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set up endpoint and start listening")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$endpoint")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new-object")]),t._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Net"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IPEndPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ipaddress]")]),t._v("::any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$listener")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new-object")]),t._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Net"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sockets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TcpListener "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$EndPoint")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$listener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n \n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Wait for an incoming connection ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$data")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$listener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AcceptTcpClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        \n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Stream setup")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$stream")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bytes")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Byte"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 1024\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Read data from stream and write it to host")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Read"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ne")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$EncodedText")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ASCIIEncoding\n                "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$data")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$EncodedText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write-Output")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$data")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         \n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Close TCP connection and stop listening")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$listener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Receive Message failed with: `n"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Start listening with the following and capture any message in the variable "),s("code",[t._v("$msg")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$msg")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Receive-TCPMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Port 29800\n\n")])])]),s("h2",{attrs:{id:"tcp-sender"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-sender"}},[t._v("#")]),t._v(" TCP Sender")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Send-TCPMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Param")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Parameter(Mandatory=$true, Position=0)]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ValidateNotNullOrEmpty()]")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[string]")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$EndPoint")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Parameter(Mandatory=$true, Position=1)]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[int]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Port")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Parameter(Mandatory=$true, Position=2)]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[string]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Message")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Process")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Setup connection ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$IP")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Net.Dns]")]),t._v("::GetHostAddresses"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$EndPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Address")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Net.IPAddress]")]),t._v("::Parse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$IP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Socket")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Net"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sockets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TCPClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Setup stream wrtier ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Stream")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Socket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Writer")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StreamWriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Write message to stream")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Writer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Writer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flush"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Close connection and stream")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Socket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Send a message with:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Send-TCPMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Port 29800 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Endpoint 192"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("message "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My first TCP message !"')]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("Note")]),t._v(": TCP messages may be blocked by your software firewall or any external facing firewalls you are trying to go through. Ensure that the TCP port you set in the above command is open and that you are have setup the listener on the same port.")])])}),[],!1,null,null,null);a.default=e.exports}}]);