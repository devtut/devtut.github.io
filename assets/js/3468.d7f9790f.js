(window.webpackJsonp=window.webpackJsonp||[]).push([[3468],{3876:function(t,s,e){"use strict";e.r(s);var a=e(31),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"file-handling"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-handling"}},[t._v("#")]),t._v(" File Handling")]),t._v(" "),e("h2",{attrs:{id:"write-data-to-a-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#write-data-to-a-file"}},[t._v("#")]),t._v(" Write Data to a File")]),t._v(" "),e("p",[e("strong",[t._v("To write the contents of a string to a file:")])]),t._v(" "),e("div",{staticClass:"language-vb extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vb"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" toWrite "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This will be written to the file."')]),t._v("\nSystem"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("File"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteAllText"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filename.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toWrite"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[e("code",[t._v("WriteAllText")]),t._v(" will open the specified file, write the data, and then close the file. If the target file exists, it is overwritten. If the target file does not exist, it is created.")]),t._v(" "),e("p",[e("strong",[t._v("To write the contents of an array to a file:")])]),t._v(" "),e("div",{staticClass:"language-vb extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vb"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" toWrite "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Is"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Test"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nSystem"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("File"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteAllLines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filename.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toWrite"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[e("code",[t._v("WriteAllLines")]),t._v(" will open the specified file, write each value of the array on a new line, and then close the file. If the target file exists, it is overwritten. If the target file does not exist, it is created.")]),t._v(" "),e("h2",{attrs:{id:"read-all-contents-of-a-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#read-all-contents-of-a-file"}},[t._v("#")]),t._v(" Read All Contents of a File")]),t._v(" "),e("p",[e("strong",[t._v("To read the contents to a file into a string variable:")])]),t._v(" "),e("div",{staticClass:"language-vb extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vb"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" fileContents "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" System"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("File"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReadAllText"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filename.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[e("code",[t._v("ReadAllText")]),t._v(" will open the specified file, read data to the end, then close the file.")]),t._v(" "),e("p",[e("strong",[t._v("To read a file, separating it into an array element for each line:")])]),t._v(" "),e("div",{staticClass:"language-vb extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vb"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" fileLines "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" System"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("File"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReadAllLines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filename.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[e("code",[t._v("ReadAllLines")]),t._v(" will open the specified file, read each line of the file into a new index in an array until the end of the file, then close the file.")]),t._v(" "),e("h2",{attrs:{id:"write-lines-individually-to-a-text-file-using-streamwriter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#write-lines-individually-to-a-text-file-using-streamwriter"}},[t._v("#")]),t._v(" Write Lines Individually to a Text File using StreamWriter")]),t._v(" "),e("div",{staticClass:"language-vb extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vb"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Using")]),t._v(" sw "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" System"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StreamWriter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path\\to\\file.txt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sw"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Using")]),t._v("\n\n")])])]),e("p",[t._v("The use of a "),e("code",[t._v("Using")]),t._v(" block is recommended good practice when using an object that Implements "),e("code",[t._v("IDisposable")])]),t._v(" "),e("h4",{attrs:{id:"syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("System.IO.File.ReadAllLines(path As String)")])]),t._v(" "),e("li",[e("code",[t._v("System.IO.File.ReadAllText(path As String)")])]),t._v(" "),e("li",[e("code",[t._v("System.IO.File.WriteAllText(path As String, contents As String)")])]),t._v(" "),e("li",[e("code",[t._v("System.IO.File.WriteAllLines(path As String, contents() As String)")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);