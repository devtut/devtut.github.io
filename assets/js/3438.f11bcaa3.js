(window.webpackJsonp=window.webpackJsonp||[]).push([[3438],{3846:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"scripting-dictionary-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scripting-dictionary-object"}},[t._v("#")]),t._v(" Scripting.Dictionary object")]),t._v(" "),a("h2",{attrs:{id:"properties-and-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties-and-methods"}},[t._v("#")]),t._v(" Properties and Methods")]),t._v(" "),a("p",[t._v("A "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/x4k5wbx4(v=vs.84).aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scripting Dictionary object"),a("OutboundLink")],1),t._v(" stores information in Key/Item pairs. The Keys must be unique and not an array but the associated Items can be repeated (their uniqueness is held by the companion Key) and can be of any type of variant or object.")]),t._v(" "),a("p",[t._v("A dictionary can be thought of as a two field in-memory database with a primary unique index on the first 'field' (the "),a("strong",[t._v("Key")]),t._v("). This unique index on the Keys property allows very fast 'lookups' to retrieve a Key's associated Item value.")]),t._v(" "),a("p",[a("strong",[t._v("Properties")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("sub",[t._v("name")])]),t._v(" "),a("th",[a("sub",[t._v("read/write")])]),t._v(" "),a("th",[a("sub",[t._v("type")])]),t._v(" "),a("th",[a("sub",[t._v("description")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("CompareMode")]),t._v(" "),a("td",[a("em",[t._v("read / write")])]),t._v(" "),a("td",[t._v("CompareMode constant")]),t._v(" "),a("td",[t._v("Setting the CompareMode can only be performed on an empty dictionary. Accepted values are 0 (vbBinaryCompare), 1 (vbTextCompare), 2 (vbDatabaseCompare).")])]),t._v(" "),a("tr",[a("td",[t._v("Count")]),t._v(" "),a("td",[a("em",[t._v("read only")])]),t._v(" "),a("td",[t._v("unsigned long integer")]),t._v(" "),a("td",[t._v("A one-based count of the key/item pairs in the scripting dictionary object.")])]),t._v(" "),a("tr",[a("td",[t._v("Key")]),t._v(" "),a("td",[a("em",[t._v("read / write")])]),t._v(" "),a("td",[t._v("non-array variant")]),t._v(" "),a("td",[t._v("Each individual unique key in the dictionary.")])]),t._v(" "),a("tr",[a("td",[t._v("Item("),a("strong",[t._v("Key")]),t._v(")")]),t._v(" "),a("td",[a("em",[t._v("read / write")])]),t._v(" "),a("td",[t._v("any variant")]),t._v(" "),a("td",[t._v("Default property.  Each individual item associated with a key in the dictionary. Note that attempting to retrieve an item with a key that does not exist in the dictionary will "),a("strong",[t._v("implicitly add")]),t._v(" the passed key.")])])])]),t._v(" "),a("p",[a("strong",[t._v("Methods")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("sub",[t._v("name")])]),t._v(" "),a("th",[a("sub",[t._v("description")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Add("),a("em",[t._v("Key")]),t._v(","),a("em",[t._v("Item")]),t._v(")")]),t._v(" "),a("td",[t._v("Adds a new Key and Item to the dictionary. The new key must not exist in the dictionary's current Keys collection but an item can be repeated among many unique keys.")])]),t._v(" "),a("tr",[a("td",[t._v("Exists("),a("em",[t._v("Key")]),t._v(")")]),t._v(" "),a("td",[t._v("Boolean test to determine if a Key already exists in the dictionary.")])]),t._v(" "),a("tr",[a("td",[t._v("Keys")]),t._v(" "),a("td",[t._v("Returns the array or collection of unique keys.")])]),t._v(" "),a("tr",[a("td",[t._v("Items")]),t._v(" "),a("td",[t._v("Returns the array or collection of associated items.")])]),t._v(" "),a("tr",[a("td",[t._v("Remove("),a("em",[t._v("Key")]),t._v(")")]),t._v(" "),a("td",[t._v("Removes an individual dictionary key and its associated item.")])]),t._v(" "),a("tr",[a("td",[t._v("RemoveAll")]),t._v(" "),a("td",[t._v("Clears all of a dictionary object's keys and items.")])])])]),t._v(" "),a("p",[a("strong",[t._v("Sample Code")])]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Populate, enumerate, locate and remove entries in a dictionary that was created")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'with late binding")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" iterateDictionaryLate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Object")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" dict "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CreateObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Scripting.Dictionary"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CompareMode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vbTextCompare          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'non-case sensitive compare model")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'populate the dictionary")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Red"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Balloon"')]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Green"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Balloon"')]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Blue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Balloon"')]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'iterate through the keys")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys\n        Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" - "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" k\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'locate the Item for Green")]),t._v("\n    Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Green"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'remove key/item pairs from the dictionary")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Remove "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'remove individual key/item pair by key")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RemoveAll          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'remove all remaining key/item pairs")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Populate, enumerate, locate and remove entries in a dictionary that was created")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'with early binding (see Remarks)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" iterateDictionaryEarly"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Long")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" dict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" Scripting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dictionary\n    \n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CompareMode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vbTextCompare          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'non-case sensitive compare model")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'populate the dictionary")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Red"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Balloon"')]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Green"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Balloon"')]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Blue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Balloon"')]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"White"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Balloon"')]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'iterate through the keys")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys\n        Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" - "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" k\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'iterate through the keys by the count")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("To")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" - "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" d\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'iterate through the keys by the boundaries of the keys collection")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LBound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("To")]),t._v(" UBound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" - "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" d\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'locate the Item for Green")]),t._v("\n    Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Green"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'locate the Item for the first key")]),t._v("\n    Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'locate the Item for the last key")]),t._v("\n    Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UBound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'remove key/item pairs from the dictionary")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Remove "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),t._v("                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'remove individual key/item pair by key")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Remove dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'remove first key/item by index position")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Remove dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UBound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'remove last key/item by index position")]),t._v("\n    dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RemoveAll                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'remove all remaining key/item pairs")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"getting-unique-values-with-scripting-dictionary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-unique-values-with-scripting-dictionary"}},[t._v("#")]),t._v(" Getting unique values with Scripting.Dictionary")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("Dictionary")]),t._v(" allows getting a unique set of values very simply. Consider the following function:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" Unique"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Put all the values as keys into a dictionary")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" dict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" Scripting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dictionary\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" values\n        dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'The value doesn't matter here")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v("\n    Unique "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\n\n")])])]),a("p",[t._v("which you could then call like this:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" duplicates"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),t._v("\nduplicates "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" uniqueVals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),t._v("\nuniqueVals "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Unique"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("duplicates"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("and "),a("code",[t._v("uniqueVals")]),t._v(" would contain only "),a("code",[t._v("{1,2,3}")]),t._v(".")]),t._v(" "),a("p",[t._v("Note: This function can be used with any enumerable object.")]),t._v(" "),a("h2",{attrs:{id:"aggregating-data-with-scripting-dictionary-maximum-count"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aggregating-data-with-scripting-dictionary-maximum-count"}},[t._v("#")]),t._v(" Aggregating data with Scripting.Dictionary (Maximum, Count)")]),t._v(" "),a("p",[t._v("Dictionaries are great for managing information where multiple entries occur, but you are only concerned with a single value for each set of entries — the first or last value, the mininmum or maximum value, an average, a sum etc.")]),t._v(" "),a("p",[t._v("Consider a workbook that holds a log of user activity, with a script that inserts the username and edit date every time someone edits the workbook:")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[a("strong",[a("code",[t._v("Log")]),t._v(" worksheet")]),t._v(" "),a("table",[a("thead",[t._v("|A|B\n")]),a("tbody",[t._v("|bob|10/12/2016 9:00\n|alice|10/13/2016 13:00\n|bob|10/13/2016 13:30\n|alice|10/13/2016 14:00\n|alice|10/14/2016 13:00\n")])])]),t._v(" "),a("p",[t._v("Let's say you want to output the last edit time for each user, into a worksheet named "),a("code",[t._v("Summary")]),t._v(".")]),t._v(" "),a("p",[a("sup",[t._v("Notes:")]),a("br"),t._v(" "),a("sup",[t._v("1. The data is assumed to be in "),a("code",[t._v("ActiveWorkbook")]),t._v(".")]),a("br"),t._v(" "),a("sup",[t._v("2. We are using an array to pull the values from the worksheet; this is more efficient than iterating over each cell.")]),a("br"),t._v(" "),a("sup",[t._v("3. The "),a("code",[t._v("Dictionary")]),t._v(" is created using early binding.")])]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" LastEdit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" vLog "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vKey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" dict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" Scripting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dictionary\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" lastRow "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastColumn "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Long")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" anchor "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Range\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v(" ActiveWorkbook\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'Pull entries in "log" into a variant array')]),t._v("\n        lastRow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xlUp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Row\n        vlog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastRow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value2\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Loop through array")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" lastRow\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v("\n            username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" editDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Date")]),t._v("\n            editDate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'If the username is not yet in the dictionary:")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Exists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n                dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" editDate\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ElseIf")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" editDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n                dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" editDate\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Summary"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Loop through keys")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" vKey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Keys\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Add the key and value at the next available row")]),t._v("\n            Anchor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xlUp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            Anchor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vKey\n            Anchor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dict"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" vKey\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("p",[t._v("and the output will look like this:")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[a("strong",[a("code",[t._v("Summary")]),t._v(" worksheet")]),t._v(" "),a("table",[a("thead",[t._v("|A|B\n")]),a("tbody",[t._v("|bob|10/13/2016 13:30\n|alice|10/14/2016 13:00\n")])])]),t._v(" "),a("p",[t._v("If on the other hand you want to output how many times each user edited the workbook, the body of the "),a("code",[t._v("For")]),t._v(" loop should look like this:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n       'Loop through array\n        For i = 1 to lastRow\n            Dim username As String\n            username = vlog(i, 1)\n\n            'If the username is not yet in the dictionary:\n            If Not dict.Exists(username) Then\n                dict(username) = 1\n            Else\n                dict(username) = dict(username) + 1\n            End If\n        Next\n\n")])])]),a("p",[t._v("and the output will look like this:")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[a("strong",[a("code",[t._v("Summary")]),t._v(" worksheet")]),t._v(" "),a("table",[a("thead",[t._v("|A|B\n")]),a("tbody",[t._v("|bob|2\n|alice|3\n")])])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v("You must add Microsoft Scripting Runtime to the VBA project through the VBE's Tools → References command in order to implement early binding of the Scripting Dictionary object.\nThis library reference is carried with the project; it does not have to be re-referenced when the VBA project is distributed and run on another computer.")])])}),[],!1,null,null,null);s.default=e.exports}}]);