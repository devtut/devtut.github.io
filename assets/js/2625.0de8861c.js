(window.webpackJsonp=window.webpackJsonp||[]).push([[2625],{3033:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"security-and-cryptography"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#security-and-cryptography"}},[t._v("#")]),t._v(" Security and Cryptography")]),t._v(" "),s("h2",{attrs:{id:"calculating-a-string-s-hash-codes-via-net-cryptography"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#calculating-a-string-s-hash-codes-via-net-cryptography"}},[t._v("#")]),t._v(" Calculating a  string's hash codes via .Net Cryptography")]),t._v(" "),s("p",[t._v("Utilizing .Net "),s("code",[t._v("System.Security.Cryptography.HashAlgorithm")]),t._v(" namespace to generate the message hash code with the algorithms  supported.")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$example")]),t._v("="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Nobody expects the Spanish Inquisition."')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#calculate")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$hash")]),t._v("="),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Security.Cryptography.HashAlgorithm]")]),t._v("::Create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sha256"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ComputeHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Text.Encoding]")]),t._v("::UTF8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$example")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#convert to hex")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.BitConverter]")]),t._v("::ToString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$hash")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2E-DF-DA-DA-56-52-5B-12-90-FF-16-FB-17-44-CF-B4-82-DD-29-14-FF-BC-B6-49-79-0C-0E-58-9E-46-2D-3D")]),t._v("\n\n")])])]),s("p",[t._v("The  "),s("code",[t._v('"sha256"')]),t._v(" part was the hash algorithm used.")]),t._v(" "),s("p",[t._v("the "),s("code",[t._v("-")]),t._v(" can be removed or change to lower case")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#convert to lower case hex without '-' ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.BitConverter]")]),t._v("::ToString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$hash")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Replace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToLower"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2edfdada56525b1290ff16fb1744cfb482dd2914ffbcb649790c0e589e462d3d")]),t._v("\n\n")])])]),s("p",[t._v("If base64 format was preferred,  using base64 converter for output")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#convert to base64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Convert]")]),t._v("::ToBase64String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$hash")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Lt/a2lZSWxKQ/xb7F0TPtILdKRT/vLZJeQwOWJ5GLT0=")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);