(window.webpackJsonp=window.webpackJsonp||[]).push([[1092],{1500:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ranges-and-cells"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ranges-and-cells"}},[t._v("#")]),t._v(" Ranges and Cells")]),t._v(" "),a("h2",{attrs:{id:"ways-to-refer-to-a-single-cell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ways-to-refer-to-a-single-cell"}},[t._v("#")]),t._v(" Ways to refer to a single cell")]),t._v(" "),a("p",[t._v("The simplest way to refer to a single cell on the current Excel worksheet is simply to enclose the A1 form of its reference in square brackets:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[t._v("[a3] "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),t._v("\n\n")])])]),a("p",[t._v("Note that square brackets are just convenient "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Syntactic_sugar",target:"_blank",rel:"noopener noreferrer"}},[t._v("syntactic sugar"),a("OutboundLink")],1),t._v(" for the "),a("code",[t._v("Evaluate")]),t._v(" method of the "),a("code",[t._v("Application")]),t._v(" object, so technically, this is identical to the following code:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[t._v("Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Evaluate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),t._v("\n\n")])])]),a("p",[t._v("You could also call the "),a("code",[t._v("Cells")]),t._v(" method which takes a row and a column and returns a cell reference.")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Formula "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=A1+A2"')]),t._v("\n\n")])])]),a("p",[t._v("Remember that whenever you pass a row and a column to Excel from VBA, the row is always first, followed by the column, which is confusing because it is the opposite of the common "),a("code",[t._v("A1")]),t._v(" notation where the column appears first.")]),t._v(" "),a("p",[t._v("In both of these examples, we did not specify a worksheet, so Excel will use the active sheet (the sheet that is in front in the user interface). You can specify the active sheet explicitly:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[t._v("ActiveSheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Formula "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=SUM(A1:A2)"')]),t._v("\n\n")])])]),a("p",[t._v("Or you can provide the name of a particular sheet:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[t._v("Sheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sheet2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Formula "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=SUM(A1:A2)"')]),t._v("\n\n")])])]),a("p",[t._v("There are a wide variety of methods that can be used to get from one range to another. For example, the "),a("code",[t._v("Rows")]),t._v(" method can be used to get to the individual rows of any range, and the "),a("code",[t._v("Cells")]),t._v(" method can be used to get to individual cells of a row or column, so the following code refers to cell C1:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[t._v("ActiveSheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Formula "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi!"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"creating-a-range"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-range"}},[t._v("#")]),t._v(" Creating a Range")]),t._v(" "),a("p",[t._v("A "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/office/ff838238.aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Range"),a("OutboundLink")],1),t._v(" cannot be created or populated the same way a string would:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" RangeTest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Range "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Specific Type of Object, with members like Address, WrapText, AutoFill, etc.")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' This is how we fill a String:")]),t._v("\n    s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' But we cannot do this for a Range:")]),t._v("\n    r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'//Run. Err.:  91 Object variable or With block variable not set//")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' We have to use the Object approach, using keyword Set:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("p",[t._v("It is considered best practice to "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/excel-vba/1107/vba-best-practices/11274/always-define-and-set-references-to-all-workbooks-and-sheets#t=201607261348479429911",target:"_blank",rel:"noopener noreferrer"}},[t._v("qualify your references"),a("OutboundLink")],1),t._v(", so from now on we will use the same approach here."),a("br"),t._v("\nMore about "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/office/gg251791.aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Creating Object Variables (e.g. Range) on MSDN"),a("OutboundLink")],1),t._v(" . More about "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/office/gg251642.aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Set Statement on MSDN"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("There are different ways to create the same Range:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" SetRangeVariable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" ws "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Worksheet\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Range\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" ws "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ThisWorkbook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Worksheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' The first Worksheet in Workbook with this code in it")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' These are all equivalent:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' The cell in row number 2, column number 1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("[A2] "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Shorthand notation of Range.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NamedRangeInA2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'If the cell A2 is named NamedRangeInA2. Note, that this is Sheet independent.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' The cell that is 1 row and 0 columns away from A1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\' Similar to Offset. You can "go outside" the original Range.')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1:A5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Second cell in bigger Range.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1:A5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Second cell in bigger Range.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1:A5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Second cell in bigger Range.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("p",[t._v('Note in the example that Cells(2, 1) is equivalent to Range("A2"). This is because Cells returns a Range object.'),a("br"),t._v("\nSome sources: "),a("a",{attrs:{href:"http://www.cpearson.com/Excel/cells.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chip Pearson-Cells Within Ranges"),a("OutboundLink")],1),t._v("; "),a("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/office/ff838238.aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("MSDN-Range Object"),a("OutboundLink")],1),t._v("; "),a("a",{attrs:{href:"http://spreadsheetpage.com/index.php/tip/referring_to_ranges_in_your_vba_code/",target:"_blank",rel:"noopener noreferrer"}},[t._v("John Walkenback-Referring To Ranges In Your VBA Code"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v('Also note that in any instance where a number is used in the declaration of the range, and the number itself is outside of quotation marks, such as Range("A" & 2), you can swap that number for a variable that contains an integer/long. For example:')]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" RangeIteration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" wb "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Workbook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ws "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Worksheet\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Range\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" wb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ThisWorkbook\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" ws "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Worksheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("To")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\' When i = 1, the result will be Range("A1")')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\' When i = 2, the result will be Range("A2")')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' etc.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Proof:")]),t._v("\n        Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Address\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" i\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("p",[t._v("If you are using double loops, Cells is better:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" RangeIteration2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" wb "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Workbook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ws "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Worksheet\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Range\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" wb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ThisWorkbook\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" ws "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Worksheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("To")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("To")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\' When i = 1 and j = 1, the result will be Range("A1")')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\' When i = 2 and j = 1, the result will be Range("A2")')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\' When i = 1 and j = 2, the result will be Range("B1")')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' etc.")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Proof:")]),t._v("\n            Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Address\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" j\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" i\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"offset-property"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offset-property"}},[t._v("#")]),t._v(" Offset Property")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Offset(Rows, Columns)")]),t._v(" - The operator used to statically reference another point from the current cell. Often used in loops. It should be understood that positive numbers in the rows section moves right, wheres as negatives move left. With the columns section positives move down and negatives move up.")])]),t._v(" "),a("p",[t._v("i.e")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ThisWorkbook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sheet1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),t._v("\n    ThisWorkbook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sheet1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"New Value"')]),t._v("\n    ActiveCell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ActiveCell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value\n    ActiveCell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vbNullString\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("p",[t._v("This code selects B2, puts a new string there, then moves that string back to A1 afterwards clearing out B2.")]),t._v(" "),a("h2",{attrs:{id:"saving-a-reference-to-a-cell-in-a-variable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#saving-a-reference-to-a-cell-in-a-variable"}},[t._v("#")]),t._v(" Saving a reference to a cell in a variable")]),t._v(" "),a("p",[t._v("To save a reference to a cell in a variable, you must use the "),a("code",[t._v("Set")]),t._v(" syntax, for example:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" R "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Range\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" R "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ActiveSheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cells"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("later...")])]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[t._v("R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Font"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RGB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("Why is the "),a("code",[t._v("Set")]),t._v(" keyword required? "),a("code",[t._v("Set")]),t._v(" tells Visual Basic that the value on the right hand side of the "),a("code",[t._v("=")]),t._v(" is meant to be an object.")]),t._v(" "),a("h2",{attrs:{id:"how-to-transpose-ranges-horizontal-to-vertical-vice-versa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-transpose-ranges-horizontal-to-vertical-vice-versa"}},[t._v("#")]),t._v(" How to Transpose Ranges (Horizontal to Vertical & vice versa)")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" TransposeRangeValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" TmpArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Variant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FromRange "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ToRange "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Range\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" FromRange "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sheet1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a1:a12"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'Worksheets(1).Range("a1:p1")')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" ToRange "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ThisWorkbook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sheets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sheet1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'ThisWorkbook.Sheets("Sheet1").Range("a1")')]),t._v("\n\n    TmpArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Transpose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FromRange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    FromRange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Clear\n    ToRange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Resize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FromRange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FromRange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TmpArray\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),a("p",[t._v("Note: Copy/PasteSpecial also has a Paste Transpose option which updates the transposed cells' formulas as well.")]),t._v(" "),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Set")]),t._v(" - The operator used to set a reference to an object, such as a Range")]),t._v(" "),a("li",[a("strong",[t._v("For Each")]),t._v(" - The operator used to loop through every item in a collection")])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v("Note that the variable names "),a("code",[t._v("r")]),t._v(", "),a("code",[t._v("cell")]),t._v(" and others can be named however you like but should be named appropriately so the code is easier to understand for you and others.")])])}),[],!1,null,null,null);s.default=n.exports}}]);