(window.webpackJsonp=window.webpackJsonp||[]).push([[2311],{2719:function(t,a,s){"use strict";s.r(a);var n=s(31),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nsstring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nsstring"}},[t._v("#")]),t._v(" NSString")]),t._v(" "),s("p",[t._v("The "),s("strong",[t._v("NSString")]),t._v(" class is a part of Foundation framework to work with strings (series of characters). It also includes methods for comparing, searching and modifying strings.")]),t._v(" "),s("h2",{attrs:{id:"encoding-and-decoding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#encoding-and-decoding"}},[t._v("#")]),t._v(" Encoding and Decoding")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// decode")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("utf8Data\n                                         encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSUTF8StringEncoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// encode")]),t._v("\nNSData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("utf8Data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string dataUsingEncoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSUTF8StringEncoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("Some supported encodings are:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("NSASCIIStringEncoding")])]),t._v(" "),s("li",[s("code",[t._v("NSUTF8StringEncoding")])]),t._v(" "),s("li",[s("code",[t._v("NSUTF16StringEncoding")]),t._v(" (== "),s("code",[t._v("NSUnicodeStringEncoding")]),t._v(")")])]),t._v(" "),s("p",[t._v("Note that "),s("code",[t._v("utf8Data.bytes")]),t._v(" does not include a terminating null character, which is necessary for C strings. If you need a C string, use "),s("code",[t._v("UTF8String")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("string UTF8String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"string-length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-length"}},[t._v("#")]),t._v(" String Length")]),t._v(" "),s("p",[t._v("NSString has a "),s("code",[t._v("length")]),t._v(" property to get the number of characters.")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"example"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSUInteger length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// length equals 7")]),t._v("\n\n")])])]),s("p",[t._v("As in the "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/objective-c/832/nsstring/3828/splitting",target:"_blank",rel:"noopener noreferrer"}},[t._v("Splitting Example"),s("OutboundLink")],1),t._v(", keep in mind that "),s("code",[t._v("NSString")]),t._v(" uses "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/UTF-16",target:"_blank",rel:"noopener noreferrer"}},[t._v("UTF-16"),s("OutboundLink")],1),t._v(" to represent characters. The length is actually just the number of UTF-16 code units. This can differ from what the user perceives as characters.")]),t._v(" "),s("p",[t._v("Here are some cases that might be surprising:")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"√©"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// LATIN SMALL LETTER E WITH ACUTE (U+00E9)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"√©"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// LATIN SMALL LETTER E (U+0065) + COMBINING ACUTE ACCENT (U+0301)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"‚ù§Ô∏è"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HEAVY BLACK HEART (U+2764) + VARIATION SELECTOR-16 (U+FE0F)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"üáÆüáπ"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// REGIONAL INDICATOR SYMBOL LETTER I (U+1F1EE) + REGIONAL INDICATOR SYMBOL LETTER T (U+1F1F9)")]),t._v("\n\n")])])]),s("p",[t._v('In order to get the number of user-perceived characters, known technically as "'),s("a",{attrs:{href:"https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Strings/Articles/stringsClusters.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("grapheme clusters"),s("OutboundLink")],1),t._v('", you must iterate over the string with '),s("a",{attrs:{href:"https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/#//apple_ref/occ/instm/NSString/enumerateSubstringsInRange:options:usingBlock:",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("-enumerateSubstringsInRange:options:usingBlock:")]),s("OutboundLink")],1),t._v(" and keep a count. This is demonstrated in "),s("a",{attrs:{href:"http://stackoverflow.com/a/33539320/603977",target:"_blank",rel:"noopener noreferrer"}},[t._v("an answer by Nikolai Ruhe on Stack Overflow"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"comparing-strings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comparing-strings"}},[t._v("#")]),t._v(" Comparing Strings")]),t._v(" "),s("p",[t._v("Strings are compared for equality using "),s("code",[t._v("isEqualToString:")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("==")]),t._v(" operator just tests for object identity and does not compare the logical values of objects, so it can't be used:")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stringOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"example"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stringTwo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("stringOne mutableCopy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nBOOL objectsAreIdentical "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stringOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" stringTwo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NO")]),t._v("\nBOOL stringsAreEqual "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("stringOne isEqualToString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("stringTwo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// YES")]),t._v("\n\n")])])]),s("p",[t._v("The expression "),s("code",[t._v("(stringOne == stringTwo)")]),t._v(" tests to see if the memory addresses of the two strings are the same, which is usually not what we want.")]),t._v(" "),s("p",[t._v("If the string variables can be "),s("code",[t._v("nil")]),t._v(" you have to take care about this case as well:")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("BOOL equalValues "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stringOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" stringTwo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("stringOne isEqualToString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("stringTwo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("This condition returns "),s("code",[t._v("YES")]),t._v(" when strings have equal values or both are "),s("code",[t._v("nil")]),t._v(".")]),t._v(" "),s("p",[t._v("To order two strings alphabetically, use "),s("code",[t._v("compare")]),t._v(":.")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSComparisonResult result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("firstString compare"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("secondString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("NSComparisonResult")]),t._v(" can be:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("NSOrderedAscending")]),t._v(": The first string comes before the second string.")]),t._v(" "),s("li",[s("code",[t._v("NSOrderedSame")]),t._v(": The strings are equal.")]),t._v(" "),s("li",[s("code",[t._v("NSOrderedDescending")]),t._v(": The second string comes before the first string.")])]),t._v(" "),s("p",[t._v("To compare two strings equality, use "),s("code",[t._v("isEqualToString:")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("BOOL result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("firstString isEqualToString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("secondString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("To compare with the empty string ("),s("code",[t._v('@""')]),t._v("), better use "),s("code",[t._v("length")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("BOOL result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"splitting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splitting"}},[t._v("#")]),t._v(" Splitting")]),t._v(" "),s("p",[t._v("You can split a string into an array of parts, divided by "),s("strong",[t._v("a separator character")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" yourString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Stack,Exchange,Network"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" yourWords "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yourString componentsSeparatedByString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Output: @[@"Stack", @"Exchange", @"Network"]')]),t._v("\n\n")])])]),s("p",[t._v("If you need to split on a set of "),s("strong",[t._v("several different delimiters")]),t._v(", use "),s("code",[t._v("-[NSString componentsSeparatedByCharactersInSet:]")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" yourString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Stack Overflow+Documentation/Objective-C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" yourWords "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yourString componentsSeparatedByCharactersInSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSCharacterSet characterSetWithCharactersInString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"+/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Output: @[@"Stack Overflow", @"Documentation", @"Objective-C"]`')]),t._v("\n\n")])])]),s("p",[t._v("If you need to break a string into its "),s("strong",[t._v("individual characters")]),t._v(", loop\nover the length of the string and convert each character into a new string.")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSMutableArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" characters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMutableArray alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithCapacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yourString length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myString length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("characters addObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"%C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                                      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yourString characterAtIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("As in the "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/objective-c/832/nsstring/2882/string-length",target:"_blank",rel:"noopener noreferrer"}},[t._v("Length Example"),s("OutboundLink")],1),t._v(', keep in mind that a "character" here is a UTF-16 code unit, not necessarily what the user sees as a character. If you use this loop with '),s("code",[t._v('@"üáÆüáπ"')]),t._v(", you'll see that it's split into four pieces.")]),t._v(" "),s("p",[t._v("In order to get a list of the user-perceived characters, use "),s("a",{attrs:{href:"https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/#//apple_ref/occ/instm/NSString/enumerateSubstringsInRange:options:usingBlock:",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("-enumerateSubstringsInRange:options:usingBlock:")]),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSMutableArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" characters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMutableArray array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yourString enumerateSubstringsInRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yourString length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                               options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSStringEnumerationByComposedCharacterSequences\n                            usingBlock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" substring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSRange r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSRange s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BOOL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("characters addObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("substring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("This preserves "),s("a",{attrs:{href:"https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Strings/Articles/stringsClusters.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("grapheme clusters"),s("OutboundLink")],1),t._v(" like the Italian flag as a single substring.")]),t._v(" "),s("h2",{attrs:{id:"creation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creation"}},[t._v("#")]),t._v(" Creation")]),t._v(" "),s("p",[s("strong",[t._v("Simple:")])]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("newString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"My String"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("From multiple strings:")])]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stringOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stringTwo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("newString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"My message: %@ %@"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                     stringOne"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stringTwo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[s("strong",[s("strong",[t._v("Using Mutable String")])])]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stringOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stringTwo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSMutableString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mutableString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMutableString new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mutableString appendString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("stringOne"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mutableString appendString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("stringTwo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("From NSData:")])]),t._v(" "),s("p",[t._v("When initializing from "),s("code",[t._v("NSData")]),t._v(", an explicit encoding must be provided as "),s("code",[t._v("NSString")]),t._v(" is not able to guess how characters are represented in the raw data stream. The most common encoding nowadays is UTF-8, which is even a requirement for certain data like JSON.")]),t._v(" "),s("p",[t._v("Avoid using "),s("code",[t._v("+[NSString stringWithUTF8String:]")]),t._v(" since it expects an explicitly NULL-terminated C-string, which "),s("code",[t._v("-[NSData bytes]")]),t._v(" does "),s("strong",[t._v("not")]),t._v(" provide.")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("newString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("myData encoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSUTF8StringEncoding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("From NSArray:")])]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("myArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSArray arrayWithObjects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Apple"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Banana"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Strawberry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Kiwi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("newString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myArray componentsJoinedByString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"searching-for-a-substring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#searching-for-a-substring"}},[t._v("#")]),t._v(" Searching for a Substring")]),t._v(" "),s("p",[t._v("To search if a String contains a substring, do the following:")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("myString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"This is for checking substrings"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("subString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"checking"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\nBOOL doesContainSubstring "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myString containsString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("subString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// YES")]),t._v("\n\n")])])]),s("p",[t._v("If targeting iOS 7 or OS X 10.9 (or earlier):")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("BOOL doesContainSubstring "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myString rangeOfString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("subString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" NSNotFound"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// YES")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"changing-case"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changing-case"}},[t._v("#")]),t._v(" Changing Case")]),t._v(" "),s("p",[t._v("To convert a String to uppercase, use "),s("code",[t._v("uppercaseString")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("myString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Emphasize this"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"%@"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myString uppercaseString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// @"EMPHASIZE THIS"')]),t._v("\n\n")])])]),s("p",[t._v("To convert a String to lowercase, use "),s("code",[t._v("lowercaseString")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("myString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"NORMALIZE this"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"%@"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myString lowercaseString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// @"normalize this"')]),t._v("\n\n")])])]),s("p",[t._v("To capitalize the first letter character of each word in a string, use "),s("code",[t._v("capitalizedString")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("myString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"firstname lastname"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"%@"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myString capitalizedString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// @"Firstname Lastname"')]),t._v("\n\n")])])]),s("h2",{attrs:{id:"joining-an-array-of-strings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#joining-an-array-of-strings"}},[t._v("#")]),t._v(" Joining an Array of Strings")]),t._v(" "),s("p",[t._v("To combine an "),s("code",[t._v("NSArray")]),t._v(" of "),s("code",[t._v("NSString")]),t._v(" into a new "),s("code",[t._v("NSString")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yourWords "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Objective-C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"is"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"just"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"awesome"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sentence "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("yourWords componentsJoinedByString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Sentence is now: @"Objective-C is just awesome"')]),t._v("\n\n")])])]),s("h2",{attrs:{id:"removing-leading-and-trailing-whitespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#removing-leading-and-trailing-whitespace"}},[t._v("#")]),t._v(" Removing Leading and Trailing Whitespace")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("someString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"   Objective-C Language  \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("trimmedString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("someString stringByTrimmingCharactersInSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSCharacterSet whitespaceAndNewlineCharacterSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//Output will be - "Objective-C Language"')]),t._v("\n\n")])])]),s("p",[t._v("Method stringByTrimmingCharactersInSet returns a new string made by removing from both ends of the String characters contained in a given character set.")]),t._v(" "),s("p",[t._v("We can also just remove only whitespace or newline")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Removing only WhiteSpace")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("trimmedWhiteSpace "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("someString stringByTrimmingCharactersInSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSCharacterSet whitespaceCharacterSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//Output will be - "Objective-C Language  \\n"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Removing only NewLine")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("trimmedNewLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("someString stringByTrimmingCharactersInSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSCharacterSet newlineCharacterSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//Output will be - "   Objective-C Language  "')]),t._v("\n\n")])])]),s("h2",{attrs:{id:"formatting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#formatting"}},[t._v("#")]),t._v(" Formatting")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("NSString")]),t._v(" formatting supports all the format strings available on the "),s("code",[t._v("printf")]),t._v(" ANSI-C function. The only addition made by the language is the "),s("code",[t._v("%@")]),t._v(" symbol used for formatting all the Objective-C objects.")]),t._v(" "),s("p",[t._v("It is possible to format integers")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" myAge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("formattedAge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"I am %d years old"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" my_age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("Or any object subclassed from NSObject")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSDate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("now "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("formattedDate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"The time right now is: %@"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("For a complete list of Format Specifiers, please see: "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/objective-c/9048/format-specifiers#t=201702111440440714311&a=syntax",target:"_blank",rel:"noopener noreferrer"}},[t._v("Objective-C, Format Specifiers, Syntax"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"working-with-c-strings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#working-with-c-strings"}},[t._v("#")]),t._v(" Working with C Strings")]),t._v(" "),s("p",[t._v("To convert "),s("code",[t._v("NSString")]),t._v(" to "),s("code",[t._v("const char")]),t._v(" use "),s("a",{attrs:{href:"http://developer.apple.com/mac/library/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/Reference/NSString.html#//apple_ref/occ/instm/NSString/UTF8String",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("-[NSString UTF8String]")]),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("myNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Some string"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myNSString UTF8String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("You could also use "),s("a",{attrs:{href:"http://developer.apple.com/mac/library/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/Reference/NSString.html#//apple_ref/occ/instm/NSString/cStringUsingEncoding:",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("-[NSString cStringUsingEncoding:]")]),s("OutboundLink")],1),t._v(" if your string is encoded with something other than UTF-8.")]),t._v(" "),s("p",[t._v("For the reverse path use "),s("a",{attrs:{href:"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/index.html#//apple_ref/occ/clm/NSString/stringWithUTF8String:",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("-[NSString stringWithUTF8String:]")]),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" cString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Some string"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("myNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithUTF8String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("cString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyNSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Equivalent to the above.")]),t._v("\n\n")])])]),s("p",[t._v("Once you have the "),s("code",[t._v("const char *")]),t._v(", you can work with it similarly to an array of "),s("code",[t._v("chars")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%c\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("If you want to modify the string, make a copy:")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cpy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strncpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cpy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do stuff with cpy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cpy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"reversing-a-nsstring-objective-c"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reversing-a-nsstring-objective-c"}},[t._v("#")]),t._v(" Reversing a  NSString Objective-C")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// myString is "hi"')]),t._v("\nNSMutableString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("reversedString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMutableString string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSInteger charIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myString length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("charIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    charIndex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    NSRange subStrRange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSMakeRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("charIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("reversedString appendString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myString substringWithRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("subStrRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"%@"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reversedString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// outputs "ih"')]),t._v("\n\n")])])]),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),s("p",[t._v("For nesting various types of objects and data-types into NSStrings refer to: "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/objective-c/9048/format-specifiers#t=201702111426046577396",target:"_blank",rel:"noopener noreferrer"}},[t._v("Objective-C, Format Specifiers"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);