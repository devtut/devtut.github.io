(window.webpackJsonp=window.webpackJsonp||[]).push([[3408],{3816:function(t,e,s){"use strict";s.r(e);var n=s(31),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"comments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comments"}},[t._v("#")]),t._v(" Comments")]),t._v(" "),s("h2",{attrs:{id:"apostrophe-comments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apostrophe-comments"}},[t._v("#")]),t._v(" Apostrophe Comments")]),t._v(" "),s("p",[t._v("A comment is marked by an apostrophe ("),s("code",[t._v("'")]),t._v("), and ignored when the code executes. Comments help explain your code to future readers, including yourself.")]),t._v(" "),s("p",[t._v("Since all lines starting with a comment are ignored, they can also be used to prevent code from executing (while you debug or refactor). Placing an apostrophe "),s("code",[t._v("'")]),t._v(" before your code turns it into a comment.  (This is called "),s("strong",[t._v("commenting out")]),t._v(" the line.)")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" InlineDocumentation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Comments start with an \"'\"")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'They can be place before a line of code, which prevents the line from executing")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'Debug.Print "Hello World"')]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'They can also be placed after a statement")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'The statement still executes, until the compiler arrives at the comment")]),t._v("\n  Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Prints a welcome message")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Comments can have 0 indention....")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'... or as much as needed")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'''' Comments can contain multiple apostrophes ''''")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Comments can span lines (using line continuations) _\n    but this can make for hard to read code")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'If you need to have mult-line comments, it is often easier to ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'use an apostrophe on each line")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'The continued statement syntax (:) is treated as part of the comment, so ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'it is not possible to place an executable statement after a comment")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'This won't run : Debug.Print \"Hello World\"")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Comments can appear inside or outside a procedure")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"rem-comments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rem-comments"}},[t._v("#")]),t._v(" REM Comments")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" RemComments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Rem")]),t._v(' Comments start with "Rem" (VBA will change any alternate casing to "Rem")')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Rem")]),t._v(" is an abbreviation of Remark, and similar to DOS syntax")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Rem")]),t._v(" Is a legacy approach to adding comments, and apostrophes should be preferred")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Rem")]),t._v(" Comments CANNOT appear after a statement, use the apostrophe syntax instead")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Rem")]),t._v(" Unless they are preceded by the instruction separator token")]),t._v("\n  Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Rem")]),t._v(" prints a welcome message")]),t._v("\n  Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Prints a welcome message")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\'Rem cannot be immediately followed by the following characters "!,@,#,$,%,&"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Whereas the apostrophe syntax can be followed by any printable character.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Rem")]),t._v(" Comments can appear inside or outside a procedure")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),s("p",[s("strong",[t._v("Comment Blocks")])]),t._v(" "),s("p",[t._v("If you need to comment or uncomment several lines at once, you can use the IDE's "),s("strong",[t._v("Edit Toolbar")]),t._v(" buttons:")]),t._v(" "),s("blockquote"),t._v(" "),s("p",[s("strong",[t._v("Comment Block")]),t._v(" - Adds a single apostrophe to the start of all selected lines")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://i.stack.imgur.com/1fTtY.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://i.stack.imgur.com/1fTtY.png",alt:"Comment Block"}}),s("OutboundLink")],1)]),t._v(" "),s("blockquote"),t._v(" "),s("p",[s("strong",[t._v("Uncomment Block")]),t._v(" - Removes the first apostrophe from the start of all selected lines")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://i.stack.imgur.com/gbE0b.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://i.stack.imgur.com/gbE0b.png",alt:"Uncomment Block"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[s("strong",[t._v("Multi-line Comments")]),t._v("\nMany other languages support multi-line block comments, but VBA only allows single-line comments.")])])}),[],!1,null,null,null);e.default=a.exports}}]);