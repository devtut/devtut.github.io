(window.webpackJsonp=window.webpackJsonp||[]).push([[3342],{3752:function(t,a,e){"use strict";e.r(a);var s=e(31),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"memory-management"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#memory-management"}},[t._v("#")]),t._v(" Memory Management")]),t._v(" "),e("h2",{attrs:{id:"reference-cycles-and-weak-references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reference-cycles-and-weak-references"}},[t._v("#")]),t._v(" Reference Cycles and Weak References")]),t._v(" "),e("p",[t._v("A "),e("strong",[t._v("reference cycle")]),t._v(" (or "),e("strong",[t._v("retain cycle")]),t._v(") is so named because it indicates a "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cycle_(graph_theory)",target:"_blank",rel:"noopener noreferrer"}},[t._v("cycle"),e("OutboundLink")],1),t._v(" in the "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Object_graph",target:"_blank",rel:"noopener noreferrer"}},[t._v("object graph"),e("OutboundLink")],1),t._v(":")]),t._v(" "),e("p",[t._v("Each arrow indicates one object "),e("a",{attrs:{href:"https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/AutomaticReferenceCounting.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("retaining"),e("OutboundLink")],1),t._v(" another (a strong reference). Unless the cycle is broken, the memory for these objects will "),e("strong",[t._v("never be freed")]),t._v(".")]),t._v(" "),e("p",[t._v("A retain cycle is created when two instances of classes reference each other:")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\na"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a retains b")]),t._v("\nb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b retains a -- a reference cycle")]),t._v("\n\n")])])]),e("p",[t._v("Both instances they will live on until the program terminates. This is a retain cycle.")]),t._v(" "),e("h3",{attrs:{id:"weak-references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weak-references"}},[t._v("#")]),t._v(" Weak References")]),t._v(" "),e("p",[t._v("To avoid retain cycles, use the keyword "),e("code",[t._v("weak")]),t._v(" or "),e("code",[t._v("unowned")]),t._v(" when creating references to break retain cycles.")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Weak or unowned references will not increase the reference count of an instance. These references don't contribute to retain cycles. The weak reference "),e("strong",[t._v("becomes "),e("code",[t._v("nil")])]),t._v(" when the object it references is deallocated.")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a retains b")]),t._v("\nb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b holds a weak reference to a -- not a reference cycle")]),t._v("\n\n")])])]),e("p",[t._v("When working with closures, you can also use "),e("a",{attrs:{href:"http://stackoverflow.com/documentation/swift/262/closures/947/captures-strong-weak-references-and-retain-cycles#t=201607211834265333132",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("weak")]),t._v(" and "),e("code",[t._v("unowned")]),t._v(" in capture lists"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"manual-memory-management"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#manual-memory-management"}},[t._v("#")]),t._v(" Manual Memory Management")]),t._v(" "),e("p",[t._v("When interfacing with C APIs, one might want to back off Swift reference counter. Doing so is achieved with unmanaged objects.")]),t._v(" "),e("p",[t._v("If you need to supply a type-punned pointer to a C function, use "),e("code",[t._v("toOpaque")]),t._v(" method of the "),e("code",[t._v("Unmanaged")]),t._v(" structure to obtain a raw pointer, and "),e("code",[t._v("fromOpaque")]),t._v(" to recover the original instance:")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setupDisplayLink")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pointerToSelf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UnsafeRawPointer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Unmanaged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("passUnretained")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toOpaque")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CVDisplayLinkSetOutputCallback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("displayLink"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redraw"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pointerToSelf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("redraw")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pointerToSelf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UnsafeRawPointer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* args omitted */")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" recoveredSelf "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Unmanaged")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Self")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromOpaque")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pointerToSelf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeUnretainedValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  recoveredSelf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doRedraw")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[t._v("Note that, if using "),e("code",[t._v("passUnretained")]),t._v(" and counterparts, it's necessary to take all precautions as with "),e("code",[t._v("unowned")]),t._v(" references.")]),t._v(" "),e("p",[t._v("To interact with legacy Objective-C APIs, one might want to manually affect reference count of a certain object. For that "),e("code",[t._v("Unmanaged")]),t._v(" has respective methods "),e("code",[t._v("retain")]),t._v(" and "),e("code",[t._v("release")]),t._v(". Nonetheless, it is more desired to use "),e("code",[t._v("passRetained")]),t._v(" and "),e("code",[t._v("takeRetainedValue")]),t._v(", which perform retaining before returning the result:")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("preferredFilenameExtension")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" uti"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UTTypeCopyPreferredTagWithClass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uti"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("kUTTagClassFilenameExtension")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeRetainedValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[t._v("These solutions should always be the last resort, and language-native APIs sould always be preferred.")]),t._v(" "),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),e("p",[e("a",{staticClass:"remarks-subsection-anchor",attrs:{name:"remarks-when-to-use-the-weak-keyword:-0"}})]),e("h3",[t._v("When to use the weak-keyword:")]),t._v("\nThe "),e("code",[t._v("weak")]),t._v("-keyword should be used, if a referenced object may be deallocated during the lifetime of the object holding the reference."),e("p"),t._v(" "),e("p",[e("a",{staticClass:"remarks-subsection-anchor",attrs:{name:"remarks-when-to-use-the-unowned-keyword:-1"}})]),e("h3",[t._v("When to use the unowned-keyword:")]),t._v("\nThe "),e("code",[t._v("unowned")]),t._v("-keyword should be used, if a referenced object is not expected to be deallocated during the lifetime of the object holding the reference."),e("p"),t._v(" "),e("p",[e("a",{staticClass:"remarks-subsection-anchor",attrs:{name:"remarks-pitfalls-2"}})]),e("h3",[t._v("Pitfalls")]),t._v("\nA frequent error is to forget to create references to objects, which are required to live on after a function ends, like location managers, motion managers, etc."),e("p"),t._v(" "),e("p",[t._v("Example:")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CLLocationManagerDelegate")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" locationManager "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CLLocationManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        locationManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delegate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n        locationManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startLocationUpdates")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[t._v("This example will not work properly, as the location manager is deallocated after the initializer returns. The proper solution is to create a strong reference as an instance variable:")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CLLocationManagerDelegate")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" locationManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CLLocationManager")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        locationManager "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CLLocationManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        locationManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delegate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n        locationManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("startLocationUpdates")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);