(window.webpackJsonp=window.webpackJsonp||[]).push([[2881],{3289:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dplyr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dplyr"}},[t._v("#")]),t._v(" dplyr")]),t._v(" "),a("h2",{attrs:{id:"dplyr-s-single-table-verbs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dplyr-s-single-table-verbs"}},[t._v("#")]),t._v(" dplyr's single table verbs")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cran.r-project.org/web/packages/dplyr/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("dplyr"),a("OutboundLink")],1),t._v(" introduces a grammar of data manipulation in "),a("code",[t._v("R")]),t._v(". It provides a consistent interface to work with data no matter where it is stored: "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/r/438/data-frames#t=201607240327176696528",target:"_blank",rel:"noopener noreferrer"}},[t._v("data.frame"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/r/849/data-table#t=201607240321370924918",target:"_blank",rel:"noopener noreferrer"}},[t._v("data.table"),a("OutboundLink")],1),t._v(", or a "),a("code",[t._v("database")]),t._v(". The key pieces of "),a("code",[t._v("dplyr")]),t._v(" are written using "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/r/1404/rcpp#t=201607240328054860131",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rcpp"),a("OutboundLink")],1),t._v(", which makes it very fast for working with in-memory data.")]),t._v(" "),a("p",[a("code",[t._v("dplyr")]),t._v("'s philosophy is to have small functions that do one thing well. The five simple functions ("),a("code",[t._v("filter")]),t._v(", "),a("code",[t._v("arrange")]),t._v(", "),a("code",[t._v("select")]),t._v(", "),a("code",[t._v("mutate")]),t._v(", and "),a("code",[t._v("summarise")]),t._v(") can be used to reveal new ways to describe data. When combined with "),a("code",[t._v("group_by")]),t._v(", these functions can be used to calculate group wise summary statistics.")]),t._v(" "),a("h3",{attrs:{id:"syntax-commonalities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax-commonalities"}},[t._v("#")]),t._v(" Syntax commonalities")]),t._v(" "),a("p",[t._v("All these functions have a similar syntax:")]),t._v(" "),a("ul",[a("li",[t._v("The first argument to all these functions is always a data frame")]),t._v(" "),a("li",[t._v("Columns can be referred directly using bare variable names (i.e., without using "),a("code",[t._v("$")]),t._v(")")]),t._v(" "),a("li",[t._v("These functions do not modify the original data itself, i.e., they don't have side effects. Hence, the results should always be saved to an object.")])]),t._v(" "),a("p",[t._v("We will use the built-in "),a("a",{attrs:{href:"https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/mtcars.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mtcars"),a("OutboundLink")],1),t._v(" dataset to explore "),a("code",[t._v("dplyr")]),t._v("'s single table verbs. Before converting the type of "),a("code",[t._v("mtcars")]),t._v(" to "),a("code",[t._v("tbl_df")]),t._v(" (since it makes printing cleaner), we add the "),a("code",[t._v("rownames")]),t._v(" of the dataset as a column using "),a("code",[t._v("rownames_to_column")]),t._v(" function from the "),a("a",{attrs:{href:"https://cran.r-project.org/web/packages/tibble/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("tibble"),a("OutboundLink")],1),t._v(" package.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dplyr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This documentation was written using version 0.5.0")]),t._v("\n\nmtcars_tbl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" as_data_frame"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tibble"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("rownames_to_column"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cars"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# examine the structure of data")]),t._v("\nhead"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 6 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#               cars   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#              <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1         Mazda RX4  21.0     6   160   110  3.90 2.620 16.46     0     1     4     4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     Mazda RX4 Wag  21.0     6   160   110  3.90 2.875 17.02     0     1     4     4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3        Datsun 710  22.8     4   108    93  3.85 2.320 18.61     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4    Hornet 4 Drive  21.4     6   258   110  3.08 3.215 19.44     1     0     3     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5 Hornet Sportabout  18.7     8   360   175  3.15 3.440 17.02     0     0     3     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6           Valiant  18.1     6   225   105  2.76 3.460 20.22     1     0     3     1")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" filter")]),t._v(" "),a("p",[a("code",[t._v("filter")]),t._v(" helps subset rows that match certain criteria. The first argument is the name of the "),a("code",[t._v("data.frame")]),t._v(" and the second (and subsequent) arguments are the criteria that filter the data (these criteria should evaluate to either "),a("code",[t._v("TRUE")]),t._v(" or "),a("code",[t._v("FALSE")]),t._v(")")]),t._v(" "),a("p",[t._v("Subset all cars that have 4 "),a("strong",[t._v("cylinders")]),t._v(" - "),a("code",[t._v("cyl")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 11 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#             cars   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#            <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1      Datsun 710  22.8     4 108.0    93  3.85 2.320 18.61     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2       Merc 240D  24.4     4 146.7    62  3.69 3.190 20.00     1     0     4     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3        Merc 230  22.8     4 140.8    95  3.92 3.150 22.90     1     0     4     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4        Fiat 128  32.4     4  78.7    66  4.08 2.200 19.47     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5     Honda Civic  30.4     4  75.7    52  4.93 1.615 18.52     1     1     4     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 6 more rows")]),t._v("\n\n")])])]),a("p",[t._v("We can pass multiple criteria separated by a comma. To subset the cars which have either 4 or 6 "),a("strong",[t._v("cylinders")]),t._v(" - "),a("code",[t._v("cyl")]),t._v(" and have 5 "),a("strong",[t._v("gears")]),t._v(" - "),a("code",[t._v("gear")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gear "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 3 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#           cars   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#          <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1 Porsche 914-2  26.0     4 120.3    91  4.43 2.140  16.7     0     1     5     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2  Lotus Europa  30.4     4  95.1   113  3.77 1.513  16.9     1     1     5     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3  Ferrari Dino  19.7     6 145.0   175  3.62 2.770  15.5     0     1     5     6")]),t._v("\n\n")])])]),a("p",[a("code",[t._v("filter")]),t._v(" selects rows based on criteria, to select rows by position, use "),a("code",[t._v("slice")]),t._v(".\n"),a("code",[t._v("slice")]),t._v(" takes only 2 arguments: the first one is a "),a("code",[t._v("data.frame")]),t._v(" and the second is integer row values.")]),t._v(" "),a("p",[t._v("To select rows 6 through 9:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("slice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 4 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        cars   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1    Valiant  18.1     6 225.0   105  2.76  3.46 20.22     1     0     3     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2 Duster 360  14.3     8 360.0   245  3.21  3.57 15.84     0     0     3     4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3  Merc 240D  24.4     4 146.7    62  3.69  3.19 20.00     1     0     4     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4   Merc 230  22.8     4 140.8    95  3.92  3.15 22.90     1     0     4     2")]),t._v("\n\n")])])]),a("p",[t._v("Or:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("slice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n")])])]),a("p",[t._v("This results in the same output as "),a("code",[t._v("slice(mtcars_tbl, 6:9)")])]),t._v(" "),a("p",[a("code",[t._v("n()")]),t._v(" represents the number of observations in the current group")]),t._v(" "),a("h3",{attrs:{id:"arrange"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arrange"}},[t._v("#")]),t._v(" arrange")]),t._v(" "),a("p",[a("code",[t._v("arrange")]),t._v(" is used to sort the data by a specified variable(s). Just like the previous verb (and all other functions in "),a("code",[t._v("dplyr")]),t._v("), the first argument is a "),a("code",[t._v("data.frame")]),t._v(", and consequent arguments are used to sort the data. If more than one variable is passed, the data is first sorted by the first variable, and then by the second variable, and so on..")]),t._v(" "),a("p",[t._v("To order the data by "),a("strong",[t._v("horsepower")]),t._v(" - "),a("code",[t._v("hp")])]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("arrange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 32 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#             cars   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#            <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     Honda Civic  30.4     4  75.7    52  4.93 1.615 18.52     1     1     4     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2       Merc 240D  24.4     4 146.7    62  3.69 3.190 20.00     1     0     4     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3  Toyota Corolla  33.9     4  71.1    65  4.22 1.835 19.90     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4        Fiat 128  32.4     4  78.7    66  4.08 2.200 19.47     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5       Fiat X1-9  27.3     4  79.0    66  4.08 1.935 18.90     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6   Porsche 914-2  26.0     4 120.3    91  4.43 2.140 16.70     0     1     5     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 26 more rows")]),t._v("\n\n")])])]),a("p",[t._v("To "),a("code",[t._v("arrange")]),t._v(" the data by "),a("strong",[t._v("miles per gallon")]),t._v(" - "),a("code",[t._v("mpg")]),t._v(" in descending order, followed by "),a("strong",[t._v("number of cylinders")]),t._v(" - "),a("code",[t._v("cyl")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("arrange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 32 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#             cars   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#            <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1  Toyota Corolla  33.9     4  71.1    65  4.22 1.835 19.90     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2        Fiat 128  32.4     4  78.7    66  4.08 2.200 19.47     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     Honda Civic  30.4     4  75.7    52  4.93 1.615 18.52     1     1     4     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4    Lotus Europa  30.4     4  95.1   113  3.77 1.513 16.90     1     1     5     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5       Fiat X1-9  27.3     4  79.0    66  4.08 1.935 18.90     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6   Porsche 914-2  26.0     4 120.3    91  4.43 2.140 16.70     0     1     5     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 26 more rows")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[t._v("#")]),t._v(" select")]),t._v(" "),a("p",[a("code",[t._v("select")]),t._v(" is used to select only a subset of variables. To select only "),a("code",[t._v("mpg")]),t._v(", "),a("code",[t._v("disp")]),t._v(", "),a("code",[t._v("wt")]),t._v(", "),a("code",[t._v("qsec")]),t._v(", and "),a("code",[t._v("vs")]),t._v(" from "),a("code",[t._v("mtcars_tbl")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" disp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qsec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 32 x 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     mpg  disp    wt  qsec    vs")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1   21.0 160.0 2.620 16.46     0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2   21.0 160.0 2.875 17.02     0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3   22.8 108.0 2.320 18.61     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4   21.4 258.0 3.215 19.44     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5   18.7 360.0 3.440 17.02     0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6   18.1 225.0 3.460 20.22     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 26 more rows")]),t._v("\n\n")])])]),a("p",[a("code",[t._v(":")]),t._v(" notation can be used to select consecutive columns. To select columns from "),a("code",[t._v("cars")]),t._v(" through "),a("code",[t._v("disp")]),t._v(" and "),a("code",[t._v("vs")]),t._v(" through "),a("code",[t._v("carb")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cars"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("disp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("carb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 32 x 8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                cars   mpg   cyl  disp    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#               <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1          Mazda RX4  21.0     6 160.0     0     1     4     4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2      Mazda RX4 Wag  21.0     6 160.0     0     1     4     4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3         Datsun 710  22.8     4 108.0     1     1     4     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4     Hornet 4 Drive  21.4     6 258.0     1     0     3     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5  Hornet Sportabout  18.7     8 360.0     0     0     3     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6            Valiant  18.1     6 225.0     1     0     3     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 26 more rows")]),t._v("\n\n")])])]),a("p",[t._v("or "),a("code",[t._v("select(mtcars_tbl, -(hp:qsec))")])]),t._v(" "),a("p",[t._v("For datasets that contain several columns, it can be tedious to select several columns by name. To make life easier, there are a number of helper functions (such as "),a("code",[t._v("starts_with()")]),t._v(", "),a("code",[t._v("ends_with()")]),t._v(", "),a("code",[t._v("contains()")]),t._v(", "),a("code",[t._v("matches()")]),t._v(", "),a("code",[t._v("num_range()")]),t._v(", "),a("code",[t._v("one_of()")]),t._v(", and "),a("code",[t._v("everything()")]),t._v(") that can be used in "),a("code",[t._v("select")]),t._v(". To learn more about how to use them, see "),a("code",[t._v("?select_helpers")]),t._v(" and "),a("code",[t._v("?select")]),t._v(".")]),t._v(" "),a("p",[a("strong",[a("strong",[t._v("Note")])]),t._v(": While referring to columns directly in "),a("code",[t._v("select()")]),t._v(", we use bare column names, but quotes should be used while referring to columns in helper functions.")]),t._v(" "),a("p",[t._v("To rename columns while selecting:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cylinders "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" displacement "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" disp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 32 x 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   cylinders displacement")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       <dbl>        <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1          6        160.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2          6        160.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3          4        108.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4          6        258.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5          8        360.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6          6        225.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 26 more rows")]),t._v("\n\n")])])]),a("p",[t._v("As expected, this drops all other variables.")]),t._v(" "),a("p",[t._v("To rename columns without dropping other variables, use "),a("code",[t._v("rename")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("rename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cylinders "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" displacement "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" disp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 32 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                cars   mpg cylinders displacement    hp  drat    wt  qsec    vs")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#               <chr> <dbl>     <dbl>        <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1          Mazda RX4  21.0         6        160.0   110  3.90 2.620 16.46     0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2      Mazda RX4 Wag  21.0         6        160.0   110  3.90 2.875 17.02     0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3         Datsun 710  22.8         4        108.0    93  3.85 2.320 18.61     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4     Hornet 4 Drive  21.4         6        258.0   110  3.08 3.215 19.44     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5  Hornet Sportabout  18.7         8        360.0   175  3.15 3.440 17.02     0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6            Valiant  18.1         6        225.0   105  2.76 3.460 20.22     1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 26 more rows, and 3 more variables: am <dbl>, gear <dbl>, carb <dbl>")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"mutate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutate"}},[t._v("#")]),t._v(" mutate")]),t._v(" "),a("p",[a("code",[t._v("mutate")]),t._v(" can be used to add new columns to the data. Like all other functions in "),a("code",[t._v("dplyr")]),t._v(", mutate doesn't add the newly created columns to the original data. Columns are added at the end of the "),a("code",[t._v("data.frame")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mutate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weight_ton "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weight_pounds "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" weight_ton "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 32 x 14")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                cars   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb weight_ton weight_pounds")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#               <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>      <dbl>         <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1          Mazda RX4  21.0     6 160.0   110  3.90 2.620 16.46     0     1     4     4     1.3100          2620")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2      Mazda RX4 Wag  21.0     6 160.0   110  3.90 2.875 17.02     0     1     4     4     1.4375          2875")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3         Datsun 710  22.8     4 108.0    93  3.85 2.320 18.61     1     1     4     1     1.1600          2320")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4     Hornet 4 Drive  21.4     6 258.0   110  3.08 3.215 19.44     1     0     3     1     1.6075          3215")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5  Hornet Sportabout  18.7     8 360.0   175  3.15 3.440 17.02     0     0     3     2     1.7200          3440")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6            Valiant  18.1     6 225.0   105  2.76 3.460 20.22     1     0     3     1     1.7300          3460")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 26 more rows")]),t._v("\n\n")])])]),a("p",[a("strong",[a("strong",[t._v("Note")])]),t._v(" the use of "),a("code",[t._v("weight_ton")]),t._v(" while creating "),a("code",[t._v("weight_pounds")]),t._v(". Unlike base "),a("code",[t._v("R")]),t._v(", "),a("code",[t._v("mutate")]),t._v(" allows us to refer to columns that we just created to be used for a subsequent operation.")]),t._v(" "),a("p",[t._v("To retain only the newly created columns, use "),a("code",[t._v("transmute")]),t._v(" instead of "),a("code",[t._v("mutate")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("transmute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weight_ton "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weight_pounds "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" weight_ton "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 32 x 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   weight_ton weight_pounds")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        <dbl>         <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1      1.3100          2620")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2      1.4375          2875")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3      1.1600          2320")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4      1.6075          3215")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5      1.7200          3440")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6      1.7300          3460")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 26 more rows")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"summarise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summarise"}},[t._v("#")]),t._v(" summarise")]),t._v(" "),a("p",[a("code",[t._v("summarise")]),t._v(" calculates summary statistics of variables by collapsing multiple values to a single value. It can calculate multiple statistics and we can name these summary columns in the same statement.")]),t._v(" "),a("p",[t._v("To calculate the "),a("strong",[t._v("mean")]),t._v(" and "),a("strong",[t._v("standard deviation")]),t._v(" of "),a("code",[t._v("mpg")]),t._v(" and "),a("code",[t._v("disp")]),t._v(" of all cars in the dataset:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("summarise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean_mpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sd_mpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n          mean_disp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("disp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sd_disp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("disp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 1 x 4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  mean_mpg   sd_mpg mean_disp  sd_disp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     <dbl>    <dbl>     <dbl>    <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1 20.09062 6.026948  230.7219 123.9387")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"group-by"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-by"}},[t._v("#")]),t._v(" group_by")]),t._v(" "),a("p",[a("code",[t._v("group_by")]),t._v(" can be used to perform group wise operations on data. When the verbs defined above are applied on this grouped data, they are automatically applied to each group separately.")]),t._v(" "),a("p",[t._v("To find "),a("strong",[a("code",[t._v("mean")])]),t._v(" and "),a("strong",[a("code",[t._v("sd")])]),t._v(" of "),a("strong",[a("code",[t._v("mpg")])]),t._v(" by "),a("strong",[a("code",[t._v("cyl")])]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("by_cyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsummarise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by_cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean_mpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sd_mpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 3 x 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    cyl mean_mpg   sd_mpg")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <dbl>    <dbl>    <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     4 26.66364 4.509828")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     6 19.74286 1.453567")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     8 15.10000 2.560048")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"putting-it-all-togther"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#putting-it-all-togther"}},[t._v("#")]),t._v(" Putting it all togther")]),t._v(" "),a("p",[t._v("We select columns from "),a("code",[t._v("cars")]),t._v(" through "),a("code",[t._v("hp")]),t._v(" and "),a("code",[t._v("gear")]),t._v(", order the rows by "),a("code",[t._v("cyl")]),t._v(" and from highest to lowest "),a("code",[t._v("mpg")]),t._v(", group the data by "),a("code",[t._v("gear")]),t._v(", and finally subset only those cars have "),a("code",[t._v("mpg")]),t._v(" > 20 and "),a("code",[t._v("hp")]),t._v(" > 75")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("selected "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cars"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("hp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nordered "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" arrange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nby_cyl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ordered"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by_cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nSource"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" local data frame "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nGroups"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gear "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#            cars   mpg   cyl  disp    hp  gear")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#           <chr> <dbl> <dbl> <dbl> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1   Lotus Europa  30.4     4  95.1   113     5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2  Porsche 914-2  26.0     4 120.3    91     5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     Datsun 710  22.8     4 108.0    93     4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4       Merc 230  22.8     4 140.8    95     4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5  Toyota Corona  21.5     4 120.1    97     3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 4 more rows")]),t._v("\n\n")])])]),a("p",[t._v("Maybe we are not interested the intermediate results, we can achieve the same result as above by wrapping the function calls:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        arrange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                mtcars_tbl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cars"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("hp\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cyl   \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("This can be a little difficult to read. So, "),a("code",[t._v("dplyr")]),t._v(" operations can be chained using the "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/r/652/pipe-operators-and-others#t=20160724145924035602",target:"_blank",rel:"noopener noreferrer"}},[t._v("pipe"),a("OutboundLink")],1),t._v(" "),a("code",[t._v("%>%")]),t._v(" operator. The above code transalates to:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cars"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("hp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    arrange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n")])])]),a("h3",{attrs:{id:"summarise-multiple-columns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summarise-multiple-columns"}},[t._v("#")]),t._v(" summarise multiple columns")]),t._v(" "),a("p",[a("code",[t._v("dplyr")]),t._v(" provides "),a("code",[t._v("summarise_all()")]),t._v(" to apply functions to all (non-grouping) columns.")]),t._v(" "),a("p",[t._v("To find the number of distinct values for each column:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n_distinct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 1 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   cars   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1    32    25     3    27    22    22    29    30     2     2     3     6")]),t._v("\n\n")])])]),a("p",[t._v("To find the number of distinct values for each column by "),a("code",[t._v("cyl")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n_distinct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 3 x 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    cyl  cars   mpg  disp    hp  drat    wt  qsec    vs    am  gear  carb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <dbl> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     4    11     9    11    10    10    11    11     2     2     3     2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     6     7     6     5     4     5     6     7     2     2     3     3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     8    14    12    11     9    11    13    14     1     2     2     4")]),t._v("\n\n")])])]),a("p",[t._v("Note that we just had to add the "),a("code",[t._v("group_by")]),t._v(" statement and the rest of the code is the same. The output now consists of three rows - one for each unique value of "),a("code",[t._v("cyl")]),t._v(".")]),t._v(" "),a("p",[t._v("To "),a("code",[t._v("summarise")]),t._v(" specific multiple columns, use "),a("code",[t._v("summarise_at")])]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"disp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 3 x 4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    cyl      mpg     disp        hp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <dbl>    <dbl>    <dbl>     <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     4 26.66364 105.1364  82.63636")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     6 19.74286 183.3143 122.28571")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     8 15.10000 353.1000 209.21429")]),t._v("\n\n")])])]),a("p",[a("code",[t._v("helper")]),t._v(" functions ("),a("code",[t._v("?select_helpers")]),t._v(") can be used in place of column names to select specific columns")]),t._v(" "),a("p",[t._v("To apply multiple functions, either pass the function names as a character vector:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"disp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                 c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mean"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("or wrap them inside "),a("code",[t._v("funs")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"disp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                 funs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 3 x 7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    cyl mpg_mean disp_mean   hp_mean   mpg_sd  disp_sd    hp_sd")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <dbl>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>    <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     4 26.66364  105.1364  82.63636 4.509828 26.87159 20.93453")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     6 19.74286  183.3143 122.28571 1.453567 41.56246 24.26049")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     8 15.10000  353.1000 209.21429 2.560048 67.77132 50.97689")]),t._v("\n\n")])])]),a("p",[t._v("Column names are now be appended with function names to keep them distinct. In order to change this, pass the name to be appended with the function:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"disp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                 c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mean "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mean"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SD "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"disp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                 funs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mean "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SD "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 3 x 7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    cyl mpg_Mean disp_Mean   hp_Mean   mpg_SD  disp_SD    hp_SD")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <dbl>    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>    <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     4 26.66364  105.1364  82.63636 4.509828 26.87159 20.93453")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     6 19.74286  183.3143 122.28571 1.453567 41.56246 24.26049")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     8 15.10000  353.1000 209.21429 2.560048 67.77132 50.97689")]),t._v("\n\n")])])]),a("p",[t._v("To select columns conditionally, use "),a("code",[t._v("summarise_if")]),t._v(":")]),t._v(" "),a("p",[t._v("Take the "),a("code",[t._v("mean")]),t._v(" of all columns that are "),a("code",[t._v("numeric")]),t._v(" grouped by "),a("code",[t._v("cyl")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("is.numeric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 3 x 11")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    cyl      mpg     disp        hp     drat       wt     qsec")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <dbl>    <dbl>    <dbl>     <dbl>    <dbl>    <dbl>    <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     4 26.66364 105.1364  82.63636 4.070909 2.285727 19.13727")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     6 19.74286 183.3143 122.28571 3.585714 3.117143 17.97714")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     8 15.10000 353.1000 209.21429 3.229286 3.999214 16.77214")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... with 4 more variables: vs <dbl>, am <dbl>, gear <dbl>,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   carb <dbl>")]),t._v("\n\n")])])]),a("p",[t._v("However, some variables are discrete, and "),a("code",[t._v("mean")]),t._v(" of these variables doesn't make sense.")]),t._v(" "),a("p",[t._v("To take the "),a("code",[t._v("mean")]),t._v(" of only continuous variables by "),a("code",[t._v("cyl")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("mtcars_tbl "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v(" \n    summarise_if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" is.numeric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" n_distinct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A tibble: 3 x 7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    cyl      mpg     disp        hp     drat       wt     qsec")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <dbl>    <dbl>    <dbl>     <dbl>    <dbl>    <dbl>    <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     4 26.66364 105.1364  82.63636 4.070909 2.285727 19.13727")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     6 19.74286 183.3143 122.28571 3.585714 3.117143 17.97714")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     8 15.10000 353.1000 209.21429 3.229286 3.999214 16.77214")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"aggregating-with-pipe-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aggregating-with-pipe-operator"}},[t._v("#")]),t._v(" Aggregating with %>% (pipe) operator")]),t._v(" "),a("p",[t._v("The pipe (%>%) "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/r/652/pipe-operators-and-others",target:"_blank",rel:"noopener noreferrer"}},[t._v("operator"),a("OutboundLink")],1),t._v(" could be used in combination with "),a("code",[t._v("dplyr")]),t._v(" functions. In this example we use the "),a("code",[t._v("mtcars")]),t._v(" dataset (see "),a("code",[t._v('help("mtcars")')]),t._v(" for more information) to show how to sumarize a data frame, and to add variables to the data with the result of the application of a function.")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dplyr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlibrary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("magrittr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" mtcars\ndf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("cars "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" rownames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#just add the cars names to the df")]),t._v("\ndf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ncol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ncol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("df"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and place the names in the first column")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("1. Sumarize the data")])]),t._v(" "),a("p",[t._v("To compute statistics we use "),a("code",[t._v("summarize")]),t._v(" and the appropriate functions. In this case "),a("code",[t._v("n()")]),t._v(" is used for counting the number of cases.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\ndf %>%\n  summarize(count=n(),mean_mpg = mean(mpg, na.rm = TRUE),\n            min_weight = min(wt),max_weight = max(wt))\n\n#  count mean_mpg min_weight max_weight\n#1    32 20.09062      1.513      5.424\n\n")])])]),a("p",[a("strong",[t._v("2. Compute statistics by group")])]),t._v(" "),a("p",[t._v("It is possible to compute the statistics by groups of the data. In this case by "),a("strong",[t._v("Number of cylinders")]),t._v(" and "),a("strong",[t._v("Number of forward gears")])]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("df "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\n  group_by"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cyl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\n  summarize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mean_mpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" na.rm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            min_weight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("max_weight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Source: local data frame [8 x 6]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Groups: cyl [?]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    cyl  gear count mean_mpg min_weight max_weight")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  <dbl> <dbl> <int>    <dbl>      <dbl>      <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1     4     3     1   21.500      2.465      2.465")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2     4     4     8   26.925      1.615      3.190")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3     4     5     2   28.200      1.513      2.140")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4     6     3     2   19.750      3.215      3.460")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5     6     4     4   19.750      2.620      3.440")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6     6     5     1   19.700      2.770      2.770")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#7     8     3    12   15.050      3.435      5.424")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#8     8     5     2   15.400      3.170      3.570")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"subset-observation-rows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subset-observation-rows"}},[t._v("#")]),t._v(" Subset Observation (Rows)")]),t._v(" "),a("h3",{attrs:{id:"dplyr-filter-select-a-subset-of-rows-in-a-data-frame-that-meet-a-logical-criteria"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dplyr-filter-select-a-subset-of-rows-in-a-data-frame-that-meet-a-logical-criteria"}},[t._v("#")]),t._v(" "),a("code",[t._v("dplyr::filter()")]),t._v(" - Select a subset of rows in a data frame that meet a logical criteria:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("dplyr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iris"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Sepal.Length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       Sepal.Length Sepal.Width Petal.Length Petal.Width   Species")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    1           7.1         3.0          5.9         2.1 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    2           7.6         3.0          6.6         2.1 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    3           7.3         2.9          6.3         1.8 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    4           7.2         3.6          6.1         2.5 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    5           7.7         3.8          6.7         2.2 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    6           7.7         2.6          6.9         2.3 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    7           7.7         2.8          6.7         2.0 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    8           7.2         3.2          6.0         1.8 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    9           7.2         3.0          5.8         1.6 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    10          7.4         2.8          6.1         1.9 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    11          7.9         3.8          6.4         2.0 virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    12          7.7         3.0          6.1         2.3 virginica")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"dplyr-distinct-remove-duplicate-rows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dplyr-distinct-remove-duplicate-rows"}},[t._v("#")]),t._v(" "),a("code",[t._v("dplyr::distinct()")]),t._v(" - Remove duplicate rows:")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("distinct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iris"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Sepal.Length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" .keep_all "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       Sepal.Length Sepal.Width Petal.Length Petal.Width    Species")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    1           5.1         3.5          1.4         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    2           4.9         3.0          1.4         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    3           4.7         3.2          1.3         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    4           4.6         3.1          1.5         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    5           5.0         3.6          1.4         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    6           5.4         3.9          1.7         0.4     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    7           4.4         2.9          1.4         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    8           4.8         3.4          1.6         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    9           4.3         3.0          1.1         0.1     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   10          5.8         4.0          1.2         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   11          5.7         4.4          1.5         0.4     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   12          5.2         3.5          1.5         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   13          5.5         4.2          1.4         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   14          4.5         2.3          1.3         0.3     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   15          5.3         3.7          1.5         0.2     setosa")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   16          7.0         3.2          4.7         1.4 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   17          6.4         3.2          4.5         1.5 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   18          6.9         3.1          4.9         1.5 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   19          6.5         2.8          4.6         1.5 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   20          6.3         3.3          4.7         1.6 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   21          6.6         2.9          4.6         1.3 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   22          5.9         3.0          4.2         1.5 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   23          6.0         2.2          4.0         1.0 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   24          6.1         2.9          4.7         1.4 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   25          5.6         2.9          3.6         1.3 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   26          6.7         3.1          4.4         1.4 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   27          6.2         2.2          4.5         1.5 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   28          6.8         2.8          4.8         1.4 versicolor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   29          7.1         3.0          5.9         2.1  virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   30          7.6         3.0          6.6         2.1  virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   31          7.3         2.9          6.3         1.8  virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   32          7.2         3.6          6.1         2.5  virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   33          7.7         3.8          6.7         2.2  virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   34          7.4         2.8          6.1         1.9  virginica")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   35          7.9         3.8          6.4         2.0  virginica")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"examples-of-nse-and-string-variables-in-dpylr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-of-nse-and-string-variables-in-dpylr"}},[t._v("#")]),t._v(" Examples of NSE and string variables in dpylr")]),t._v(" "),a("p",[a("code",[t._v("dplyr")]),t._v(" uses Non-Standard Evaluation(NSE), which is why we normally can use the variable names without quotes. However, sometimes during the data pipeline, we need to get our variable names from other sources such as a Shiny selection box. In case of functions like "),a("code",[t._v("select")]),t._v(", we can just use "),a("code",[t._v("select_")]),t._v(" to use a string variable to select")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("variable1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sepal.Length"')]),t._v("\nvariable2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sepal.Width"')]),t._v("\niris "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\nselect_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" variable2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\nhead"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  Sepal.Length Sepal.Width")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  1          5.1         3.5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  2          4.9         3.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  3          4.7         3.2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  4          4.6         3.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  5          5.0         3.6")]),t._v("\n\n")])])]),a("p",[t._v("But if we want to use other features such as summarize or filter we need to use "),a("code",[t._v("interp")]),t._v(" function from "),a("code",[t._v("lazyeval")]),t._v(" package")]),t._v(" "),a("div",{staticClass:"language-r extra-class"},[a("pre",{pre:!0,attrs:{class:"language-r"}},[a("code",[t._v("variable1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sepal.Length"')]),t._v("\nvariable2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sepal.Width"')]),t._v("\nvariable3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Species"')]),t._v("\niris "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\nselect_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" variable2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" variable3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\ngroup_by_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token percent-operator operator"}},[t._v("%>%")]),t._v("\nsummarize_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lazyeval"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("interp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" as.name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mean2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lazyeval"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("interp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("mean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" as.name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      Species mean1 mean2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       <fctr> <dbl> <dbl>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1     setosa 5.006 3.428")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2 versicolor 5.936 2.770")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3  virginica 6.588 2.974")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v('dplyr is an iteration of plyr that provides a flexible "verb" based functions to manipulate data in R. The latest version of dplyr can be downloaded from CRAN using')]),t._v(" "),a("p",[a("code",[t._v('install.package("dplyr")')])]),t._v(" "),a("p",[t._v("The key object in dplyr is a tbl, a representation of a tabular data structure. Currently  dplyr (version 0.5.0)  supports:")]),t._v(" "),a("ul",[a("li",[t._v("data frames")]),t._v(" "),a("li",[t._v("data tables")]),t._v(" "),a("li",[t._v("SQLite")]),t._v(" "),a("li",[t._v("PostgreSQL/Redshift")]),t._v(" "),a("li",[t._v("MySQL/MariaDB")]),t._v(" "),a("li",[t._v("Bigquery")]),t._v(" "),a("li",[t._v("MonetDB")]),t._v(" "),a("li",[t._v("data cubes with arrays (partial implementation)")])])])}),[],!1,null,null,null);s.default=n.exports}}]);