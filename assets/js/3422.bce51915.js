(window.webpackJsonp=window.webpackJsonp||[]).push([[3422],{3830:function(e,t,s){"use strict";s.r(t);var r=s(31),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"error-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-handling"}},[e._v("#")]),e._v(" Error Handling")]),e._v(" "),s("h2",{attrs:{id:"avoiding-error-conditions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#avoiding-error-conditions"}},[e._v("#")]),e._v(" Avoiding error conditions")]),e._v(" "),s("p",[e._v("When a runtime error occurs, good code should handle it. The best error handling strategy is to write code that checks for error conditions and simply avoids executing code that results in a runtime error.")]),e._v(" "),s("p",[e._v("One key element in reducing runtime errors, is writing small procedures that "),s("strong",[e._v("do one thing")]),e._v(". The fewer reasons procedures have to fail, the easier the code as a whole is to debug.")]),e._v(" "),s("p",[s("strong",[e._v("Avoiding runtime error 91 - Object or With block variable not set:")])]),e._v(" "),s("p",[e._v("This error will be raised when an object is used before its reference is assigned. One might have a procedure that receives an object parameter:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ByVal")]),e._v(" target "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" Worksheet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("If "),s("code",[e._v("target")]),e._v(" isn't assigned a reference, the above code will raise an error that is easily avoided by checking if the object contains an actual object reference:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ByVal")]),e._v(" target "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" Worksheet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" target "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Is")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("Nothing")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("If "),s("code",[e._v("target")]),e._v(" isn't assigned a reference, then the unassigned reference is never used, and no error occurs.")]),e._v(" "),s("p",[e._v("This way of early-exiting a procedure when one or more parameter isn't valid, is called a "),s("strong",[e._v("guard clause")]),e._v(".")]),e._v(" "),s("p",[s("strong",[e._v("Avoiding runtime error 9 - Subscript out of range:")])]),e._v(" "),s("p",[e._v("This error is raised when an array is accessed outside of its boundaries.")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ByVal")]),e._v(" index "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print ActiveWorkbook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Worksheets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("Given an index greater than the number of worksheets in the "),s("code",[e._v("ActiveWorkbook")]),e._v(", the above code will raise a runtime error. A simple guard clause can avoid that:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ByVal")]),e._v(" index "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ActiveWorkbook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Worksheets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Or")]),e._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print ActiveWorkbook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Worksheets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("Most runtime errors can be avoided by carefully verifying the values we're using "),s("strong",[e._v("before")]),e._v(" we use them, and branching on another execution path accordingly using a simple "),s("code",[e._v("If")]),e._v(" statement - in guard clauses that makes no assumptions and validates a procedure's parameters, or even in the body of larger procedures.")]),e._v(" "),s("h2",{attrs:{id:"custom-errors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#custom-errors"}},[e._v("#")]),e._v(" Custom Errors")]),e._v(" "),s("p",[e._v("Often when writing a specialized class, you'll want it to raise its own specific errors, and you'll want a clean way for user/calling code to handle these custom errors. A neat way to achieve this is by defining a dedicated "),s("code",[e._v("Enum")]),e._v(" type:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Option")]),e._v(" Explicit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Enum")]),e._v(" FoobarError\n    Err_FooWasNotBarred "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" vbObjectError "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1024")]),e._v("\n    Err_BarNotInitialized\n    Err_SomethingElseHappened\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Enum")]),e._v("\n\n")])])]),s("p",[e._v("Using the "),s("code",[e._v("vbObjectError")]),e._v(" built-in constant ensures the custom error codes don't overlap with reserved/existing error codes. Only the first enum value needs to be explicitly specified, for the underlying value of each "),s("code",[e._v("Enum")]),e._v(" member is "),s("code",[e._v("1")]),e._v(" greater than the previous member, so the underlying value of "),s("code",[e._v("Err_BarNotInitialized")]),e._v(" is implicitly "),s("code",[e._v("vbObjectError + 1025")]),e._v(".")]),e._v(" "),s("h3",{attrs:{id:"raising-your-own-runtime-errors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raising-your-own-runtime-errors"}},[e._v("#")]),e._v(" Raising your own runtime errors")]),e._v(" "),s("p",[e._v("A runtime error can be raised using the "),s("code",[e._v("Err.Raise")]),e._v(" statement, so the custom "),s("code",[e._v("Err_FooWasNotBarred")]),e._v(" error can be raised as follows:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[e._v("Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Raise Err_FooWasNotBarred\n\n")])])]),s("p",[e._v("The "),s("code",[e._v("Err.Raise")]),e._v(" method can also take custom "),s("code",[e._v("Description")]),e._v(" and "),s("code",[e._v("Source")]),e._v(" parameters - for this reason it's a good idea to also define constants to hold each custom error's description:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Const")]),e._v(" Msg_FooWasNotBarred "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("String")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"The foo was not barred."')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Const")]),e._v(" Msg_BarNotInitialized "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("String")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"The bar was not initialized."')]),e._v("\n\n")])])]),s("p",[e._v("And then create a dedicated private method to raise each error:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" OnFooWasNotBarredError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ByVal")]),e._v(" source "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Raise Err_FooWasNotBarred"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" Msg_FooWasNotBarred\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" OnBarNotInitializedError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ByVal")]),e._v(" source "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("As")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Raise Err_BarNotInitialized"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" Msg_BarNotInitialized\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("The class' implementation can then simply call these specialized procedures to raise the error:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'raises the custom 'BarNotInitialized' error with \"DoSomething\" as the source:")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Me")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Bar "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Is")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("Nothing")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v(" OnBarNotInitializedError "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"DoSomething"')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'...")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("The client code can then handle "),s("code",[e._v("Err_BarNotInitialized")]),e._v(" as it would any other error, inside its own error-handling subroutine.")]),e._v(" "),s("p",[e._v("Note: the legacy "),s("code",[e._v("Error")]),e._v(" keyword can also be used in place of "),s("code",[e._v("Err.Raise")]),e._v(", but it's obsolete/deprecated.")]),e._v(" "),s("h2",{attrs:{id:"resume-keyword"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resume-keyword"}},[e._v("#")]),e._v(" Resume keyword")]),e._v(" "),s("p",[e._v("An error-handling subroutine will either:")]),e._v(" "),s("ul",[s("li",[e._v("run to the end of the procedure, in which case execution resumes in the calling procedure.")]),e._v(" "),s("li",[e._v("or, use the "),s("code",[e._v("Resume")]),e._v(" keyword to "),s("strong",[e._v("resume")]),e._v(" execution inside the same procedure.")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("Resume")]),e._v(" keyword should only ever be used inside an error handling subroutine, because if VBA encounters "),s("code",[e._v("Resume")]),e._v(' without being in an error state, runtime error 20 "Resume without error" is raised.')]),e._v(" "),s("p",[e._v("There are several ways an error-handling subroutine may use the "),s("code",[e._v("Resume")]),e._v(" keyword:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("Resume")]),e._v(" used alone, execution continues "),s("strong",[e._v("on the statement that caused the error")]),e._v(". If the error isn't "),s("strong",[e._v("actually")]),e._v(" handled before doing that, then the same error will be raised again, and execution might enter an infinite loop.")]),e._v(" "),s("li",[s("code",[e._v("Resume Next")]),e._v(" continues execution "),s("strong",[e._v("on the statement immediately following")]),e._v(" the statement that caused the error. If the error isn't "),s("strong",[e._v("actually")]),e._v(" handled before doing that, then execution is permitted to continue with potentially invalid data, which may result in logical errors and unexpected behavior.")]),e._v(" "),s("li",[s("code",[e._v("Resume [line label]")]),e._v(" continues execution "),s("strong",[e._v("at the specified line label")]),e._v(" (or line number, if you're using legacy-style line numbers). This would typically allow executing some cleanup code before cleanly exiting the procedure, such as ensuring a database connection is closed before returning to the caller.")])]),e._v(" "),s("h3",{attrs:{id:"on-error-resume-next"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#on-error-resume-next"}},[e._v("#")]),e._v(" On Error Resume Next")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("On Error")]),e._v(" statement itself can use the "),s("code",[e._v("Resume")]),e._v(" keyword to instruct the VBA runtime to effectively "),s("strong",[e._v("ignore all errors")]),e._v(".")]),e._v(" "),s("blockquote"),e._v(" "),s("p",[s("strong",[e._v("If the error isn't "),s("strong",[e._v("actually handled")]),e._v(" before doing that, then execution is permitted to continue with potentially invalid data, which may result in "),s("strong",[e._v("logical errors and unexpected behavior")]),e._v(".")])]),e._v(" "),s("p",[e._v("The emphasis above cannot be emphasized enough. "),s("strong",[s("strong",[e._v("On Error Resume Next")]),e._v(" effectively ignores all errors and shoves them under the carpet")]),e._v(". A program that blows up with a runtime error given invalid input is a better program than one that keeps running with unknown/unintended data - be it only because the bug is much more easily identifiable. "),s("code",[e._v("On Error Resume Next")]),e._v(" can easily "),s("strong",[e._v("hide bugs")]),e._v(".")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("On Error")]),e._v(" statement is procedure-scoped - that's why there should "),s("strong",[e._v("normally")]),e._v(" be only "),s("strong",[e._v("one")]),e._v(", single such "),s("code",[e._v("On Error")]),e._v(" statement in a given procedure.")]),e._v(" "),s("p",[e._v("However "),s("strong",[e._v("sometimes")]),e._v(" an error condition can't quite be avoided, and jumping to an error-handling subroutine only to "),s("code",[e._v("Resume Next")]),e._v(" just doesn't feel right. In this specific case, the known-to-possibly-fail statement can be "),s("strong",[e._v("wrapped")]),e._v(" between two "),s("code",[e._v("On Error")]),e._v(" statements:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Resume")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Next")]),e._v("\n[possibly"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("failing statement]\nErr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Clear "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'resets current error")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n\n")])])]),s("p",[e._v("The "),s("code",[e._v("On Error GoTo 0")]),e._v(" instruction resets error handling in the current procedure, such that any further instruction causing a runtime error "),s("strong",[e._v("would be unhandled within that procedure")]),e._v(" and instead passed up the call stack until it is caught by an active error handler. If there is no active error handler in the call stack, it will be treated as an unhandled exception.")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" Caller"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" Handler\n    \n    Callee\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\nHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Error "')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Number "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('" in Caller."')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Public")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" Callee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" Handler\n    \n    Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Raise "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'This will be handled by the Callee handler.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'After this statement, errors are passed up the stack.")]),e._v("\n    Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Raise "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'This will be handled by the Caller handler.    ")]),e._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\nHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Error "')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Number "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('" in Callee."')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Resume")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Next")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("h2",{attrs:{id:"on-error-statement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#on-error-statement"}},[e._v("#")]),e._v(" On Error statement")]),e._v(" "),s("p",[e._v("Even with "),s("strong",[e._v("guard clauses")]),e._v(", one cannot realistically "),s("strong",[e._v("always")]),e._v(" account for all possible error conditions that could be raised in the body of a procedure. The "),s("code",[e._v("On Error GoTo")]),e._v(" statement instructs VBA to jump to a "),s("strong",[e._v("line label")]),e._v(' and enter "error handling mode" whenever an unexpected error occurs at runtime. After handling an error, code can '),s("strong",[e._v("resume")]),e._v(' back into "normal" execution using the '),s("code",[e._v("Resume")]),e._v(" keyword.")]),e._v(" "),s("p",[s("strong",[e._v("Line labels")]),e._v(" denote "),s("strong",[e._v("subroutines")]),e._v(": because subroutines originate from legacy BASIC code and uses "),s("code",[e._v("GoTo")]),e._v(" and "),s("code",[e._v("GoSub")]),e._v(" jumps and "),s("code",[e._v("Return")]),e._v(' statements to jump back to the "main" routine, it\'s fairly easy to write hard-to-follow '),s("strong",[e._v("spaghetti code")]),e._v(" if things aren't rigorously structured. For this reason, it's best that:")]),e._v(" "),s("ul",[s("li",[e._v("a procedure has "),s("strong",[e._v("one and only one")]),e._v(" error-handling subroutine")]),e._v(" "),s("li",[e._v("the error-handling subroutine "),s("strong",[e._v("only ever runs in an error state")])])]),e._v(" "),s("p",[e._v("This means a procedure that handles its errors, should be structured like this:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" CleanFail\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'procedure code here")]),e._v("\n\nCleanExit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'cleanup code here")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\nCleanFail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'error-handling code here")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Resume")]),e._v(" CleanExit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("h3",{attrs:{id:"error-handling-strategies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-handling-strategies"}},[e._v("#")]),e._v(" Error Handling Strategies")]),e._v(" "),s("p",[e._v("Sometimes you want to handle different errors with different actions. In that case you will inspect the global "),s("code",[e._v("Err")]),e._v(" object, which will contain information about the error that was raised - and act accordingly:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[e._v("CleanExit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\nCleanFail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Select")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Case")]),e._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Number\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Case")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("9")]),e._v("\n            MsgBox "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Specified number doesn\'t exist. Please try again."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" vbExclamation\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Resume")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Case")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("91")]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'woah there, this shouldn't be happening.")]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Stop")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'execution will break here")]),e._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Resume")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'hit F8 to jump to the line that raised the error")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Case")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Else")]),e._v("\n            MsgBox "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"An unexpected error has occurred:"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" vbNewLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" vbCritical\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Resume")]),e._v(" CleanExit\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Select")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("As a general guideline, consider turning on the error handling for entire subroutine or function, and handle all the errors that may occur within its scope. If you need to only handle errors in the small section section of the code -- turn error handling on and off a the same level:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Private")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("CheckValue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v(" CheckValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Then")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" ErrorHandler   "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("' turn error handling on")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("' code that may result in error")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("' turn error handling off - same level")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("If")]),e._v("\n\nCleanExit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\nErrorHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("' error handling code here")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("' do not turn off error handling here")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Resume")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("h3",{attrs:{id:"line-numbers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#line-numbers"}},[e._v("#")]),e._v(" Line numbers")]),e._v(" "),s("p",[e._v("VBA supports legacy-style (e.g. QBASIC) line numbers. The "),s("code",[e._v("Erl")]),e._v(" hidden property can be used to identify the line number that raised the last error. If you're not using line numbers, "),s("code",[e._v("Erl")]),e._v(" will only ever return 0.")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v(" Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("42")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("30")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("40")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),e._v(" Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Error raised on line "')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" Erl "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("' returns 20")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("If you "),s("strong",[e._v("are")]),e._v(" using line numbers, but not consistently, then "),s("code",[e._v("Erl")]),e._v(" will return "),s("strong",[e._v("the last line number before the instruction that raised the error")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),e._v("\n   Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("42")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("30")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Exit")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),e._v(" Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Error raised on line "')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" Erl "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'returns 10")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("Keep in mind that "),s("code",[e._v("Erl")]),e._v(" also only has "),s("code",[e._v("Integer")]),e._v(" precision, and will silently overflow. This means that line numbers outside of the "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/vba/3418/data-types-and-limits/11777/integer#t=201612061853023563097",target:"_blank",rel:"noopener noreferrer"}},[e._v("integer range"),s("OutboundLink")],1),e._v(" will give incorrect results:")]),e._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v(" DoSomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("99997")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("On")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Error")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GoTo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("99999")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("99998")]),e._v(" Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("42")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("99999")]),e._v("\n      Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Print Erl   "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("'Prints 34462")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("End")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Sub")]),e._v("\n\n")])])]),s("p",[e._v("The line number isn't quite as relevant as the statement that caused the error, and numbering lines quickly becomes tedious and not quite maintenance-friendly.")])])}),[],!1,null,null,null);t.default=a.exports}}]);