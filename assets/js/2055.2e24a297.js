(window.webpackJsonp=window.webpackJsonp||[]).push([[2055],{2463:function(t,e,n){"use strict";n.r(e);var r=n(31),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"scope-identity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scope-identity"}},[t._v("#")]),t._v(" SCOPE_IDENTITY()")]),t._v(" "),n("h2",{attrs:{id:"introduction-with-simple-example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-with-simple-example"}},[t._v("#")]),t._v(" Introduction with Simple Example")]),t._v(" "),n("p",[t._v("SCOPE_IDENTITY() returns the last identity value inserted into an identity column in the same scope. A scope is a module: a stored procedure, trigger, function, or batch. Therefore, two statements are in the same scope if they are in the same stored procedure, function, or batch.")]),t._v(" "),n("p",[t._v("INSERT INTO  ([column1],[column2]) VALUES (8,9);"),n("br"),t._v("\nGO"),n("br"),t._v("\nSELECT SCOPE_IDENTITY() AS [SCOPE_IDENTITY];"),n("br"),t._v("\nGO")]),t._v(" "),n("h4",{attrs:{id:"syntax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),n("ul",[n("li",[t._v("SELECT SCOPE_IDENTITY();")]),t._v(" "),n("li",[t._v("SELECT SCOPE_IDENTITY() AS [SCOPE_IDENTITY];")]),t._v(" "),n("li",[t._v("SCOPE_IDENTITY()")])])])}),[],!1,null,null,null);e.default=a.exports}}]);