(window.webpackJsonp=window.webpackJsonp||[]).push([[3447],{3855:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"working-with-ado"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#working-with-ado"}},[t._v("#")]),t._v(" Working with ADO")]),t._v(" "),s("h2",{attrs:{id:"making-a-connection-to-a-data-source"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#making-a-connection-to-a-data-source"}},[t._v("#")]),t._v(" Making a connection to a data source")]),t._v(" "),s("p",[t._v("The first step in accessing a data source via ADO is creating an ADO "),s("code",[t._v("Connection")]),t._v(" object. This is typically done using a connection string to specify the data source parameters, although it is also possible to open a DSN connection by passing the DSN, user ID, and password to the "),s("code",[t._v(".Open")]),t._v(" method.")]),t._v(" "),s("p",[t._v("Note that a DSN is not required to connect to a data source via ADO - any data source that has an ODBC provider can be connected to with the appropriate connection string. While specific connection strings for different providers are outside of the scope of this topic, "),s("a",{attrs:{href:"https://www.connectionstrings.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConnectionStrings.com"),s("OutboundLink")],1),t._v(" is an excellent reference for finding the appropriate string for your provider.")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Const")]),t._v(" SomeDSN "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DSN=SomeDSN;Uid=UserName;Pwd=MyPassword;"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Connection\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenDatabaseConnection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SomeDSN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'... Do work.")]),t._v("\n        database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Make sure to close all database connections.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" OpenDatabaseConnection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ConnString "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Connection\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("On")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GoTo")]),t._v(" Handler\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Connection\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Connection\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v(" database\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ConnectionString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConnString\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ConnectionTimeout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Value is given in seconds.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Open\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v("\n     \n    OpenDatabaseConnection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" database\n     \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\nHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Database connection failed. Check your connection string."')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\n\n")])])]),s("p",[t._v("Note that the database password is included in the connection string in the example above only for the sake of clarity.  Best practices would dictate "),s("strong",[s("strong",[t._v("not")])]),t._v(" storing database passwords in code. This can be accomplished by taking the password via user input or using Windows authentication.")]),t._v(" "),s("h2",{attrs:{id:"creating-parameterized-commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-parameterized-commands"}},[t._v("#")]),t._v(" Creating parameterized commands")]),t._v(" "),s("p",[t._v("Any time SQL executed through an ADO connection needs to contain user input, it is considered best practice to parameterize it in order to minimize the chance of SQL injection. This method is also more readable than long concatenations and facilitates more robust and maintainable code (i.e. by using a function that returns an array of "),s("code",[t._v("Parameter")]),t._v(").")]),t._v(" "),s("p",[t._v("In standard ODBC syntax, parameters are given "),s("code",[t._v("?")]),t._v(' "placeholders" in the query text, and then parameters are appended to the '),s("code",[t._v("Command")]),t._v(" in the same order that they appear in the query.")]),t._v(" "),s("p",[t._v("Note that the example below uses the "),s("code",[t._v("OpenDatabaseConnection")]),t._v(" function from the "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/vba/3578/working-with-ado/12351/making-a-connection-to-a-data-source",target:"_blank",rel:"noopener noreferrer"}},[t._v("Making a connection to a data source"),s("OutboundLink")],1),t._v(" for brevity.")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" UpdateTheFoos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("On")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GoTo")]),t._v(" Handler\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Connection\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenDatabaseConnection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SomeDSN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Build the command to pass to the data source.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v(" update\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ActiveConnection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" database\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandText "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UPDATE Table SET Foo = ? WHERE Bar = ?"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adCmdText\n            \n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Create the parameters.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" fooValue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Parameter\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" fooValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CreateParameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FooValue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" adNumeric"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" adParamInput"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            fooValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n            \n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" condition "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Parameter\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" condition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CreateParameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Condition"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" adBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" adParamInput"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bar"')]),t._v("\n            \n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Add the parameters to the Command")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Append fooValue\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Append condition\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Execute\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\nCleanExit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("And")]),t._v(" database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("State "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adStateOpen "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\nHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Resume")]),t._v(" CleanExit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),s("p",[t._v("Note: The example above demonstrates a parameterized UPDATE statement, but any SQL statement can be given parameters.")]),t._v(" "),s("h2",{attrs:{id:"retrieving-records-with-a-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retrieving-records-with-a-query"}},[t._v("#")]),t._v(" Retrieving records with a query")]),t._v(" "),s("p",[t._v("Queries can be performed in two ways, both of which return an ADO "),s("code",[t._v("Recordset")]),t._v(" object which is a collection of returned rows.  Note that both of the examples below use the "),s("code",[t._v("OpenDatabaseConnection")]),t._v(" function from the "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/vba/3578/working-with-ado/12351/making-a-connection-to-a-data-source",target:"_blank",rel:"noopener noreferrer"}},[t._v("Making a connection to a data source"),s("OutboundLink")],1),t._v(" example for the purpose of brevity. Remember that the syntax of the SQL passed to the data source is provider specific.")]),t._v(" "),s("p",[t._v("The first method is to pass the SQL statement directly to the Connection object, and is the easiest method for executing simple queries:")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" DisplayDistinctItems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("On")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GoTo")]),t._v(" Handler\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Connection\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenDatabaseConnection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SomeDSN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" records "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Recordset\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" records "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SELECT DISTINCT Item FROM Table"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Loop through the returned Recordset.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("While")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EOF      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'EOF is false when there are more records.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Individual fields are indexed either by name or 0 based ordinal.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Note that this is using the default .Fields member of the Recordset.")]),t._v("\n            Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Item"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Move to the next record.")]),t._v("\n            records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MoveNext\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Loop")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\nCleanExit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" records "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v(" records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("And")]),t._v(" database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("State "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adStateOpen "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\nHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Resume")]),t._v(" CleanExit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),s("p",[t._v("The second method is to create an ADO "),s("code",[t._v("Command")]),t._v(" object for the query you want to execute. This requires a little more code, but is necessary in order to use parametrized queries:")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" DisplayDistinctItems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("On")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GoTo")]),t._v(" Handler\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Connection\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenDatabaseConnection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SomeDSN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" query "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Build the command to pass to the data source.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v(" query\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ActiveConnection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" database\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandText "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SELECT DISTINCT Item FROM Table"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adCmdText\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" records "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Recordset\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Execute the command to retrieve the recordset.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" records "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("While")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EOF\n            Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Item"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MoveNext\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Loop")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\nCleanExit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" records "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v(" records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("And")]),t._v(" database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("State "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adStateOpen "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\nHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Resume")]),t._v(" CleanExit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),s("p",[t._v("Note that commands sent to the data source are "),s("strong",[t._v("vulnerable to SQL injection")]),t._v(", either intentional or unintentional. In general, queries should not be created by concatenating user input of any kind. Instead, they should be parameterized (see "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/vba/3578/working-with-ado/12354/creating-parametrized-commands",target:"_blank",rel:"noopener noreferrer"}},[t._v("Creating parameterized commands"),s("OutboundLink")],1),t._v(").")]),t._v(" "),s("h2",{attrs:{id:"executing-non-scalar-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executing-non-scalar-functions"}},[t._v("#")]),t._v(" Executing non-scalar functions")]),t._v(" "),s("p",[t._v("ADO connections can be used to perform pretty much any database function that the provider supports via SQL. In this case it isn't always necessary to use the "),s("code",[t._v("Recordset")]),t._v(" returned by the "),s("code",[t._v("Execute")]),t._v(" function, although it can be useful for obtaining key assignments after INSERT statements with @@Identity or similar SQL commands. Note that the example below uses the "),s("code",[t._v("OpenDatabaseConnection")]),t._v(" function from the "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/vba/3578/working-with-ado/12351/making-a-connection-to-a-data-source",target:"_blank",rel:"noopener noreferrer"}},[t._v("Making a connection to a data source"),s("OutboundLink")],1),t._v(" example for the purpose of brevity.")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" UpdateTheFoos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("On")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GoTo")]),t._v(" Handler\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Connection\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenDatabaseConnection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SomeDSN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Set")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("New")]),t._v(" ADODB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'Build the command to pass to the data source.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v(" update\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ActiveConnection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" database\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandText "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UPDATE Table SET Foo = 42 WHERE Bar IS NULL"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommandType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adCmdText\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Execute        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("'We don't need the return from the DB, so ignore it.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("With")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\nCleanExit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Not")]),t._v(" database "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Nothing")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("And")]),t._v(" database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("State "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adStateOpen "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Then")]),t._v("\n        database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("If")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\nHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Resume")]),t._v(" CleanExit\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\n")])])]),s("p",[t._v("Note that commands sent to the data source are "),s("strong",[t._v("vulnerable to SQL injection")]),t._v(", either intentional or unintentional. In general, SQL statements should not be created by concatenating user input of any kind. Instead, they should be parameterized (see "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/vba/3578/working-with-ado/12354/creating-parametrized-commands",target:"_blank",rel:"noopener noreferrer"}},[t._v("Creating parameterized commands"),s("OutboundLink")],1),t._v(").")]),t._v(" "),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),s("p",[t._v("The examples shown in this topic use early binding for clarity, and require a reference to the Microsoft ActiveX Data Object x.x Library. They can be converted to late binding by replacing the strongly typed references with "),s("code",[t._v("Object")]),t._v(" and replacing object creation using "),s("code",[t._v("New")]),t._v(" with "),s("code",[t._v("CreateObject")]),t._v(" where appropriate.")])])}),[],!1,null,null,null);a.default=n.exports}}]);