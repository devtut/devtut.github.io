(window.webpackJsonp=window.webpackJsonp||[]).push([[2963],{3371:function(t,s,e){"use strict";e.r(s);var a=e(31),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"standardize-analyses-by-writing-standalone-r-scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#standardize-analyses-by-writing-standalone-r-scripts"}},[t._v("#")]),t._v(" Standardize analyses by writing standalone R scripts")]),t._v(" "),e("p",[t._v("If you want to routinely apply an R analysis to a lot of separate data files, or provide a repeatable analysis method to other people, an executable R script is a user-friendly way to do so. Instead of you or your user having to call "),e("code",[t._v("R")]),t._v(" and execute your script inside R via "),e("code",[t._v("source(.)")]),t._v("  or a function call, your user may simply call the script itself as if it was a program.")]),t._v(" "),e("h2",{attrs:{id:"the-basic-structure-of-standalone-r-program-and-how-to-call-it"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-basic-structure-of-standalone-r-program-and-how-to-call-it"}},[t._v("#")]),t._v(" The basic structure of standalone R program and how to call it")]),t._v(" "),e("h3",{attrs:{id:"the-first-standalone-r-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-first-standalone-r-script"}},[t._v("#")]),t._v(" The first standalone R script")]),t._v(" "),e("p",[t._v("Standalone R scripts are not executed by the program "),e("code",[t._v("R")]),t._v(" ("),e("code",[t._v("R.exe")]),t._v(" under Windows), but by a program called "),e("code",[t._v("Rscript")]),t._v(" ("),e("code",[t._v("Rscript.exe")]),t._v("), which is included in your "),e("code",[t._v("R")]),t._v(" installation by default.")]),t._v(" "),e("p",[t._v("To hint at this fact, standalone R scripts start with a special line called "),e("strong",[t._v("Shebang line")]),t._v(", which holds the following content: "),e("code",[t._v("#!/usr/bin/env Rscript")]),t._v(". Under Windows, an additional measure is needed, which is detailled later.")]),t._v(" "),e("p",[t._v('The following simple standalone R script saves a histogram under the file name "hist.png" from numbers it receives as input:')]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env Rscript")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# User message (\\n = end the line)")]),t._v("\ncat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input numbers, separated by space:\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Read user input as one string (n=1 -> Read only one line)")]),t._v("\ninput "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" readLines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stdin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Split the string at each space (\\\\s == any space)")]),t._v("\ninput "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" strsplit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\s"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# convert the obtained vector of strings to numbers")]),t._v("\ninput "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" as.numeric"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Open the output picture file")]),t._v("\npng"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hist.png"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("width"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Draw the histogram")]),t._v("\nhist"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Close the output file")]),t._v("\ndev.off"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("You can see several key elements of a standalone R script. In the first line, you see the Shebang line. Followed by that, "),e("code",[t._v('cat("....\\n")')]),t._v(" is used to print a message to the user. Use "),e("code",[t._v('file("stdin")')]),t._v(' whenever you want to specify "User input on console" as a data origin. This can be used instead of a file name in several data reading functions ('),e("code",[t._v("scan")]),t._v(", "),e("code",[t._v("read.table")]),t._v(", "),e("code",[t._v("read.csv")]),t._v(",...). After the user input is converted from strings to numbers, the plotting begins. There, it can be seen, that plotting commands which are meant to be written to a file must be enclosed in two commands. These are in this case "),e("code",[t._v("png(.)")]),t._v(" and "),e("code",[t._v("dev.off()")]),t._v(". The first function depends on the desired output file format (other common choices being "),e("code",[t._v("jpeg(.)")]),t._v(" and "),e("code",[t._v("pdf(.)")]),t._v("). The second function, "),e("code",[t._v("dev.off()")]),t._v(" is always required. It writes the plot to the file and ends the plotting process.")]),t._v(" "),e("h3",{attrs:{id:"preparing-a-standalone-r-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preparing-a-standalone-r-script"}},[t._v("#")]),t._v(" Preparing a standalone R script")]),t._v(" "),e("h3",{attrs:{id:"linux-mac"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-mac"}},[t._v("#")]),t._v(" Linux/Mac")]),t._v(" "),e("p",[t._v('The standalone script\'s file must first be made executable. This can happen by right-clicking the file, opening "Properties" in the opening menu and checking the "Executable" checkbox in the "Permissions" tab. Alternatively, the command')]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("chmod "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("x PATH"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TO"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("SCRIPT"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("SCRIPTNAME.R\n\n")])])]),e("p",[t._v("can be called in a Terminal.")]),t._v(" "),e("h3",{attrs:{id:"windows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[t._v("#")]),t._v(" Windows")]),t._v(" "),e("p",[t._v("For each standalone script, a batch file must be written with the following contents:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C:\\Program Files\\R-XXXXXXX\\bin\\Rscript.exe"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%~dp0\\XXXXXXX.R"')]),t._v(" %"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n")])])]),e("p",[t._v("A batch file is a normal text file, but which has a "),e("code",[t._v("*.bat")]),t._v(" extension except a "),e("code",[t._v("*.txt")]),t._v(" extension. Create it using a text editor like "),e("code",[t._v("notepad")]),t._v(" (not "),e("code",[t._v("Word")]),t._v(") or similar and put the file name into quotation marks "),e("code",[t._v('"FILENAME.bat"')]),t._v(')  in the save dialog. To edit an existing batch file, right-click on it and select "Edit".')]),t._v(" "),e("p",[t._v("You have to adapt the code shown above everywhere "),e("code",[t._v("XXX...")]),t._v(" is written:")]),t._v(" "),e("ul",[e("li",[t._v("Insert the correct folder where your R installation resides")]),t._v(" "),e("li",[t._v("Insert the correct name of your script and place it into the same directory as this batch file.")])]),t._v(" "),e("p",[t._v("Explanation of the elements in the code: The first part "),e("code",[t._v('"C:\\...\\Rscript.exe"')]),t._v(" tells Windows where to find the "),e("code",[t._v("Rscript.exe")]),t._v(" program. The second part "),e("code",[t._v('"%~dp0\\XXX.R"')]),t._v(" tells "),e("code",[t._v("Rscript")]),t._v(" to execute the R script you've written which resides in the same folder as the batch file ("),e("code",[t._v("%~dp0")]),t._v(" stands for the batch file folder). Finally, "),e("code",[t._v("%*")]),t._v(" forwards any command line arguments you give to the batch file to the R script.")]),t._v(" "),e("p",[t._v("If you double-click on the batch file, the R script is executed. If you drag files on the batch file, the corresponding file names are given to the R script as command line arguments.")]),t._v(" "),e("h2",{attrs:{id:"using-littler-to-execute-r-scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-littler-to-execute-r-scripts"}},[t._v("#")]),t._v(" Using littler to execute R scripts")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://dirk.eddelbuettel.com/code/littler.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("littler"),e("OutboundLink")],1),t._v(" (pronounced "),e("strong",[t._v("little r")]),t._v(") ("),e("a",{attrs:{href:"https://cran.r-project.org/web/packages/littler/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cran"),e("OutboundLink")],1),t._v(") provides, besides other features, two possibilities to run R scripts from the command line with littler's "),e("code",[t._v("r")]),t._v(" command (when one works with Linux or MacOS).")]),t._v(" "),e("h3",{attrs:{id:"installing-littler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installing-littler"}},[t._v("#")]),t._v(" Installing littler")]),t._v(" "),e("h3",{attrs:{id:"from-r"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#from-r"}},[t._v("#")]),t._v(" From R:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("install.packages"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"littler"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("The path of "),e("code",[t._v("r")]),t._v(" is printed in the terminal, like")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("You could link to the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),t._v(" binary installed "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home/*USER*/R/x86_64-pc-linux-gnu-library/3.4/littler/bin/r'")]),t._v("\nfrom "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/local/bin'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" order to use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" scripting.\n\n")])])]),e("p",[t._v("To be able to call "),e("code",[t._v("r")]),t._v(" from the system's command line, a symlink is needed:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("ln "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("USER"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("R"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("x86_64"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pc"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("linux"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("gnu"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("library"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.4")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("littler"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("r\n\n")])])]),e("h3",{attrs:{id:"using-apt-get-debian-ubuntu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-apt-get-debian-ubuntu"}},[t._v("#")]),t._v(" Using apt-get (Debian, Ubuntu):")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("sudo apt"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("get install littler\n\n")])])]),e("h3",{attrs:{id:"using-littler-with-standard-r-scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-littler-with-standard-r-scripts"}},[t._v("#")]),t._v(" Using littler with standard .r scripts")]),t._v(" "),e("p",[t._v("With "),e("code",[t._v("r")]),t._v(" from "),e("code",[t._v("littler")]),t._v(" it is possible to execute standalone R scripts without any changes to the script.\nExample script:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# User message (\\n = end the line)")]),t._v("\ncat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input numbers, separated by space:\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Read user input as one string (n=1 -> Read only one line)")]),t._v("\ninput "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" readLines"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stdin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Split the string at each space (\\\\s == any space)")]),t._v("\ninput "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" strsplit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\s"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# convert the obtained vector of strings to numbers")]),t._v("\ninput "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" as.numeric"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Open the output picture file")]),t._v("\npng"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hist.png"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("width"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Draw the histogram")]),t._v("\nhist"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Close the output file")]),t._v("\ndev.off"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("Note that no shebang is at the top of the scripts. When saved as for example "),e("code",[t._v("hist.r")]),t._v(", it is directly callable from the system command:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("r hist.r\n\n")])])]),e("h3",{attrs:{id:"using-littler-on-shebanged-scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-littler-on-shebanged-scripts"}},[t._v("#")]),t._v(" Using littler on "),e("strong",[t._v("shebanged")]),t._v(" scripts")]),t._v(" "),e("p",[t._v("It is also possible to create executable R scripts with littler, with the use of the shebang")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env r")]),t._v("\n\n")])])]),e("p",[t._v("at the top of the script. The corresponding R script has to be made executable with "),e("code",[t._v("chmod +X /path/to/script.r")]),t._v(" and is directly callable from the system terminal.")]),t._v(" "),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),e("p",[t._v("To represent the standard input-/output channels, use the functions "),e("code",[t._v('file("stdin")')]),t._v(" (input from terminal or other program via pipe), "),e("code",[t._v("stdout()")]),t._v(" (standard output) and "),e("code",[t._v("stderr()")]),t._v(" (standard error). Note that while there is the function "),e("code",[t._v("stdin()")]),t._v(", it can not be used when supplying a ready-made script to R, because it will read the next lines of that script instead of user input.")])])}),[],!1,null,null,null);s.default=n.exports}}]);