(window.webpackJsonp=window.webpackJsonp||[]).push([[1871],{2279:function(t,n,s){"use strict";s.r(n);var a=s(31),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"counters-if-statements-and-loops-with-latex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#counters-if-statements-and-loops-with-latex"}},[t._v("#")]),t._v(" Counters, if statements and loops with latex")]),t._v(" "),s("h2",{attrs:{id:"operations-with-counters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operations-with-counters"}},[t._v("#")]),t._v(" Operations with counters")]),t._v(" "),s("p",[t._v("This example shows how to use mathematical operations with counters. It may be useful for loops in latex.")]),t._v(" "),s("p",[s("strong",[t._v("Addition:")]),t._v(" "),s("code",[t._v("\\addtocounter{num}{n}")])]),t._v(" "),s("p",[t._v("this command adds "),s("code",[t._v("n")]),t._v(" to "),s("code",[t._v("num")]),t._v(", where "),s("code",[t._v("num")]),t._v(" is a counter and "),s("code",[t._v("n")]),t._v(" is a positive integer.")]),t._v(" "),s("p",[s("strong",[t._v("Subtraction:")]),t._v(" "),s("code",[t._v("\\addtocounter{num}{-n}")])]),t._v(" "),s("p",[t._v("this command subtracts "),s("code",[t._v("n")]),t._v(" from "),s("code",[t._v("num")]),t._v(", where "),s("code",[t._v("num")]),t._v(" is a counter and "),s("code",[t._v("n")]),t._v(" is a positive integer.")]),t._v(" "),s("p",[s("strong",[t._v("Multiplication:")]),t._v(" "),s("code",[t._v("\\multiply\\value{num} by n")])]),t._v(" "),s("p",[t._v("this command multiply "),s("code",[t._v("num")]),t._v(" by "),s("code",[t._v("n")]),t._v(", where "),s("code",[t._v("num")]),t._v(" is a counter and "),s("code",[t._v("n")]),t._v(" is an integer.")]),t._v(" "),s("p",[s("strong",[t._v("Division")]),t._v(" "),s("code",[t._v("\\divide\\value{num} by n")])]),t._v(" "),s("p",[t._v("this command divides "),s("code",[t._v("num")]),t._v(" by "),s("code",[t._v("n")]),t._v(" and gets the integer part of the quotient ("),s("code",[t._v("num")]),t._v(" is a counter and "),s("code",[t._v("n")]),t._v(" is an integer)")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\documentclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("article")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\newcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\addtocounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenum")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%prints 13")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\addtocounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("-3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenum")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%prints 10")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\stepcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenum")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%prints 11")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\multiply")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" by "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenum")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%prints 121")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\multiply")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" by 2\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenum")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%prints 242")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\divide")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" by 60\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenum")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%prints 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("\\newcommand{num}")]),t._v(" declares counter. "),s("code",[t._v("\\setcounter{num}{3}")]),t._v(" sets num value to 3.")]),t._v(" "),s("p",[s("code",[t._v("\\addtocounter{num}{10}")]),t._v(" adds 10 to num.")]),t._v(" "),s("p",[s("code",[t._v("\\addtocounter{num}{-3}")]),t._v(" subtract 3 from num.")]),t._v(" "),s("p",[s("code",[t._v("\\stepcounter{num}")]),t._v(" adds 1 to num")]),t._v(" "),s("p",[s("code",[t._v("\\multiply\\value{num} by \\value{num}")]),t._v(" squares num.")]),t._v(" "),s("p",[s("code",[t._v("\\multiply\\value{num} by 2")]),t._v(" doubles num.")]),t._v(" "),s("p",[s("code",[t._v("\\divide\\value{num} by 60")]),t._v(" divides num by 60 and gets the integer part.")]),t._v(" "),s("p",[t._v("The result of the code: 13\\10\\11\\121\\242\\4")]),t._v(" "),s("p",[t._v("(\\ symbolizes new line)")]),t._v(" "),s("p",[t._v("intcalc package adds some other integer operations e.g. mod, pow, sng, abs, inv ...")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://ctan.mackichan.com/macros/latex/contrib/oberdiek/intcalc.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("intcalc_package.pdf"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"counter-declaration-initialization-and-printing-to-pdf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#counter-declaration-initialization-and-printing-to-pdf"}},[t._v("#")]),t._v(" Counter declaration, initialization and printing to pdf")]),t._v(" "),s("p",[t._v("It is possible to use integer variables with latex. To create a new variable we need the "),s("code",[t._v("\\newcounter{name}")]),t._v(" command, where "),s("code",[t._v("name")]),t._v(" is the name of the new counter. The "),s("code",[t._v("name")]),t._v(" must contain only letters. This command creates a new one with name "),s("code",[t._v("\\thename")]),t._v(". With this command we can print "),s("code",[t._v("name")]),t._v(" variable onto the paper. The initial value of "),s("code",[t._v("name")]),t._v(' is 0. To give value to "name" we can use '),s("code",[t._v("\\setcounter{name}{n}")]),t._v(" where n is an integer. "),s("code",[t._v("\\value{name}")]),t._v(" is a function which returns with the value of "),s("code",[t._v("name")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\documentclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("article")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\newcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%new counter, initial value is 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenum")]),t._v("                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%print 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%set num to 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenum")]),t._v("                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%print 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\newcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%set number to value of num")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\thenumber")]),t._v("                          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%print 3")]),t._v("\n\nLatex provides some other formats to print a number.\n\nOther types of printing:\n\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\arabic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\Roman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%→ I, II, III, IV, . . . (num = 1, 2, 3, . . . )")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\roman")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%→ i, ii, iii, iv, . . . (num = 1, 2, 3, . . . )")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\Alph")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%→ A, B, C, D, . . . (num = 1, 2, 3, . . . , 26)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\alph")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%→ a, b, c, d, . . . (num = 1, 2, 3, . . . , 26)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\fnsymbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%→ ∗, †, ‡, §, ¶, k, ∗∗, ††, ‡‡ (num = 1, 2, 3, . . . , 9)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[s("a",{attrs:{href:"https://i.stack.imgur.com/sroou.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://i.stack.imgur.com/sroou.png",alt:"enter image description here"}}),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"if-statements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if-statements"}},[t._v("#")]),t._v(" If statements")]),t._v(" "),s("p",[t._v("In latex we can use built-in commands to execute code whether the conditions are true or not.")]),t._v(" "),s("p",[s("strong",[t._v("Comparing two integers:")]),t._v(" "),s("code",[t._v("\\ifnum\\value{num}>n {A} \\else {B}\\fi")])]),t._v(" "),s("p",[t._v("This code executes A if num>n else B. We can substitute > with < and =.")]),t._v(" "),s("p",[s("strong",[t._v("If a number is odd:")]),t._v(" "),s("code",[t._v("\\ifodd\\value{num} {A}\\else {B}\\fi")])]),t._v(" "),s("p",[t._v("If num is odd then it executes A else B.")]),t._v(" "),s("p",[s("strong",[t._v("If with condition:")]),t._v(" "),s("code",[t._v("\\ifthenelse{condition}{A}{B}")])]),t._v(" "),s("p",[t._v("We have to load ifthen package to use this command. If condition are true then it executes A else B.")]),t._v(" "),s("p",[t._v("It is possible to create complex condition with "),s("code",[t._v("\\( \\)")]),t._v(", "),s("code",[t._v("\\AND")]),t._v(", "),s("code",[t._v("\\OR")]),t._v(", "),s("code",[t._v("\\NOT")]),t._v(".")]),t._v(" "),s("p",[s("strong",[t._v("For example:")]),t._v(" "),s("code",[t._v("\\ifthenelse{\\(\\NOT 4<2 \\OR 4>11\\)\\AND\\isodd{4}}{A}{B}")])]),t._v(" "),s("p",[t._v('This piece of code writes down "B" on the page. '),s("code",[t._v("\\NOT 4<2")]),t._v(" is true and "),s("code",[t._v("4>11")]),t._v(' is false. If we connect a false and a true statement with "OR" then the result is true. So '),s("code",[t._v("\\(\\NOT 4<2 \\OR 4>11\\)")]),t._v(" is true. "),s("code",[t._v("\\isodd{4}")]),t._v(' is false because 4 is even. A false and a true statement connected with "AND" is false, so the output is B.')]),t._v(" "),s("p",[t._v("An example code:")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\documentclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("article")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\usepackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ifthen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\newcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    If num"),s("span",{pre:!0,attrs:{class:"token equation string"}},[t._v("$>$")]),t._v('100 then the next sentence will be "Num is large." else "Num is small."\n\n    Num is '),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\ifnum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(">100 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("large"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("small"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('.\n\n    If num is odd then the next sentence will begin with "Odd" if not then with "Even"\n\n    '),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\ifodd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Odd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Even"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" numbers are cool.\n\n    If (num"),s("span",{pre:!0,attrs:{class:"token equation string"}},[t._v("$>$")]),t._v("3 and (1"),s("span",{pre:!0,attrs:{class:"token equation string"}},[t._v("$<$")]),t._v("0 or num"),s("span",{pre:!0,attrs:{class:"token equation string"}},[t._v("$=$")]),t._v('10)) is true then the next sentence will be "True." else "False."\n\n    '),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\ifthenelse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(">3"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\AND")]),s("span",{pre:!0,attrs:{class:"token equation string"}},[t._v("\\(1<0 "),s("span",{pre:!0,attrs:{class:"token equation-command regex"}},[t._v("\\OR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token equation-command regex"}},[t._v("\\value")]),t._v("{num}=10\\)")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("True."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("False."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[s("a",{attrs:{href:"https://i.stack.imgur.com/3P1FT.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://i.stack.imgur.com/3P1FT.png",alt:"result"}}),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"loops-repeating-things"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loops-repeating-things"}},[t._v("#")]),t._v(" Loops - repeating things")]),t._v(" "),s("p",[t._v('We can create loops in latex. They are similar but not as customizable as loops in other programming languages. One alternative to use loops are @loops. If we use a command which includes "@" in its name, we must be put it between '),s("code",[t._v("\\makeatletter")]),t._v(" and "),s("code",[t._v("\\makeatother")]),t._v(". It is not allowed to use them in a macro which describes a new definition.")]),t._v(" "),s("p",[t._v("Wrong:")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\def")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\is")]),t._v("#1#2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatletter")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\@")]),t._v("ifstar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("#1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("#2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatother")]),t._v("\n\n")])])]),s("p",[t._v("Right:")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatletter")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\def")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\is")]),t._v("#1#2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\@")]),t._v("ifstar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("#1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("#2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatother")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("@for loop:")]),t._v(" "),s("code",[t._v("\\@for\\command:={list}\\do{commands}")])]),t._v(" "),s("p",[s("strong",[t._v("Example")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatletter")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\@")]),t._v("for"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\sun")]),t._v(":="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("rising,setting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("The sun is "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\sun")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatother")]),t._v("\n\n")])])]),s("p",[t._v("It creates the following text: The sun is rising. The sun is setting.")]),t._v(" "),s("p",[s("strong",[t._v("@whilenum loop:")]),t._v(" "),s("code",[t._v("\\@whilenum condition\\do{commands}")])]),t._v(" "),s("p",[s("strong",[t._v("Example")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatletter")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\newcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\@")]),t._v("whilenum"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("<10"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\do")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\stepcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\ifthenelse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\isodd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\theint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatother")]),t._v("\n\n")])])]),s("p",[t._v("This code writes odd numbers from 1 to 9.")]),t._v(" "),s("p",[s("strong",[t._v('"loop repeat" loop:')]),t._v(" "),s("code",[t._v("\\loop {commands} \\ifnum condition \\repeat")])]),t._v(" "),s("p",[t._v("Executes commands till condition is true.")]),t._v(" "),s("p",[s("strong",[t._v("Example")])]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\loop")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\theint")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\addtocounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\ifnum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("<10\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\repeat")]),t._v("\n\n")])])]),s("p",[t._v("This code does the same as @whilenum loop.")]),t._v(" "),s("p",[t._v("An example code:")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\documentclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("article")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\usepackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ifthen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\usepackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("amsmath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%\\text{} command needs this package")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    Demonstration of @for loop:\n\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatletter")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\@")]),t._v("for"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\sun")]),t._v(":="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("rising,setting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("The sun is "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\sun")]),t._v(". "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatother")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\newcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    @whilenum loop:\n    \n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatletter")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\@")]),t._v("whilenum"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("<20"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\stepcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\ifthenelse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\isodd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\theint")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatother")]),t._v('\n    \n    "loop repeat" loop:\n    \n    '),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\loop")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\theint")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\addtocounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\ifnum")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("<20\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\repeat")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[s("a",{attrs:{href:"https://i.stack.imgur.com/e7aBf.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://i.stack.imgur.com/e7aBf.png",alt:"result"}}),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"using-loops-in-tikz"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-loops-in-tikz"}},[t._v("#")]),t._v(" Using loops in Tikz")]),t._v(" "),s("p",[t._v("Loops are useful in Tikz.")]),t._v(" "),s("p",[t._v("The following code draws a clock without numbers:")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\documentclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("article")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\usepackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ifthen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\usepackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("intcalc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\usepackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tikz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\newcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("       \n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tikzpicture")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatletter")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\newcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("angle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\draw")]),t._v(" (0,0) circle (3cm);\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\@")]),t._v("whilenum"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("<13"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\setcounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("angle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("360"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\multiply")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("angle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" by "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\divide")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("angle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" by 12\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\ifnum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\intcalcMod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("=0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("line width=4pt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\theangle")]),t._v(":2cm) -- ("),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\theangle")]),t._v(":3cm);    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("line width=1pt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ("),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\theangle")]),t._v(":2.3cm) -- ("),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\theangle")]),t._v(":3cm);\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\fi")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\addtocounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\makeatother")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tikzpicture")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function selector"}},[t._v("\\end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("document")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("The result:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://i.stack.imgur.com/4VGfD.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://i.stack.imgur.com/4VGfD.png",alt:"clock"}}),s("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=e.exports}}]);