(window.webpackJsonp=window.webpackJsonp||[]).push([[3159],{3566:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"i18n-internationalization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i18n-internationalization"}},[t._v("#")]),t._v(" I18n - Internationalization")]),t._v(" "),a("h2",{attrs:{id:"i18n-with-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i18n-with-arguments"}},[t._v("#")]),t._v(" I18n with arguments")]),t._v(" "),a("p",[t._v("You can pass parameters to "),a("strong",[t._v("I18n")]),t._v(" "),a("code",[t._v("t")]),t._v(" method:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example config/locales/en.yml")]),t._v("\nen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{users_count} users currently online"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In models, controller, etc...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page.users'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" users_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In views")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ERB")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("%= t('page.users', users_count: 12) %>\n\n#SLIM\n=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page.users'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" users_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Shortcut in views - DRY!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use only the dot notation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Important: Consider you have the following controller and view page#users")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ERB Example app/views/page/users.html.erb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.users'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" users_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),a("p",[t._v("And get the following output:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12 users currently online"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"translating-activerecord-model-attributes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#translating-activerecord-model-attributes"}},[t._v("#")]),t._v(" Translating ActiveRecord model attributes")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("globalize")])]),t._v(" gem is a great solution to add translations to your "),a("code",[t._v("ActiveRecord")]),t._v(" models. You can install it adding this to your "),a("code",[t._v("Gemfile")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("gem "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'globalize'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~> 5.0.0'")]),t._v("\n\n")])])]),a("p",[t._v("If you're using "),a("code",[t._v("Rails 5")]),t._v(" you will also need to add "),a("code",[t._v("activemodel-serializers-xml")])]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("gem "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'activemodel-serializers-xml'")]),t._v("\n\n")])])]),a("p",[t._v("Model translations allow you to translate your models' attribute values, for example:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Post")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n  translates "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":text")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":en")]),t._v("\npost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => Globalize rocks!")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":he")]),t._v("\npost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => גלובאלייז2 שולט!")]),t._v("\n\n")])])]),a("p",[t._v("After you defined your model attributes that need to be translated you have to create a translation table, through a migration. "),a("strong",[a("code",[t._v("globalize")])]),t._v(" provides "),a("code",[t._v("create_translation_table!")]),t._v(" and "),a("code",[t._v("drop_translation_table!")]),t._v(".")]),t._v(" "),a("p",[t._v("For this migration you need to use "),a("code",[t._v("up")]),t._v(" and "),a("code",[t._v("down")]),t._v(", and "),a("strong",[t._v("not")]),t._v(" "),a("code",[t._v("change")]),t._v(". Also, in order to run this migration successfully, you have to define the translated attributes in your model first, like shown above. A proper migration for the previous "),a("code",[t._v("Post")]),t._v(" model is this:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatePostsTranslationTable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Migration")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("up")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create_translation_table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":text")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("down")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("drop_translation_table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("You may also pass options for specific options, like:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatePostsTranslationTable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Migration")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("up")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create_translation_table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Default text"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("down")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("drop_translation_table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("In case you already have any "),a("strong",[t._v("existing data")]),t._v(" in your needing translation columns, you can easily migrate it to the translations table, by adjusting your migration:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatePostsTranslationTable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Migration")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("up")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create_translation_table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":text")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      migrate_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("down")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("drop_translation_table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" migrate_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[a("strong",[a("strong",[t._v("Make sure you drop the translated columns from the parent table after all your data is safely migrated.")])]),t._v(" To automatically remove the translated columns from the parent table after the data migration, add the option "),a("code",[t._v("remove_source_columns")]),t._v(" to the migration:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreatePostsTranslationTable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Migration")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("up")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create_translation_table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":text")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      migrate_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      remove_source_columns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("down")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("drop_translation_table"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" migrate_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("You may also add new fields to a previously created translations table:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Post")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remember to add your attribute here too.")]),t._v("\n  translates "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":author")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AddAuthorToPost")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Migration")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("up")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_translation_fields"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" author"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":text")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("down")])]),t._v("\n    remove_column "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":post_translations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":author")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"pluralization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pluralization"}},[t._v("#")]),t._v(" Pluralization")]),t._v(" "),a("p",[t._v("You can let "),a("strong",[t._v("I18n")]),t._v(" handle pluralization for you, just use "),a("code",[t._v("count")]),t._v(" argument.")]),t._v(" "),a("p",[t._v("You need to set up your locale file like this:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/locales/en.yml")]),t._v("\nen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  online_users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    one"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 user is online"')]),t._v("\n    other"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{count} users are online"')]),t._v("\n\n")])])]),a("p",[t._v("And then use the key you just created by passing the "),a("code",[t._v("count")]),t._v(" argument to "),a("code",[t._v("I18n.t")]),t._v(" helper:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"online_users"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#=> "1 user is online"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"online_users"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#=> "4 users are online"')]),t._v("\n\n")])])]),a("h2",{attrs:{id:"set-locale-through-requests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-locale-through-requests"}},[t._v("#")]),t._v(" Set locale through requests")]),t._v(" "),a("p",[t._v("In most cases, you may want to set "),a("strong",[a("code",[t._v("I18n")])]),t._v(" locale. One might want to set the locale for the current session, the current user, or based on a URL parameter This is easily achievable by implementing a "),a("code",[t._v("before_action")]),t._v(" in one of your controllers, or in "),a("code",[t._v("ApplicationController")]),t._v(" to have it in all of your controllers.")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActionController")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n  before_action "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":set_locale")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_locale")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remove inappropriate/unnecessary ones")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":locale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Request parameter")]),t._v("\n      session"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":locale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Current session")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("preferred_locale "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" user_signed_in"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Model saved configuration")]),t._v("\n      extract_locale_from_accept_language_header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Language header - browser config")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default_locale               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set in your config files, english by super-default")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Extract language from request header")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("extract_locale_from_accept_language_header")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTTP_ACCEPT_LANGUAGE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      lg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTTP_ACCEPT_LANGUAGE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^[a-z]{2}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_sym\n      lg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":en")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("YOUR_AVAILABLE_LANGUAGES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" lg "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"url-based"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-based"}},[t._v("#")]),t._v(" URL-based")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("locale")]),t._v(" param could come from an URL like this")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yourapplication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("products"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("locale"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("en\n\n")])])]),a("p",[t._v("Or")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yourapplication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("en"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("products\n\n")])])]),a("p",[t._v("To achieve the latter, you need to edit your "),a("code",[t._v("routes")]),t._v(", adding a "),a("code",[t._v("scope")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/routes.rb")]),t._v("\nscope "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(:locale)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" locale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("en"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("fr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  resources "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":products")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("By doing this, visiting "),a("code",[t._v("http://yourapplication.com/en/products")]),t._v(" will set your locale to "),a("code",[t._v(":en")]),t._v(". Instead, visiting "),a("code",[t._v("http://yourapplication.com/fr/products")]),t._v(" will set it to "),a("code",[t._v(":fr")]),t._v(". Furthermore, you won't get a routing error when missing the "),a("code",[t._v(":locale")]),t._v(" param, as visiting "),a("code",[t._v("http://yourapplication.com/products")]),t._v(" will load the default "),a("strong",[t._v("I18n")]),t._v(" locale.")]),t._v(" "),a("h3",{attrs:{id:"session-based-or-persistence-based"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session-based-or-persistence-based"}},[t._v("#")]),t._v(" Session-based or persistence-based")]),t._v(" "),a("p",[t._v("This assumes the user can click on a button/language flag to change the language. The action can route to a controller that sets the session to the current language (and eventually persist the changes to a database if the user is connected)")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetLanguageController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n  skip_before_filter "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":authenticate_user!")]),t._v("\n  after_action "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":set_preferred_locale")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Generic version to handle a large list of languages")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("change_locale")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sanitize_language_param\n    set_session_and_redirect\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("blockquote"),t._v(" "),a("p",[t._v("You have to define sanitize_language_param with your list of available languages, and eventually handle errors in case the language doesn't exist.")]),t._v(" "),a("p",[t._v("If you have very few languages, it may be worth defining them like this instead:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fr")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":fr")]),t._v("\n  set_session_and_redirect\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("en")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":en")]),t._v("\n  set_session_and_redirect\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_session_and_redirect")])]),t._v("\n    session"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":locale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale\n    redirect_to "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":back")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_preferred_locale")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" user_signed_in"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n      current_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("preferred_locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_s\n      current_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" current_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("changed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("Note: don't forget to add some routes to your "),a("code",[t._v("change_language")]),t._v(" actions")])]),t._v(" "),a("h3",{attrs:{id:"default-locale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default-locale"}},[t._v("#")]),t._v(" Default Locale")]),t._v(" "),a("p",[t._v("Remember that you need to set your application default locale. You can do it by either setting it in "),a("code",[t._v("config/application.rb")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("i18n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default_locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":de")]),t._v("\n\n")])])]),a("p",[t._v("or by creating an initializer in the "),a("code",[t._v("config/initializers")]),t._v(" folder:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/initializers/locale.rb")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default_locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":it")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"get-locale-from-http-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-locale-from-http-request"}},[t._v("#")]),t._v(" Get locale from HTTP request")]),t._v(" "),a("p",[t._v("Sometimes it can be useful to set your application locale based upon the request IP. You can easily achieve this using "),a("strong",[a("code",[t._v("Geocoder")])]),t._v(". Among the many things "),a("strong",[a("code",[t._v("Geocoder")])]),t._v(" does, it can also tell the "),a("code",[t._v("location")]),t._v(" of a "),a("code",[t._v("request")]),t._v(".")]),t._v(" "),a("p",[t._v("First, add "),a("strong",[a("code",[t._v("Geocoder")])]),t._v(" to your "),a("code",[t._v("Gemfile")])]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gemfile")]),t._v("\ngem "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'geocoder'")]),t._v("\n\n")])])]),a("p",[a("strong",[a("code",[t._v("Geocoder")])]),t._v("  adds "),a("code",[t._v("location")]),t._v(" and "),a("code",[t._v("safe_location")]),t._v(" methods to the standard "),a("code",[t._v("Rack::Request")]),t._v(" object so you can easily look up the location of any HTTP request by IP address. You can use this methods in a "),a("code",[t._v("before_action")]),t._v(" in your "),a("code",[t._v("ApplicationController")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActionController")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n  before_action "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":set_locale_from_request")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_locale_from_request")])]),t._v("\n    country_code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"country_code"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#=> "US"')]),t._v("\n    country_sym "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" country_code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("underscore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_sym "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#=> :us")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If request locale is available use it, otherwise use I18n default locale")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("available_locales"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" country_sym\n      "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" country_sym\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("Beware that this will not work in "),a("code",[t._v("development")]),t._v(" and "),a("code",[t._v("test")]),t._v(" environments, as things like "),a("code",[t._v("0.0.0.0")]),t._v(" and "),a("code",[t._v("localhost")]),t._v(" are valid valid Internet IP addresses.")]),t._v(" "),a("h3",{attrs:{id:"limitations-and-alternatives"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limitations-and-alternatives"}},[t._v("#")]),t._v(" Limitations and alternatives")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("Geocoder")])]),t._v(" is very powerful and flexible, but needs to be configured to work with a "),a("strong",[t._v("geocoding service")]),t._v(" (see "),a("a",{attrs:{href:"https://github.com/alexreisner/geocoder#geocoding-service-lookup-configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("more details"),a("OutboundLink")],1),t._v("); many of which place limits on usage. It's also worth bearing in mind that calling an external service on every request could impact performance.")]),t._v(" "),a("p",[t._v("To address these, it can also be worth considering:")]),t._v(" "),a("h3",{attrs:{id:"_1-an-offline-solution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-an-offline-solution"}},[t._v("#")]),t._v(" 1. An offline solution")]),t._v(" "),a("p",[t._v("Using a gem like "),a("strong",[a("code",[t._v("GeoIP")])]),t._v(" (see "),a("a",{attrs:{href:"https://github.com/cjheath/geoip",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(") allows lookups to happen against a local datafile. There may be a trade-off in terms of accuracy, as these datafiles need to be kept up-to-date.")]),t._v(" "),a("h3",{attrs:{id:"_2-use-cloudflare"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-use-cloudflare"}},[t._v("#")]),t._v(" 2. Use CloudFlare")]),t._v(" "),a("p",[t._v("Pages served through CloudFlare have the option of being geocoded transparently, with the country code being added to the header ("),a("code",[t._v("HTTP_CF_IPCOUNTRY")]),t._v("). More detail can be found "),a("a",{attrs:{href:"https://support.cloudflare.com/hc/en-us/articles/200168236-What-does-Cloudflare-IP-Geolocation-do-",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"use-i18n-with-html-tags-and-symbols"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-i18n-with-html-tags-and-symbols"}},[t._v("#")]),t._v(" Use I18n with HTML Tags and Symbols")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/locales/en.yml")]),t._v("\nen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  stackoverflow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      title_html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Use <strong>I18n</strong> with Tags &amp; Symbols"')]),t._v("\n\n")])])]),a("p",[t._v("Note the addition of extra "),a("code",[t._v("_html")]),t._v(" after the name "),a("code",[t._v("title")]),t._v(".")]),t._v(" "),a("p",[t._v("And in Views,")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ERB")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":title_html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":stackoverflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":header")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("%></h2>")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"use-i18n-in-views"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-i18n-in-views"}},[t._v("#")]),t._v(" Use I18n in views")]),t._v(" "),a("p",[t._v("Assuming you have this YAML locale file:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/locales/en.yml")]),t._v("\nen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My header title"')]),t._v("\n\n")])])]),a("p",[t._v("and you want to display your title string, you can do this")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in ERB files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("%= t('header.title') %>\n\n# in SLIM files\n=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'header.title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("ul",[a("li",[t._v('I18n.t("key")')]),t._v(" "),a("li",[t._v('I18n.translate("key")  # equivalent to '),a("code",[t._v('I18n.t("key")')])]),t._v(" "),a("li",[t._v('I18n.t("key", count: 4)')]),t._v(" "),a("li",[t._v('I18n.t("key", param1: "Something", param2: "Else")')]),t._v(" "),a("li",[t._v('I18n.t("doesnt_exist", default: "key")  # specify a default if the key is missing')]),t._v(" "),a("li",[t._v("I18n.locale #=> :en")]),t._v(" "),a("li",[t._v("I18n.locale = :en")]),t._v(" "),a("li",[t._v("I18n.default_locale #=> :en")]),t._v(" "),a("li",[t._v("I18n.default_locale = :en")]),t._v(" "),a("li",[t._v('t(".key")  # same as '),a("code",[t._v('I18n.t("key")')]),t._v(", but scoped to the action/template it's called from")])])])}),[],!1,null,null,null);s.default=n.exports}}]);