(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{563:function(t,a,e){"use strict";e.r(a);var s=e(31),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"define-step-value-increment-for-custom-rangeseekbar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#define-step-value-increment-for-custom-rangeseekbar"}},[t._v("#")]),t._v(" Define step value (increment) for custom RangeSeekBar")]),t._v(" "),e("p",[t._v("A customization of the Android RangeSeekBar proposed by Alex Florescu at "),e("a",{attrs:{href:"https://github.com/anothem/android-range-seek-bar",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/anothem/android-range-seek-bar"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("It allows to define a step value (increment), when moving the seek bar")]),t._v(" "),e("h2",{attrs:{id:"define-a-step-value-of-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#define-a-step-value-of-7"}},[t._v("#")]),t._v(" Define a step value of 7")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RangeSeekBar")]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@+id/barPrice"')]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("layout_width"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fill_parent"')]),t._v("\n        android"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("layout_height"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrap_content"')]),t._v("\n        app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("barHeight"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.2dp"')]),t._v("\n        app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("barHeight2"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4dp"')]),t._v("\n        app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("increment"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7"')]),t._v("\n        app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("showLabels"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),e("p",[t._v("1- Add the increment attribute in attrs.xml")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("attr name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"increment"')]),t._v(" format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer|float"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),e("p",[t._v("2- Define a default value in RangeSeekBar.java and create the attribute also")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" DEFAULT_INCREMENT "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" increment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("3- Init the increment value in private void init(Context context, AttributeSet attrs)")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attrs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    increment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_INCREMENT"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n    increment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RangeSeekBar_increment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DEFAULT_INCREMENT"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),e("p",[t._v("4- Define the increment value in protected synchronized void onDraw(@NonNull Canvas canvas)")]),t._v(" "),e("p",[t._v("You'll have to replace the minText and maxText value. So instead of :")]),t._v(" "),e("ul",[e("li",[t._v("minText = valueToString(getSelectedMinValue());")]),t._v(" "),e("li",[t._v("maxText = valueToString(getSelectedMaxValue());")])]),t._v(" "),e("p",[t._v("You'll have :\nint x;")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\n       x = (int) ((getSelectedMinValue().intValue()+increment)/increment);\n        x = x*increment;\n        if (x<absoluteMaxValue.intValue()) \n            minText = ""+x;\n        else\n            minText=""+(absoluteMaxValue.intValue()-increment);\n        \n        \n        x = (int) ((getSelectedMaxValue().intValue()+increment)/increment);\n        x = x*increment;\n        maxText = ""+x;\n\n')])])]),e("p",[t._v("5 - Now you just have to use it. Hope it helps")])])}),[],!1,null,null,null);a.default=n.exports}}]);