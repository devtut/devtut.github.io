(window.webpackJsonp=window.webpackJsonp||[]).push([[3123],{3531:function(t,s,e){"use strict";e.r(s);var a=e(31),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"actioncontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#actioncontroller"}},[t._v("#")]),t._v(" ActionController")]),t._v(" "),e("p",[t._v("Action Controller is the C in MVC. After the router has determined which controller to use for a request, the controller is responsible for making sense of the request and producing the output.")]),t._v(" "),e("p",[t._v("The controller will receive the request, fetch or save data from a model and use a view to create output. A controller can be thought of as a middleman between models and views. It makes the model data available to the view so it can display to the user, and it saves or updates user data to the model.")]),t._v(" "),e("h2",{attrs:{id:"basic-rest-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic-rest-controller"}},[t._v("#")]),t._v(" Basic REST Controller")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PostsController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n  before_action "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":set_post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" only"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":show")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":edit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":update")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":destroy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@posts")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("all\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")])]),t._v("\n    \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("edit")])]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("post_params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    respond_to "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save\n        format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" redirect_to "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" notice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Post was successfully created.'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" render "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":show")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":created")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" render "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" render json"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":unprocessable_entity")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")])]),t._v("\n    respond_to "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("post_params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" redirect_to "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("company"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" notice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Post was successfully updated.'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" render "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":show")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":ok")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" render "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":edit")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" render json"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":unprocessable_entity")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroy")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("destroy\n    respond_to "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" redirect_to posts_url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" notice"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Post was successfully destroyed.'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" head "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":no_content")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_post")])]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@post")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("post_params")])]),t._v("\n      params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":post")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("permit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":title")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":body")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":author")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"output-json-instead-of-html"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-json-instead-of-html"}},[t._v("#")]),t._v(" Output JSON instead of HTML")]),t._v(" "),e("p",[t._v("In addition you will need the route:")]),t._v(" "),e("p",[t._v("This will respond in two different ways to requests on "),e("code",[t._v("/users")]),t._v(":")]),t._v(" "),e("ul",[e("li",[t._v("If you visit "),e("code",[t._v("/users")]),t._v(" or "),e("code",[t._v("/users.html")]),t._v(", it will show an html page with the content "),e("code",[t._v("Hello World")])]),t._v(" "),e("li",[t._v("If you visit "),e("code",[t._v("/users.json")]),t._v(", it will display a JSON object containing:")])]),t._v(" "),e("p",[t._v("You can "),e("strong",[t._v("omit")]),t._v(" "),e("code",[t._v('format.html { render inline: "Hello World" }')]),t._v(" if you want to make sure that your route will answer only to JSON requests.")]),t._v(" "),e("h2",{attrs:{id:"controllers-basic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#controllers-basic"}},[t._v("#")]),t._v(" Controllers (Basic)")]),t._v(" "),e("p",[t._v("This is a basic controller, with the addition of the following route (in routes.rb):")]),t._v(" "),e("p",[t._v("Will display the "),e("code",[t._v("Hello World")]),t._v(" message in a webpage when you access the URL "),e("code",[t._v("/users")])]),t._v(" "),e("h2",{attrs:{id:"parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),e("p",[t._v("Controllers have access to HTTP parameters (you might know them as "),e("code",[t._v("?name=foo")]),t._v(" in URLs, but Ruby on Rails handle different formats too!) and output different responses based on them. There isn't a way to distinguish between GET and POST parameters, but you shouldn't do that in any case.")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UsersController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")])]),t._v("\n    respond_to "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n      format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"john"')]),t._v("\n          render html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello John"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n          render html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello someone"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("p",[t._v("As usual our route:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("resources "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":users")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" only"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":index")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),e("p",[t._v("Access the URL "),e("code",[t._v("/users?name=john")]),t._v(" and the output will be "),e("code",[t._v("Hello John")]),t._v(", access "),e("code",[t._v("/users?name=whatever")]),t._v(" and the output will be "),e("code",[t._v("Hello someone")])]),t._v(" "),e("h2",{attrs:{id:"filtering-parameters-basic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtering-parameters-basic"}},[t._v("#")]),t._v(" Filtering parameters (Basic)")]),t._v(" "),e("p",[t._v("You can allow (or reject) some params so that only what you want will "),e("strong",[t._v("pass through")]),t._v(" and you won't have bad surprises like user setting options not meant to be changed.")]),t._v(" "),e("p",[t._v("Visiting "),e("code",[t._v("/users?name=john&sentence=developer")]),t._v(" will display "),e("code",[t._v("Hello john developer")]),t._v(", however visiting "),e("code",[t._v("/users?name=smith&sentence=spy")]),t._v(" will display "),e("code",[t._v("Hello smith")]),t._v(" only, because "),e("code",[t._v(":sentence")]),t._v(" is only allowed when you access as "),e("code",[t._v("john")])]),t._v(" "),e("h2",{attrs:{id:"redirecting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redirecting"}},[t._v("#")]),t._v(" Redirecting")]),t._v(" "),e("p",[t._v("Assuming the route:")]),t._v(" "),e("p",[t._v("You can redirect to a different URL using:")]),t._v(" "),e("p",[t._v("You can go back to the previous page the user visited using:")]),t._v(" "),e("p",[t._v("Note that in "),e("strong",[t._v("Rails 5")]),t._v(" the syntax for redirecting back is different:")]),t._v(" "),e("p",[t._v("Which will try to redirect to the previous page and in case not possible (the browser is blocking the HTTP_REFERRER header), it will redirect to "),e("code",[t._v(":fallback_location")])]),t._v(" "),e("h2",{attrs:{id:"using-views"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-views"}},[t._v("#")]),t._v(" Using Views")]),t._v(" "),e("p",[t._v("Assuming the route:")]),t._v(" "),e("p",[t._v("And the controller:")]),t._v(" "),e("p",[t._v("The view "),e("code",[t._v("app/users/index.html.erb")]),t._v(" will be rendered. If the view is:")]),t._v(" "),e("p",[t._v('The output will be a webpage with the text: "Hello '),e("strong",[t._v("World")]),t._v('"')]),t._v(" "),e("p",[t._v("If you want to render a different view, you can use:")]),t._v(" "),e("p",[t._v("And the file "),e("code",[t._v("app/views/pages/home.html.erb")]),t._v(" will be used instead.")]),t._v(" "),e("p",[t._v("You can pass variables to views using controller instance variables:")]),t._v(" "),e("p",[t._v("And in the file "),e("code",[t._v("app/views/users/index.html.erb")]),t._v(" you can use "),e("code",[t._v("@name")]),t._v(":")]),t._v(" "),e("p",[t._v('And the output will be: "Hello '),e("strong",[t._v("john")]),t._v('"')]),t._v(" "),e("p",[t._v("An important note around the render syntax, you can omit the "),e("code",[t._v("render")]),t._v(" syntax entirely, Rails assumes that if you omit it. So:")]),t._v(" "),e("p",[t._v("Can be written instead as:")]),t._v(" "),e("p",[t._v("Rails is smart enough to figure out that it must render the file "),e("code",[t._v("app/views/users/index.html.erb")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"display-error-pages-for-exceptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#display-error-pages-for-exceptions"}},[t._v("#")]),t._v(" Display error pages for exceptions")]),t._v(" "),e("p",[t._v('If you want to display to your users meaningful errors instead of simple "sorry, something went wrong", Rails has a nice utility for the purpose.')]),t._v(" "),e("p",[t._v("Open the file "),e("code",[t._v("app/controllers/application_controller.rb")]),t._v(" and you should find something like this:")]),t._v(" "),e("p",[t._v("We can now add a "),e("code",[t._v("rescue_from")]),t._v(" to recover from specific errors:")]),t._v(" "),e("p",[t._v("It's recommended not to rescue from "),e("code",[t._v("Exception")]),t._v(" or "),e("code",[t._v("StandardError")]),t._v(" otherwise Rails won't be able to display helpful pages in case of errors.")]),t._v(" "),e("h2",{attrs:{id:"filters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filters"}},[t._v("#")]),t._v(" Filters")]),t._v(" "),e("p",[t._v('Filters are methods that are run "before", "after" or "around" a controller action. They are inherited, so if you set any in your '),e("code",[t._v("ApplicationController")]),t._v(" they will be run for every request your application receives.")]),t._v(" "),e("p",[e("strong",[t._v("Before Filter")])]),t._v(" "),e("p",[t._v("Before filters are executed before the controller action and can halt the request (and/or redirect). A common use is to verify if a user is logged in:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActionController")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n  before_action "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":authenticate_user!")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("authenticate_user")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    redirect_to some_path "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unless")]),t._v(" user_signed_in"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("p",[t._v("Before filters are run on requests before the request gets to the controller’s action. It can return a response itself and completely bypass the action.")]),t._v(" "),e("p",[t._v("Other common uses of before filters is validating a user’s authentication before granting them access to the action designated to handle their request. I’ve also seen them used to load a resource from the database, check permissions on a resource, or manage redirects under other circumstances.")]),t._v(" "),e("p",[e("strong",[t._v("After Filter")])]),t._v(" "),e("p",[t._v('After filters are similar to "before" ones, but as they get executed after the action run they have access the response object that\'s about to be sent. So in short after filters are run after the action completes. It can modify the response. Most of the time if something is done in an after filter, it can be done in the action itself, but if there is some logic to be run after running any of a set of actions, then an after filter is a good place to do it.')]),t._v(" "),e("p",[t._v("Generally, I’ve seen after and around filters used for logging.")]),t._v(" "),e("p",[e("strong",[t._v("Around Filter")])]),t._v(" "),e("p",[t._v("Around filters may have logic before and after the action being run. It simply yields to the action in whatever place is necessary. Note that it doesn’t need to yield to the action and may run without doing so like a before filter.")]),t._v(" "),e("p",[t._v("Around filters are responsible for running their associated actions by yielding, similar to how Rack middlewares work.")]),t._v(" "),e("p",[t._v("Around callbacks wrap the execution of actions. You can write an around callback in two different styles. In the first, the callback is a single chunk of code. That code is called before the action is executed. If the callback code invokes yield, the action is executed. When the action completes, the callback code continues executing. Thus, the code before the yield is like a before action callback and the code after the yield is the after action callback. If the callback code never invokes yield. the action is not run-this is the same as having a before action callback return false.")]),t._v(" "),e("p",[t._v("Here's an example of the around filter:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("around_filter "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":catch_exceptions")]),t._v("\n \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch_exceptions")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rescue")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Exception")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" e \n      logger"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Caught exception! '),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("#{")]),t._v("e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),e("span",{pre:!0,attrs:{class:"token delimiter tag"}},[t._v("}")])]),t._v('"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("p",[t._v("This will catch exception of any action and put the message in your log. You can use around filters for exception handling, setup and teardown, and a myriad of other cases.")]),t._v(" "),e("p",[e("strong",[t._v("Only and Except")])]),t._v(" "),e("p",[t._v("All filters can be applied to specific actions, using "),e("code",[t._v(":only")]),t._v(" and "),e("code",[t._v(":except")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductsController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n  before_action "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":set_product")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" only"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":show")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":edit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":update")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... controller actions")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Define your filters as controller private methods")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_product")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@product")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Product")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("p",[e("strong",[t._v("Skipping Filter")])]),t._v(" "),e("p",[t._v("All filters (inherited ones too) can also be skipped for some specific actions:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActionController")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n  before_action "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":authenticate_user!")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("authenticate_user")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    redirect_to some_path "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unless")]),t._v(" user_signed_in"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n  skip_before_action "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":authenticate_user!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" only"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":index")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("p",[t._v("As they're inherited, filters can also be defined in a "),e("code",[t._v("namespace")]),t._v(' "parent" controller. Say for example that you have an '),e("code",[t._v("admin")]),t._v(" namespace, and you of course want only admin users to be able to access it. You could do something like this:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/routes.rb")]),t._v("\nnamespace "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":admin")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  resources "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":products")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# app/controllers/admin_controller.rb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AdminController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n  before_action "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":authenticate_admin_user!")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("authenticate_admin_user")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    redirect_to root_path "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unless")]),t._v(" current_user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# app/controllers/admin/products_controller.rb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Admin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ProductsController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AdminController")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This controller will inherit :authenticate_admin_user! filter")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("p",[t._v("Beware that in "),e("strong",[t._v("Rails 4.x")]),t._v(" you could use "),e("code",[t._v("before_filter")]),t._v(" along with "),e("code",[t._v("before_action")]),t._v(", but "),e("code",[t._v("before_filter")]),t._v(" is currently deprecated in "),e("strong",[t._v("Rails 5.0.0")]),t._v(" and will be removed in "),e("strong",[t._v("5.1")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"generating-a-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generating-a-controller"}},[t._v("#")]),t._v(" Generating a controller")]),t._v(" "),e("p",[t._v("Rails provides a lot of generators, for controllers too of course.")]),t._v(" "),e("p",[t._v("You can generate a new controller by running this command in your app folder")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("rails generate controller "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("action action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),e("p",[e("strong",[t._v("Note: You can also use "),e("code",[t._v("rails g")]),t._v(" alias to invoke "),e("code",[t._v("rails generate")])])]),t._v(" "),e("p",[t._v("For example, to generate a controller for a "),e("code",[t._v("Product")]),t._v(" model, with "),e("code",[t._v("#index")]),t._v(" and "),e("code",[t._v("#show")]),t._v(" actions you would run")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("rails generate controller products index show\n\n")])])]),e("p",[t._v("This will create the controller in "),e("code",[t._v("app/controllers/products_controller.rb")]),t._v(", with both the actions you specified")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductsController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ApplicationController")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("p",[t._v("It will also create a "),e("code",[t._v("products")]),t._v(" folder inside "),e("code",[t._v("app/views/")]),t._v(", containing the two templates for your controller's actions (i.e. "),e("code",[t._v("index.html.erb")]),t._v(" and "),e("code",[t._v("show.html.erb")]),t._v(", "),e("strong",[t._v("note that the extension may vary according to your template engine, so if you're using "),e("code",[t._v("slim")]),t._v(", for example, generator will create "),e("code",[t._v("index.html.slim")]),t._v(" and "),e("code",[t._v("show.html.slim")])]),t._v(" )")]),t._v(" "),e("p",[t._v("Furthermore, if you specified any actions they will also be added to your "),e("code",[t._v("routes")]),t._v(" file")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/routes.rb")]),t._v("\nget "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'products/show'")]),t._v("\nget "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'products/index'")]),t._v("\n\n")])])]),e("p",[t._v("Rails creates a helper file for you, in "),e("code",[t._v("app/helpers/products_helper.rb")]),t._v(", and also the assets files in "),e("code",[t._v("app/assets/javascripts/products.js")]),t._v(" and "),e("code",[t._v("app/assets/stylesheets/products.css")]),t._v(". As for views, the generator changes this behaviour according to what's specified in your "),e("code",[t._v("Gemfile")]),t._v(": i.e., if you're using "),e("code",[t._v("Coffeescript")]),t._v(" and "),e("code",[t._v("Sass")]),t._v(" in your application, the controller generator will instead generator "),e("code",[t._v("products.coffee")]),t._v(" and "),e("code",[t._v("products.sass")]),t._v(".")]),t._v(" "),e("p",[t._v("At last, but not least, Rails also generates test files for your controller, your helper and your views.")]),t._v(" "),e("p",[t._v("If you don't want any of these to be created for you can tell Rails to skip them, just prepend any option with")]),t._v(" "),e("p",[e("code",[t._v("--no-")]),t._v(" or "),e("code",[t._v("--skip")]),t._v(", like this:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("rails generate controller products index show "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("assets "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("helper\n\n")])])]),e("p",[t._v("And the generator will skip both "),e("code",[t._v("assets")]),t._v(" and "),e("code",[t._v("helper")])]),t._v(" "),e("p",[t._v("If you need to create a controller for a specific "),e("strong",[e("code",[t._v("namespace")])]),t._v(" add it in front of "),e("code",[t._v("NAME")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("rails generate controller admin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("products\n\n")])])]),e("p",[t._v("This will create your controller inside "),e("code",[t._v("app/controllers/admin/products_controller.rb")])]),t._v(" "),e("p",[t._v("Rails can also generate a complete RESTful controller for you:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("rails generate scaffold_controller "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MODEL_NAME")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# available from Rails 4")]),t._v("\nrails generate scaffold_controller "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Product")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"rescuing-activerecord-recordnotfound-with-redirect-to"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rescuing-activerecord-recordnotfound-with-redirect-to"}},[t._v("#")]),t._v(" Rescuing ActiveRecord::RecordNotFound with redirect_to")]),t._v(" "),e("p",[t._v("You can rescue a RecordNotFound exception with a redirect instead of showing an error page:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActionController")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# your other stuff")]),t._v("\n\n  rescue_from "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RecordNotFound")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("exception"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    redirect_to root_path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" alert"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"errors.record_not_found"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"_404-when-record-not-found"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_404-when-record-not-found"}},[t._v("#")]),t._v(" 404 when record not found")]),t._v(" "),e("p",[t._v("Rescue from record not found error instead of showing an exception or white page:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationController")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActionController")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... your other stuff here ")]),t._v("\n\n  rescue_from "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ActiveRecord")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RecordNotFound")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("exception"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    redirect_to root_path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" alert"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Record not found'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);