(window.webpackJsonp=window.webpackJsonp||[]).push([[2020],{2428:function(s,t,a){"use strict";a.r(t);var n=a(31),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[s._v("#")]),s._v(" Join")]),s._v(" "),a("p",[s._v("In Structured Query Language (SQL), a JOIN is a method of linking two data tables in a single query, allowing the database to return a set that contains data from both tables at once, or using data from one table to be used as a Filter on the second table. There are several types of JOINs defined within the ANSI SQL standard.")]),s._v(" "),a("h2",{attrs:{id:"inner-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inner-join"}},[s._v("#")]),s._v(" Inner Join")]),s._v(" "),a("p",[a("code",[s._v("Inner join")]),s._v(" returns only those records/rows that match/exists in both the tables based on one or more conditions (specified using "),a("code",[s._v("ON")]),s._v(" keyword). It is the most common type of join. The general syntax for "),a("code",[s._v("inner join")]),s._v(" is:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" table_2\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("column_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" table_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("column_name\n\n")])])]),a("p",[s._v("It can also be simplified as just "),a("code",[s._v("JOIN")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" table_2\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("column_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" table_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("column_name\n\n")])])]),a("p",[s._v("Example")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Sample data. */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    AnimalId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Animal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    AnimalSoundId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    AnimalId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Sound "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Dog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Elephant'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Barks'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Meows'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Trumpets'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Sample data prepared. */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal.AnimalId")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound.AnimalId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("AnimalId    Animal               AnimalSoundId AnimalId    Sound\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----------- -------------------- ------------- ----------- --------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Dog                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Barks\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Cat                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Meows\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Elephant             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Trumpets\n\n")])])]),a("p",[a("strong",[s._v("Using inner join with left outer join (Substitute for Not exists)")])]),s._v(" "),a("p",[s._v("This query will return data from table 1 where fields matching with table2 with a key and data not in Table 1 when comparing with Table2 with a condition and key")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" Table1 t1\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" Table2 t2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" Table3 t3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("column_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" column_value \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" t3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"outer-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outer-join"}},[s._v("#")]),s._v(" Outer Join")]),s._v(" "),a("p",[a("strong",[s._v("Left Outer Join")])]),s._v(" "),a("p",[a("code",[s._v("LEFT JOIN")]),s._v(" returns all rows from the left table, matched to rows from the right table where the "),a("code",[s._v("ON")]),s._v(" clause conditions are met. Rows in which the "),a("code",[s._v("ON")]),s._v(" clause is not met have "),a("code",[s._v("NULL")]),s._v(" in all of the right table's columns. The syntax of a "),a("code",[s._v("LEFT JOIN")]),s._v(" is:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" t1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" table_2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" t2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column \n\n")])])]),a("p",[a("strong",[s._v("Right Outer Join")])]),s._v(" "),a("p",[a("code",[s._v("RIGHT JOIN")]),s._v(" returns all rows from the right table, matched to rows from the left table where the "),a("code",[s._v("ON")]),s._v(" clause conditions are met. Rows in which the "),a("code",[s._v("ON")]),s._v(" clause is not met have "),a("code",[s._v("NULL")]),s._v(" in all of the left table's columns. The syntax of a "),a("code",[s._v("RIGHT JOIN")]),s._v(" is:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" t1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RIGHT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" table_2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" t2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column \n\n")])])]),a("p",[a("strong",[s._v("Full Outer Join")])]),s._v(" "),a("p",[a("code",[s._v("FULL JOIN")]),s._v(" combines "),a("code",[s._v("LEFT JOIN")]),s._v(" and "),a("code",[s._v("RIGHT JOIN")]),s._v(". All rows are returned from both tables, regardless of whether the conditions in the "),a("code",[s._v("ON")]),s._v(" clause are met. Rows that do not satisfy the "),a("code",[s._v("ON")]),s._v(" clause are returned with "),a("code",[s._v("NULL")]),s._v(" in all of the opposite table's columns (that is, for a row in the left table, all columns in the right table will contain "),a("code",[s._v("NULL")]),s._v(", and vice versa). The syntax of a "),a("code",[s._v("FULL JOIN")]),s._v(" is:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" t1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" table_2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" t2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID_Column  \n\n")])])]),a("p",[a("strong",[s._v("Examples")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Sample test data. */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    AnimalId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Animal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    AnimalSoundId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    AnimalId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Sound "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Dog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Elephant'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Frog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Barks'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Meows'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Trumpet'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Roars'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Sample data prepared. */")]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("LEFT OUTER JOIN")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" t1 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" t2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AnimalId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("p",[s._v("Results for "),a("code",[s._v("LEFT JOIN")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("AnimalId    Animal               AnimalSoundId AnimalId    Sound\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----------- -------------------- ------------- ----------- --------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Dog                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Barks\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Cat                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Meows\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Elephant             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Trumpet\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("           Frog                 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("RIGHT OUTER JOIN")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" t1 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RIGHT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" t2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AnimalId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("p",[s._v("Results for "),a("code",[s._v("RIGHT JOIN")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("AnimalId    Animal               AnimalSoundId AnimalId    Sound\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----------- -------------------- ------------- ----------- --------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Dog                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Barks\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Cat                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Meows\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Elephant             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Trumpet\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("           Roars\n\n")])])]),a("p",[a("strong",[s._v("FULL OUTER JOIN")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" t1 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" t2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AnimalId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("p",[s._v("Results for "),a("code",[s._v("FULL JOIN")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("AnimalId    Animal               AnimalSoundId AnimalId    Sound\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----------- -------------------- ------------- ----------- --------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Dog                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Barks\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Cat                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Meows\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Elephant             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Trumpet\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("           Frog                 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("           Roars\n\n")])])]),a("h2",{attrs:{id:"using-join-in-an-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-join-in-an-update"}},[s._v("#")]),s._v(" Using Join in an Update")]),s._v(" "),a("p",[s._v("Joins can also be used in an "),a("code",[s._v("UPDATE")]),s._v(" statement:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Users "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    UserId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    AccountId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    RealName nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Preferences "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    UserId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    SomeSetting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("p",[s._v("Update the "),a("code",[s._v("SomeSetting")]),s._v(" column of the "),a("code",[s._v("Preferences")]),s._v(" table filtering by a predicate on the "),a("code",[s._v("Users")]),s._v(" table as follows:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" p\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SomeSetting "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Users u\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Preferences p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UserId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UserId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AccountId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v("\n\n")])])]),a("p",[a("code",[s._v("p")]),s._v(" is an alias for "),a("code",[s._v("Preferences")]),s._v(" defined in the "),a("code",[s._v("FROM")]),s._v(" clause of the statement. Only rows with a matching "),a("code",[s._v("AccountId")]),s._v(" from the "),a("code",[s._v("Users")]),s._v(" table will be updated.")]),s._v(" "),a("p",[a("strong",[s._v("Update with left outer join statements")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Update")]),s._v(" t \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v("  t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Column1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Table1 t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Table12 t2 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID\n\n")])])]),a("p",[a("strong",[s._v("Update tables with inner join and aggregate function")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" t1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("field1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("field2Sum\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table1 t1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" field3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("field2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" field2Sum\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" table2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" field3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" t2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("field3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("field3  \n\n")])])]),a("h2",{attrs:{id:"join-on-a-subquery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join-on-a-subquery"}},[s._v("#")]),s._v(" Join on a Subquery")]),s._v(" "),a("p",[s._v("Joining on a subquery is often used when you want to get aggregate data (such as Count, Avg, Max, or Min) from a child/details table and display that along with records from the parent/header table. For example, you may want to retrieve the top/first child row based on Date or Id or maybe you want a Count of all Child Rows or an Average.")]),s._v(" "),a("p",[s._v("This example uses aliases which makes queries easier to read when you have multiple tables involved. In this case we are retrieving all rows from the parent table Purchase Orders and retrieving only the last (or most recent) child row from the child table PurchaseOrderLineItems. This example assumes the child table uses incremental numeric Id's.")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" po"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" po"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PODate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" po"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("VendorName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" po"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ItemNo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n  item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Price\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" PurchaseOrders po\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" \n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PurchaseOrderId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ItemNo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Id \n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" PurchaseOrderLineItems l\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PurchaseOrderId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ItemNo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Price\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PurchaseOrderId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" po"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Id\n\n")])])]),a("h2",{attrs:{id:"cross-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cross-join"}},[s._v("#")]),s._v(" Cross Join")]),s._v(" "),a("p",[a("code",[s._v("A cross join")]),s._v(" is a Cartesian join, meaning a Cartesian product of both the tables. This join does not need any condition to join two tables. Each row in the left table will join to each row of the right table. Syntax for a cross join:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CROSS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" table_2 \n\n")])])]),a("p",[s._v("Example:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Sample data. */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    AnimalId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Animal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    AnimalSoundId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    AnimalId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Sound "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Dog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Elephant'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Barks'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Meows'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("AnimalId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Sound"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Trumpet'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Sample data prepared. */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CROSS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("p",[s._v("Results:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("AnimalId    Animal               AnimalSoundId AnimalId    Sound\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----------- -------------------- ------------- ----------- --------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Dog                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Barks\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Cat                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Barks\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Elephant             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Barks\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Dog                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Meows\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Cat                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Meows\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Elephant             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Meows\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           Dog                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Trumpet\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           Cat                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Trumpet\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Elephant             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("           Trumpet\n\n")])])]),a("p",[s._v("Note that there are other ways that a CROSS JOIN can be applied. This is a an "),a("strong",[s._v('"old style"')]),s._v(" join (deprecated since ANSI SQL-92) with no condition, which results in a cross/Cartesian join:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("p",[s._v('This syntax also works due to an "always true" join condition, but is not recommended and should be avoided, in favor of explicit '),a("code",[s._v("CROSS JOIN")]),s._v(" syntax, for the sake of readability.")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@Animal")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@AnimalSound")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"self-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#self-join"}},[s._v("#")]),s._v(" Self Join")]),s._v(" "),a("p",[s._v("A table can be joined onto itself in what is known as a self join, combining records in the table with other records in the same table. Self joins are typically used in queries where a hierarchy in the table's columns is defined.")]),s._v(" "),a("p",[s._v("Consider the sample data in a table called "),a("code",[s._v("Employees")]),s._v(":")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("ID")]),s._v(" "),a("th",[s._v("Name")]),s._v(" "),a("th",[s._v("Boss_ID")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[s._v("Bob")]),s._v(" "),a("td",[s._v("3")])]),s._v(" "),a("tr",[a("td",[s._v("2")]),s._v(" "),a("td",[s._v("Jim")]),s._v(" "),a("td",[s._v("1")])]),s._v(" "),a("tr",[a("td",[s._v("3")]),s._v(" "),a("td",[s._v("Sam")]),s._v(" "),a("td",[s._v("2")])])])]),s._v(" "),a("p",[s._v("Each employee's "),a("code",[s._v("Boss_ID")]),s._v(" maps to another employee's "),a("code",[s._v("ID")]),s._v(". To retrieve a list of employees with their respective boss' name, the table can be joined on itself using this mapping. Note that joining a table in this manner requires the use of an alias ("),a("code",[s._v("Bosses")]),s._v(" in this case) on the second reference to the table to distinguish itself from the original table.")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" Employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Bosses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" Boss\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" Bosses \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" Employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Boss_ID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Bosses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID\n\n")])])]),a("p",[s._v("Executing this query will output the following results:")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Name")]),s._v(" "),a("th",[s._v("Boss")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("Bob")]),s._v(" "),a("td",[s._v("Sam")])]),s._v(" "),a("tr",[a("td",[s._v("Jim")]),s._v(" "),a("td",[s._v("Bob")])]),s._v(" "),a("tr",[a("td",[s._v("Sam")]),s._v(" "),a("td",[s._v("Jim")])])])]),s._v(" "),a("h2",{attrs:{id:"accidentally-turning-an-outer-join-into-an-inner-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accidentally-turning-an-outer-join-into-an-inner-join"}},[s._v("#")]),s._v(" Accidentally turning an outer join into an inner join")]),s._v(" "),a("p",[s._v("Outer joins return all the rows from one or both tables, plus matching rows.")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Table")]),s._v(" People\nPersonID FirstName\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" Alice\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" Bob\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" Eve\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Table")]),s._v(" Scores\nPersonID Subject Score\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" Math    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" Math     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" Science  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v("\n\n")])])]),a("p",[s._v("Left joining the tables:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" People a\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" Scores b\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PersonID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PersonID\n\n")])])]),a("p",[s._v("Returns:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("PersonID FirstName PersonID Subject Score\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" Alice            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" Math    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" Bob              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" Math     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("54")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" Bob              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" Science  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" Eve           "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n\n")])])]),a("p",[s._v("If you wanted to return all the people, with any applicable math scores, a common mistake is to write:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" People a\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" Scores b\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PersonID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PersonID\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" Subject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Math'")]),s._v("\n\n")])])]),a("p",[s._v("This would remove Eve from your results, in addition to removing Bob's science score, as "),a("code",[s._v("Subject")]),s._v(" is "),a("code",[s._v("NULL")]),s._v(" for her.")]),s._v(" "),a("p",[s._v("The correct syntax to remove non-Math records while retaining all individuals in the "),a("code",[s._v("People")]),s._v(" table would be:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" People a\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" Scores b\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PersonID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PersonID\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Subject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Math'")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"delete-using-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete-using-join"}},[s._v("#")]),s._v(" Delete using Join")]),s._v(" "),a("p",[s._v("Joins can also be used in a "),a("code",[s._v("DELETE")]),s._v(" statement. Given a schema as follows:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Users "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    UserId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    AccountId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    RealName nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Preferences "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    UserId "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    SomeSetting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("p",[s._v("We can delete rows from the "),a("code",[s._v("Preferences")]),s._v(" table, filtering by a predicate on the "),a("code",[s._v("Users")]),s._v(" table as follows:")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" p\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Users u\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Preferences p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UserId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UserId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AccountId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v("\n\n")])])]),a("p",[s._v("Here "),a("code",[s._v("p")]),s._v(" is an alias for "),a("code",[s._v("Preferences")]),s._v(" defined in the "),a("code",[s._v("FROM")]),s._v(" clause of the statement and we only delete rows that have a matching "),a("code",[s._v("AccountId")]),s._v(" from the "),a("code",[s._v("Users")]),s._v(" table.")])])}),[],!1,null,null,null);t.default=e.exports}}]);