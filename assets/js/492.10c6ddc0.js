(window.webpackJsonp=window.webpackJsonp||[]).push([[492],{900:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"customizing-ps1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#customizing-ps1"}},[t._v("#")]),t._v(" Customizing PS1")]),t._v(" "),a("h2",{attrs:{id:"colorize-and-customize-terminal-prompt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#colorize-and-customize-terminal-prompt"}},[t._v("#")]),t._v(" Colorize and customize terminal prompt")]),t._v(" "),a("p",[t._v("This is how the author sets their personal "),a("code",[t._v("PS1")]),t._v(" variable:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("gitPS1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gitps1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gitps1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${gitps1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":+")]),t._v(" (${gitps1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("\\* "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("}")]),t._v(')}"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gitps1")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Please use the below function if you are a mac user")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("gitPS1ForMac")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" /dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/^[^*]/d'")]),t._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/* \\(.*\\)/ (\\1)/'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("timeNow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" +%r"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$color_prompt")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$EUID")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\[\\033[1;38m\\][$(timeNow)]\\[\\033[00m\\] \\[\\033[1;31m\\]\\u\\[\\033[00m\\]\\[\\033[1;37m\\]@\\[\\033[00m\\]\\[\\033[1;33m\\]\\h\\[\\033[00m\\] \\[\\033[1;34m\\]\\w\\[\\033[00m\\]\\[\\033[1;36m\\]$(gitPS1)\\[\\033[00m\\] \\[\\033[1;31m\\]:/#\\[\\033[00m\\] '")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\[\\033[1;38m\\][$(timeNow)]\\[\\033[00m\\] \\[\\033[1;32m\\]\\u\\[\\033[00m\\]\\[\\033[1;37m\\]@\\[\\033[00m\\]\\[\\033[1;33m\\]\\h\\[\\033[00m\\] \\[\\033[1;34m\\]\\w\\[\\033[00m\\]\\[\\033[1;36m\\]$(gitPS1)\\[\\033[00m\\] \\[\\033[1;32m\\]:/$\\[\\033[00m\\] '")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[$(timeNow)] \\u@\\h \\w$(gitPS1) :/$ '")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n")])])]),a("p",[t._v("And this is how my prompt looks like:\n"),a("a",{attrs:{href:"http://i.stack.imgur.com/FmO2S.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/FmO2S.png",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Color reference:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Colors")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtblk")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0;30m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Black - Regular")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtred")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0;31m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Red")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtgrn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0;32m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Green")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtylw")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0;33m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Yellow")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtblu")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0;34m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Blue")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtpur")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0;35m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Purple")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtcyn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0;36m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cyan")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtwht")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0;37m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# White")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bldblk")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[1;30m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Black - Bold")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bldred")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[1;31m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Red")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bldgrn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[1;32m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Green")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bldylw")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[1;33m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Yellow")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bldblu")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[1;34m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Blue")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bldpur")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[1;35m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Purple")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bldcyn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[1;36m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cyan")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bldwht")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[1;37m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# White")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("unkblk")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[4;30m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Black - Underline")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("undred")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[4;31m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Red")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("undgrn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[4;32m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Green")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("undylw")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[4;33m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Yellow")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("undblu")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[4;34m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Blue")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("undpur")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[4;35m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Purple")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("undcyn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[4;36m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cyan")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("undwht")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[4;37m'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# White")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bakblk")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[40m'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Black - Background")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bakred")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[41m'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Red")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("badgrn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[42m'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Green")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bakylw")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[43m'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Yellow")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bakblu")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[44m'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Blue")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bakpur")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[45m'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Purple")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bakcyn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[46m'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cyan")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bakwht")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[47m'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# White")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("txtrst")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\e[0m'")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Text Reset")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("Notes:")])]),t._v(" "),a("li",[t._v("\nMake the changes in `~/.bashrc` or `/etc/bashrc` or `~/.bash_profile` or `~./profile` file (depending on the OS) and save it.\n")]),t._v(" "),a("li",[t._v("\nFor `root` you might also need to edit the `/etc/bash.bashrc` or `/root/.bashrc` file\n")]),t._v(" "),a("li",[t._v("\nRun `source ~/.bashrc` (distro specific) after saving the file.\n")]),t._v(" "),a("li",[t._v("\nNote: if you have saved the changes in `~/.bashrc`, then remember to add `source ~/.bashrc` in your `~/.bash_profile` so that this change in `PS1` will be recorded every time the Terminal application starts.\n")]),t._v(" "),a("h2",{attrs:{id:"show-git-branch-name-in-terminal-prompt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-git-branch-name-in-terminal-prompt"}},[t._v("#")]),t._v(" Show git branch name in terminal prompt")]),t._v(" "),a("p",[t._v("You can have functions in the PS1 variable, just make sure to single quote it or use escape for special chars:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("gitPS1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gitps1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gitps1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${gitps1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":+")]),t._v(" (${gitps1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("\\* "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("}")]),t._v(')}"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gitps1")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\u@\\h:\\w$(gitPS1)$ '")]),t._v("\n\n")])])]),a("p",[t._v("It will give you a prompt like this:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("user@Host:/path "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$\n\n")])])]),a("p",[a("strong",[t._v("Notes:")])]),t._v(" "),a("ul",[a("li",[t._v("Make the changes in "),a("code",[t._v("~/.bashrc")]),t._v(" or "),a("code",[t._v("/etc/bashrc")]),t._v(" or "),a("code",[t._v("~/.bash_profile")]),t._v(" or "),a("code",[t._v("~./profile")]),t._v(" file (depending on the OS) and save it.")]),t._v(" "),a("li",[t._v("Run "),a("code",[t._v("source ~/.bashrc")]),t._v(" (distro specific) after saving the file.")])]),t._v(" "),a("h2",{attrs:{id:"change-ps1-prompt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-ps1-prompt"}},[t._v("#")]),t._v(" Change PS1 prompt")]),t._v(" "),a("p",[t._v("To change PS1, you just have to change the value of PS1 shell variable. The value can be set in "),a("code",[t._v("~/.bashrc")]),t._v(" or "),a("code",[t._v("/etc/bashrc")]),t._v(" file, depending on the distro. PS1 can be changed to any plain text like:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello "')]),t._v("\n\n")])])]),a("p",[t._v("Besides the plain text, a number of backslash-escaped special characters are supported:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Format")]),t._v(" "),a("th",[t._v("Action")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("\\a")])]),t._v(" "),a("td",[t._v("an ASCII bell character (07)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\d")])]),t._v(" "),a("td",[t._v("the date in “Weekday Month Date” format (e.g., “Tue May 26”)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\D{format}")])]),t._v(" "),a("td",[t._v("the format is passed to strftime(3) and the result is inserted into the prompt string; an empty format results in a locale-specific time representation. The braces are required")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\e")])]),t._v(" "),a("td",[t._v("an ASCII escape character (033)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\h")])]),t._v(" "),a("td",[t._v("the hostname up to the first ‘.’")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\H")])]),t._v(" "),a("td",[t._v("the hostname")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\j")])]),t._v(" "),a("td",[t._v("the number of jobs currently managed by the shell")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\l")])]),t._v(" "),a("td",[t._v("the basename of the shell’s terminal device name")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\n")])]),t._v(" "),a("td",[t._v("newline")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\r")])]),t._v(" "),a("td",[t._v("carriage return")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\s")])]),t._v(" "),a("td",[t._v("the name of the shell, the basename of $0 (the portion following the final slash)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\t")])]),t._v(" "),a("td",[t._v("the current time in 24-hour HH:MM:SS format")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\T")])]),t._v(" "),a("td",[t._v("the current time in 12-hour HH:MM:SS format")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\@")])]),t._v(" "),a("td",[t._v("the current time in 12-hour am/pm format")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\A")])]),t._v(" "),a("td",[t._v("the current time in 24-hour HH:MM format")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\u")])]),t._v(" "),a("td",[t._v("the username of the current user")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\v")])]),t._v(" "),a("td",[t._v("the version of bash (e.g., 2.00)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\V")])]),t._v(" "),a("td",[t._v("the release of bash, version + patch level (e.g., 2.00.0)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\w")])]),t._v(" "),a("td",[t._v("the current working directory, with $HOME abbreviated with a tilde")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\W")])]),t._v(" "),a("td",[t._v("the basename of the current working directory, with $HOME abbreviated with a tilde")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\!")])]),t._v(" "),a("td",[t._v("the history number of this command")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\#")])]),t._v(" "),a("td",[t._v("the command number of this command")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\$")])]),t._v(" "),a("td",[t._v("if the effective UID is 0, a #, otherwise a $")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\nnn*")])]),t._v(" "),a("td",[t._v("the character corresponding to the octal number nnn")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\")])]),t._v(" "),a("td",[t._v("a backslash")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\[")])]),t._v(" "),a("td",[t._v("begin a sequence of non-printing characters, which could be used to embed a terminal control sequence into the prompt")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\]")])]),t._v(" "),a("td",[t._v("end a sequence of non-printing characters")])])])]),t._v(" "),a("p",[t._v("So for example, we can set PS1 to:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\u@\\h:\\w\\$ "')]),t._v("\n\n")])])]),a("p",[t._v("And it will output:")]),t._v(" "),a("blockquote",[a("p",[t._v("user@machine:~$")])]),t._v(" "),a("h2",{attrs:{id:"show-a-git-branch-using-prompt-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-a-git-branch-using-prompt-command"}},[t._v("#")]),t._v(" Show a git branch using PROMPT_COMMAND")]),t._v(" "),a("p",[t._v("If you are inside a folder of a git repository it might be nice to show the current branch you are on. In "),a("code",[t._v("~/.bashrc")]),t._v(" or "),a("code",[t._v("/etc/bashrc")]),t._v(" add the following (git is required for this to work):")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("prompt_command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check if we are inside a git repository")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Only get the name of the branch")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GIT_STATUS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'On branch'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cut")]),t._v(" -b "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GIT_STATUS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This function gets called every time PS1 is shown")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PROMPT_COMMAND")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("prompt_command\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GIT_STATUS")]),t._v(' \\u@\\h:\\w\\$ "')]),t._v("\n\n")])])]),a("p",[t._v("If we are in a folder inside a git repository this will output:")]),t._v(" "),a("blockquote",[a("p",[t._v("branch user@machine:~$")])]),t._v(" "),a("p",[t._v("And if we are inside a normal folder:")]),t._v(" "),a("blockquote",[a("p",[t._v("user@machine:~$")])]),t._v(" "),a("h2",{attrs:{id:"show-time-in-terminal-prompt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-time-in-terminal-prompt"}},[t._v("#")]),t._v(" Show time in terminal prompt")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("timeNow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" +%r"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[$(timeNow)] \\u@\\h:\\w$ '")]),t._v("\n\n")])])]),a("p",[t._v("It will give you a prompt like this:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("05:34:37 PM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" user@Host:/path$\n\n")])])]),a("p",[a("strong",[t._v("Notes:")])]),t._v(" "),a("ul",[a("li",[t._v("Make the changes in "),a("code",[t._v("~/.bashrc")]),t._v(" or "),a("code",[t._v("/etc/bashrc")]),t._v(" or "),a("code",[t._v("~/.bash_profile")]),t._v(" or "),a("code",[t._v("~./profile")]),t._v(" file (depending on the OS) and save it.")]),t._v(" "),a("li",[t._v("Run "),a("code",[t._v("source ~/.bashrc")]),t._v(" (distro specific) after saving the file.")])]),t._v(" "),a("h2",{attrs:{id:"show-previous-command-return-status-and-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-previous-command-return-status-and-time"}},[t._v("#")]),t._v(" Show previous command return status and time")]),t._v(" "),a("p",[t._v("Sometimes we need a visual hint to indicate the return status of previous command. The following snippet make put it at the head of the PS1.")]),t._v(" "),a("p",[t._v("Note that the __stat() function should be called every time a new PS1 is generated, or else it would stick to the return status of last command of your .bashrc or .bash_profile.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -ANSI-COLOR-CODES- #")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Color_Off")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v('[0m"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###-Regular-###")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Red")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v('[0;31m"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Green")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v('[0;32m"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Yellow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[t._v("\\033")]),t._v('[0;33m"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("####-Bold-####")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("__stat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -en "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Green")]),t._v(" ✔ "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Color_Off")]),t._v(' "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -en "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Red")]),t._v(" ✘ "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Color_Off")]),t._v(' "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$(__stat)'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[t._v("\\t")]),t._v('] "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[t._v("\\e")]),t._v("[0;33m\\u@\\h"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[t._v("\\e")]),t._v("[0m:"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[t._v("\\e")]),t._v("[1;34m\\w"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\e"}},[t._v("\\e")]),t._v("[0m "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('$ "')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PS1")]),t._v("\n\n")])])]),a("p",[a("a",{attrs:{href:"http://i.stack.imgur.com/ZjEQ5.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/ZjEQ5.png",alt:"enter image description here"}}),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);