(window.webpackJsonp=window.webpackJsonp||[]).push([[322],{730:function(t,e,n){"use strict";n.r(e);var a=n(31),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"touch-events"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#touch-events"}},[t._v("#")]),t._v(" Touch Events")]),t._v(" "),n("h2",{attrs:{id:"how-to-vary-between-child-and-parent-view-group-touch-events"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-to-vary-between-child-and-parent-view-group-touch-events"}},[t._v("#")]),t._v(" How to vary between child and parent view group touch events")]),t._v(" "),n("ol",[n("li",[t._v("The "),n("code",[t._v("onTouchEvents()")]),t._v(" for nested view groups can be managed by the "),n("code",[t._v("boolean")]),t._v(" "),n("a",{attrs:{href:"http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)",target:"_blank",rel:"noopener noreferrer"}},[t._v("onInterceptTouchEvent"),n("OutboundLink")],1),t._v(".")])]),t._v(" "),n("p",[t._v("The default value for the "),n("code",[t._v("OnInterceptTouchEvent")]),t._v(" is false.")]),t._v(" "),n("p",[t._v("The parent's "),n("code",[t._v("onTouchEvent")]),t._v(" is received before the child's. If the "),n("code",[t._v("OnInterceptTouchEvent")]),t._v(" returns false, it sends the motion event down the chain to the child's "),n("code",[t._v("OnTouchEvent")]),t._v(" handler. If it returns true the parent's will handle the touch event.")]),t._v(" "),n("p",[t._v("However there may be instances when we want some child elements to manage "),n("code",[t._v("OnTouchEvent")]),t._v("s and some to be managed by the parent view (or possibly the parent of the parent).")]),t._v(" "),n("p",[t._v("This can be managed in more than one way.")]),t._v(" "),n("ol",[n("li",[t._v("One way a child element can be protected from the parent's "),n("code",[t._v("OnInterceptTouchEvent")]),t._v(" is by implementing the "),n("a",{attrs:{href:"http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)",target:"_blank",rel:"noopener noreferrer"}},[t._v("requestDisallowInterceptTouchEvent"),n("OutboundLink")],1),t._v(".")])]),t._v(" "),n("blockquote"),t._v(" "),n("p",[t._v("public void requestDisallowInterceptTouchEvent (boolean\ndisallowIntercept)")]),t._v(" "),n("p",[t._v("This prevents any of the parent views from managing the "),n("code",[t._v("OnTouchEvent")]),t._v(" for this element, if the element has event handlers enabled.")]),t._v(" "),n("ol",[n("li")]),t._v(" "),n("p",[t._v("If the "),n("code",[t._v("OnInterceptTouchEvent")]),t._v(" is false, the child element's "),n("code",[t._v("OnTouchEvent")]),t._v(" will be evaluated. If you have a methods within the child elements handling the various touch events, any related event handlers that are disabled will return the OnTouchEvent to the parent.")]),t._v(" "),n("p",[t._v("This answer:"),n("br"),t._v("\nA visualisation of how the propagation of touch events passes through:"),n("br"),t._v(" "),n("code",[t._v("parent -> child|parent -> child|parent -> child views.")])]),t._v(" "),n("p",[n("a",{attrs:{href:"http://i.stack.imgur.com/unTyh.png",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"http://i.stack.imgur.com/unTyh.png",alt:"enter image description here"}}),n("OutboundLink")],1),n("sub",[n("a",{attrs:{href:"http://stackoverflow.com/a/13540006/3956566",target:"_blank",rel:"noopener noreferrer"}},[t._v("Courtesy from here"),n("OutboundLink")],1)])]),t._v(" "),n("ol",[n("li",[t._v("Another way is returning varying values from the "),n("code",[t._v("OnInterceptTouchEvent")]),t._v(" for the parent.")])]),t._v(" "),n("p",[t._v("This example taken from "),n("a",{attrs:{href:"http://developer.android.com/training/gestures/viewgroup.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Managing Touch Events in a ViewGroup"),n("OutboundLink")],1),t._v("  and demonstrates how to intercept the child's "),n("code",[t._v("OnTouchEvent")]),t._v(" when the user is scrolling.")]),t._v(" "),n("p",[t._v("4a.")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onInterceptTouchEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MotionEvent")]),t._v(" ev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n     * This method JUST determines whether we want to intercept the motion.\n     * If we return true, onTouchEvent will be called and we do the actual\n     * scrolling there.\n     */")]),t._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MotionEventCompat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getActionMasked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Always handle the case of the touch gesture being complete.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MotionEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ACTION_CANCEL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MotionEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ACTION_UP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Release the scroll.")]),t._v("\n        mIsScrolling "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not intercept touch event, let the child handle it")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MotionEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ACTION_MOVE"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mIsScrolling"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We're currently scrolling, so yes, intercept the ")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// touch event!")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the user has dragged her finger horizontally more than ")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the touch slop, start the scroll")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// left as an exercise for the reader")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" xDiff "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("calculateDistanceX")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Touch slop should be calculated using ViewConfiguration ")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// constants.")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xDiff "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mTouchSlop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Start scrolling!")]),t._v("\n                mIsScrolling "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In general, we don't want to intercept touch events. They should be ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handled by the child view.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("This is some code from the same link showing how to create the parameters of the rectangle around your element:")]),t._v(" "),n("p",[t._v("4b.")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The hit rectangle for the ImageButton")]),t._v("\nmyButton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHitRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delegateArea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Extend the touch area of the ImageButton beyond its bounds")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// on the right and bottom.")]),t._v("\ndelegateArea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndelegateArea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bottom "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Instantiate a TouchDelegate.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "delegateArea" is the bounds in local coordinates of ')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the containing view to be mapped to the delegate view.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "myButton" is the child view that should receive motion')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// events.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TouchDelegate")]),t._v(" touchDelegate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TouchDelegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delegateArea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" myButton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Sets the TouchDelegate on the parent view, such that touches ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// within the touch delegate bounds are routed to the child.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("View")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myButton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("View")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" myButton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTouchDelegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("touchDelegate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);