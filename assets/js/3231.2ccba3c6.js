(window.webpackJsonp=window.webpackJsonp||[]).push([[3231],{3639:function(s,a,t){"use strict";t.r(a);var e=t(31),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"spring-expression-language-spel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-expression-language-spel"}},[s._v("#")]),s._v(" Spring Expression Language (SpEL)")]),s._v(" "),t("h2",{attrs:{id:"syntax-reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#syntax-reference"}},[s._v("#")]),s._v(" Syntax Reference")]),s._v(" "),t("p",[s._v("You can use "),t("code",[s._v('@Value("#{expression}")')]),s._v(" to inject value at runtime, in which the "),t("code",[s._v("expression")]),s._v(" is a SpEL expression.")]),s._v(" "),t("h3",{attrs:{id:"literal-expressions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#literal-expressions"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Literal expressions")])]),s._v(" "),t("p",[s._v("Supported types include strings, dates, numeric values (int, real, and hex), boolean and null.")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"#{'Hello World'}\"")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//strings")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#{3.1415926}"')]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//numeric values (double)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#{true}"')]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//boolean")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#{null}"')]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//null")]),s._v("\n\n")])])]),t("h3",{attrs:{id:"inline-list"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inline-list"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Inline list")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#{1,2,3,4}"')]),s._v("              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//list of number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"#{{'a','b'},{'x','y'}}\"")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//list of list")]),s._v("\n\n")])])]),t("h3",{attrs:{id:"inline-maps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inline-maps"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Inline Maps")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"#{name:'Nikola',dob:'10-July-1856'}\"")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"#{name:{first:'Nikola',last:'Tesla'},dob:{day:10,month:'July',year:1856}}\"")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//map of maps")]),s._v("\n\n")])])]),t("h3",{attrs:{id:"invoking-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#invoking-methods"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Invoking Methods")])]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"#{'abc'.length()}\"")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//evaluates to 3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"#{f('hello')}\"")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//f is a method in the class to which this expression belongs, it has a string parameter")]),s._v("\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);