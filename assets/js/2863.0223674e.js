(window.webpackJsonp=window.webpackJsonp||[]).push([[2863],{3271:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"cleaning-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cleaning-data"}},[t._v("#")]),t._v(" Cleaning data")]),t._v(" "),s("h2",{attrs:{id:"removing-missing-data-from-a-vector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#removing-missing-data-from-a-vector"}},[t._v("#")]),t._v(" Removing missing data from a vector")]),t._v(" "),s("p",[t._v("First lets create a vector called Vector1:")]),t._v(" "),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("set.seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nVector1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" rnorm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("And add missing data to it:")]),t._v(" "),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("set.seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nVector1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vector1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NA")]),t._v("\n\n")])])]),s("p",[t._v("Now we can use the is.na function to subset the Vector")]),t._v(" "),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("Vector1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" Vector1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("is.na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vector1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("p",[t._v("Now the resulting vector will have removed the NAs of the original Vector1")]),t._v(" "),s("h2",{attrs:{id:"removing-incomplete-rows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#removing-incomplete-rows"}},[t._v("#")]),t._v(" Removing incomplete rows")]),t._v(" "),s("p",[t._v("There might be times where you have a data frame and you want to remove all the rows that might contain an NA value, for that the function "),s("strong",[t._v("complete.cases")]),t._v(" is the best option.")]),t._v(" "),s("p",[t._v("We will use the first 6 rows of the "),s("strong",[t._v("airquality")]),t._v(" dataset to make an example since it already has NAs")]),t._v(" "),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("airquality"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("This has two rows with NAs in the Solar.R column, to remove them we do the following")]),t._v(" "),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("x_no_NA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("complete.cases"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("p",[t._v("The resulting dataframe "),s("strong",[t._v("x_no_NA")]),t._v(" will only have complete rows without NAs")])])}),[],!1,null,null,null);a.default=n.exports}}]);