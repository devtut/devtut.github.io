(window.webpackJsonp=window.webpackJsonp||[]).push([[2598],{3006:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"infrastructure-automation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#infrastructure-automation"}},[t._v("#")]),t._v(" Infrastructure Automation")]),t._v(" "),a("p",[t._v("Automating Infrastructure Management Services results in reducing the FTE as well as cumulatively getting better ROI using multiple tools, orchestrators, orchestration Engine , scripts and easy UI")]),t._v(" "),a("h2",{attrs:{id:"simple-script-for-black-box-integration-test-of-console-applications"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-script-for-black-box-integration-test-of-console-applications"}},[t._v("#")]),t._v(" Simple script for black-box integration test of console applications")]),t._v(" "),a("p",[t._v("This is a simple example on how you can automate tests for a console application that interact with standard input and standard output.")]),t._v(" "),a("p",[t._v('The tested application read and sum every new line and will provide the result after a single white line is provided. The power shell script write "pass" when the output match.')]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" System"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Diagnostics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Process")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StartInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FileName = "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".\\ConsoleApp1.exe"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StartInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UseShellExecute = "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StartInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RedirectStandardOutput = "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StartInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RedirectStandardInput = "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# input")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StandardInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StandardInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StandardInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StandardInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StandardInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# output check")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$output")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StandardOutput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReadToEnd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$output")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Contains"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sum 6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pass"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write-Error")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$output")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WaitForExit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);