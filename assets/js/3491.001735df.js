(window.webpackJsonp=window.webpackJsonp||[]).push([[3491],{3899:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"task-based-asynchronous-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task-based-asynchronous-pattern"}},[t._v("#")]),t._v(" Task-based asynchronous pattern")]),t._v(" "),a("h2",{attrs:{id:"basic-usage-of-async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-usage-of-async-await"}},[t._v("#")]),t._v(" Basic usage of Async/Await")]),t._v(" "),a("p",[t._v("You can start some slow process in parallel and then collect the results when they are done:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" results "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WhenAll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SlowCalculation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AnotherSlowCalculation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Result\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" results\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\nAsync "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" SlowCalculation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     Await Task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\n\nAsync "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" AnotherSlowCalculation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Await Task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\n\n")])])]),a("p",[t._v("After two seconds both the results will be available.")]),t._v(" "),a("h2",{attrs:{id:"using-tap-with-linq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-tap-with-linq"}},[t._v("#")]),t._v(" Using TAP with LINQ")]),t._v(" "),a("p",[t._v("You can create an "),a("code",[t._v("IEnumerable")]),t._v(" of "),a("code",[t._v("Task")]),t._v(" by passing "),a("code",[t._v("AddressOf AsyncMethod")]),t._v(" to the "),a("strong",[t._v("LINQ")]),t._v(" "),a("code",[t._v("Select")]),t._v(" method and then start and wait all the results with "),a("code",[t._v("Task.WhenAll")])]),t._v(" "),a("p",[t._v("If your method has parameters matching the previous "),a("strong",[t._v("LINQ")]),t._v(" chain call, they will be automatically mapped.")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" tasks "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Enumerable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Range"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Select")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AddressOf")]),t._v(" TurnSlowlyIntegerIntoString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" resultingStrings "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WhenAll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tasks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Result\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Each")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("In")]),t._v(" resultingStrings\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Next")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Sub")]),t._v("\n\nAsync "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v(" TurnSlowlyIntegerIntoString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" Task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Await Task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Return")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("End")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),t._v("\n\n")])])]),a("p",[t._v("To map different arguments you can replace "),a("code",[t._v("AddressOf Method")]),t._v(" with a lambda:")]),t._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("linqData "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" MyNonMatchingMethod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("linqData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Other parameter"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);