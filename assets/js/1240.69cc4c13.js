(window.webpackJsonp=window.webpackJsonp||[]).push([[1240],{1648:function(t,e,s){"use strict";s.r(e);var a=s(31),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"web-development"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-development"}},[t._v("#")]),t._v(" Web Development")]),t._v(" "),s("h2",{attrs:{id:"servant"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servant"}},[t._v("#")]),t._v(" Servant")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://haskell-servant.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Servant"),s("OutboundLink")],1),t._v(" is a library for declaring APIs at the type-level and then:")]),t._v(" "),s("blockquote"),t._v(" "),s("ul",[t._v("\n- write servers (this part of servant can be considered a web framework),\n- obtain client functions (in haskell),\n- generate client functions for other programming languages,\n- generate documentation for your web applications\n- and more...\n")]),t._v(" "),s("p",[t._v("Servant has a concise yet powerful API. A simple API can be written in very few lines of code:")]),t._v(" "),s("div",{staticClass:"language-hs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("{-# LANGUAGE DataKinds #-}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("{-# LANGUAGE TypeOperators #-}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token import-statement"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token import-statement"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Aeson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Types")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token import-statement"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" GHC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Generics")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token import-statement"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Servant"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("API")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SortBy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Age")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Name")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("age")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deriving")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Eq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Show")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Generic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instance")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ToJSON")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("User")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- automatically convert User to JSON")]),t._v("\n\n")])])]),s("p",[t._v("Now we can declare our API:")]),t._v(" "),s("div",{staticClass:"language-hs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UserAPI")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"users"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("QueryParam")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sortby"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SortBy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Get")]),t._v(" '"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("p",[t._v("which states that we wish to expose "),s("code",[t._v("/users")]),t._v(" to "),s("code",[t._v("GET")]),t._v(" requests with a query param "),s("code",[t._v("sortby")]),t._v(" of type "),s("code",[t._v("SortBy")]),t._v(" and return JSON of type "),s("code",[t._v("User")]),t._v(" in the response.")]),t._v(" "),s("p",[t._v("Now we can define our handler:")]),t._v(" "),s("div",{staticClass:"language-hs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- This is where we'd return our user data, or e.g. do a database lookup")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UserAPI")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alex"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("userAPI")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Proxy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UserAPI")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("userAPI")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Proxy")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("app1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Application")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("app1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("serve")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("userAPI")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("server")]),t._v("\n\n")])])]),s("p",[t._v("And the main method which listens on port "),s("code",[t._v("8081")]),t._v(" and serves our user API:")]),t._v(" "),s("div",{staticClass:"language-hs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("run")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[t._v("app1")]),t._v("\n\n")])])]),s("p",[t._v("Note, "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/haskell/2970/stack#t=201607301149344784488",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stack"),s("OutboundLink")],1),t._v(" has a template for generating basic APIs in Servant, which is useful for getting up and running very quick.")]),t._v(" "),s("h2",{attrs:{id:"yesod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yesod"}},[t._v("#")]),t._v(" Yesod")]),t._v(" "),s("p",[t._v("Yesod project can be created with "),s("code",[t._v("stack new")]),t._v(" using following templates:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("yesod-minimal")]),t._v(". Simplest Yesod scaffold possible.")]),t._v(" "),s("li",[s("code",[t._v("yesod-mongo")]),t._v(". Uses MongoDB as DB engine.")]),t._v(" "),s("li",[s("code",[t._v("yesod-mysql")]),t._v(". Uses MySQL as DB engine.")]),t._v(" "),s("li",[s("code",[t._v("yesod-postgres")]),t._v(". Uses PostgreSQL as DB engine.")]),t._v(" "),s("li",[s("code",[t._v("yesod-postgres-fay")]),t._v(". Uses PostgreSQL as DB engine. Uses Fay language for front-end.")]),t._v(" "),s("li",[s("code",[t._v("yesod-simple")]),t._v(". Recommended template to use, if you don't need database.")]),t._v(" "),s("li",[s("code",[t._v("yesod-sqlite")]),t._v(". Uses SQlite as DB engine.")])]),t._v(" "),s("p",[s("code",[t._v("yesod-bin")]),t._v(" package provides "),s("code",[t._v("yesod")]),t._v(" executable, which can be used to run development server. Note that you also can run your application directly, so "),s("code",[t._v("yesod")]),t._v(" tool is optional.")]),t._v(" "),s("p",[s("code",[t._v("Application.hs")]),t._v(" contains code that dispatches requests between handlers. It also sets up database and logging settings, if you used them.")]),t._v(" "),s("p",[s("code",[t._v("Foundation.hs")]),t._v(" defines "),s("code",[t._v("App")]),t._v(" type, that can be seen as an environment for all handlers. Being in "),s("code",[t._v("HandlerT")]),t._v(" monad, you can get this value using "),s("code",[t._v("getYesod")]),t._v(" function.")]),t._v(" "),s("p",[s("code",[t._v("Import.hs")]),t._v(" is a module that just re-exports commonly used stuff.")]),t._v(" "),s("p",[s("code",[t._v("Model.hs")]),t._v(" contains Template Haskell that generates code and data types used for DB interaction. Present only if you are using DB.")]),t._v(" "),s("p",[s("code",[t._v("config/models")]),t._v(" is where you define your DB schema. Used by "),s("code",[t._v("Model.hs")]),t._v(".")]),t._v(" "),s("p",[s("code",[t._v("config/routes")]),t._v(" defines URI's of the Web application. For each HTTP method of the route, you'd need to create a handler named "),s("code",[t._v("{method}{RouteR}")]),t._v(".")]),t._v(" "),s("p",[s("code",[t._v("static/")]),t._v(" directory contains site's static resources. These get compiled into binary by "),s("code",[t._v("Settings/StaticFiles.hs")]),t._v(" module.")]),t._v(" "),s("p",[s("code",[t._v("templates/")]),t._v(" directory contains "),s("a",{attrs:{href:"https://hackage.haskell.org/package/shakespeare",target:"_blank",rel:"noopener noreferrer"}},[t._v("Shakespeare"),s("OutboundLink")],1),t._v(" templates that are used when serving requests.")]),t._v(" "),s("p",[t._v("Finally, "),s("code",[t._v("Handler/")]),t._v(" directory contains modules that define handlers for routes.")]),t._v(" "),s("p",[t._v("Each handler is a "),s("code",[t._v("HandlerT")]),t._v(" monad action based on IO. You can inspect request parameters, its body and other information, make queries to the DB with "),s("code",[t._v("runDB")]),t._v(", perform arbitrary IO and return various types of content to the user. To serve HTML, "),s("code",[t._v("defaultLayout")]),t._v(" function is used that allows neat composition of shakespearian templates.")])])}),[],!1,null,null,null);e.default=n.exports}}]);