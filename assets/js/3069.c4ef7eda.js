(window.webpackJsonp=window.webpackJsonp||[]).push([[3069],{3477:function(t,e,a){"use strict";a.r(e);var s=a(31),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"enumerators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enumerators"}},[t._v("#")]),t._v(" Enumerators")]),t._v(" "),a("p",[t._v("An "),a("a",{attrs:{href:"http://ruby-doc.org/core/Enumerator.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Enumerator")]),a("OutboundLink")],1),t._v(" is an object that implements iteration in a controlled fashion.")]),t._v(" "),a("p",[t._v("Instead of looping until some condition is satisfied, the object "),a("strong",[t._v("enumerates")]),t._v(" values as needed. Execution of the loop is paused until the next value is requested by the owner of the object.")]),t._v(" "),a("p",[t._v("Enumerators make infinite streams of values possible.")]),t._v(" "),a("h2",{attrs:{id:"custom-enumerators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-enumerators"}},[t._v("#")]),t._v(" Custom enumerators")]),t._v(" "),a("p",[t._v("Let's create an "),a("a",{attrs:{href:"http://ruby-doc.org/core/Enumerator.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Enumerator")]),a("OutboundLink")],1),t._v(" for "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Fibonacci_number",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fibonacci numbers"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("fibonacci "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Enumerator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("yielder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  loop "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    yielder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" a\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("We can now use any "),a("a",{attrs:{href:"http://ruby-doc.org/core/Enumerable.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Enumerable")]),a("OutboundLink")],1),t._v(" method with "),a("code",[t._v("fibonacci")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("fibonacci"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("take "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"existing-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#existing-methods"}},[t._v("#")]),t._v(" Existing methods")]),t._v(" "),a("p",[t._v("If an iteration method such as "),a("code",[t._v("each")]),t._v(" is called without a block, an "),a("a",{attrs:{href:"http://ruby-doc.org/core/Enumerator.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Enumerator")]),a("OutboundLink")],1),t._v(" should be returned.")]),t._v(" "),a("p",[t._v("This can be done using the "),a("a",{attrs:{href:"http://ruby-doc.org/core/Object.html#method-i-enum_for",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("enum_for")]),a("OutboundLink")],1),t._v(" method:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" enum_for "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":each")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unless")]),t._v(" block_given"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":x")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":y")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":z")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),a("p",[t._v("This enables the programmer to compose "),a("a",{attrs:{href:"http://ruby-doc.org/core/Enumerable.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Enumerable")]),a("OutboundLink")],1),t._v(" operations:")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("each")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("drop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":upcase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => :Z")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"rewinding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rewinding"}},[t._v("#")]),t._v(" Rewinding")]),t._v(" "),a("p",[t._v("Use "),a("a",{attrs:{href:"http://ruby-doc.org/core-2.3.1/Enumerator.html#method-i-rewind",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("rewind")]),a("OutboundLink")],1),t._v(" to restart the enumerator.")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("ℕ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Enumerator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("yielder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  loop "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    yielder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" x\n    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\nℕ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => 0")]),t._v("\n\nℕ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => 1")]),t._v("\n\nℕ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => 2")]),t._v("\n\nℕ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rewind\n\nℕ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("next")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => 0")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Details")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("yield")])]),t._v(" "),a("td",[t._v("Responds to "),a("code",[t._v("yield")]),t._v(", which is aliased as "),a("code",[t._v("<<")]),t._v(". Yielding to this object implements iteration.")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);