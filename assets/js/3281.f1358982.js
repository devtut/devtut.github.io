(window.webpackJsonp=window.webpackJsonp||[]).push([[3281],{3689:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[t._v("#")]),t._v(" NULL")]),t._v(" "),a("p",[a("code",[t._v("NULL")]),t._v(' in SQL, as well as programming in general, means literally "nothing". In SQL, it is easier to understand as "the absence of any value".')]),t._v(" "),a("p",[t._v("It is important to distinguish it from seemingly empty values, such as the empty string "),a("code",[t._v("''")]),t._v(" or the number "),a("code",[t._v("0")]),t._v(", neither of which are actually "),a("code",[t._v("NULL")]),t._v(".")]),t._v(" "),a("p",[t._v("It is also important to be careful not to enclose "),a("code",[t._v("NULL")]),t._v(" in quotes, like "),a("code",[t._v("'NULL'")]),t._v(", which is allowed in columns that accept text, but is not "),a("code",[t._v("NULL")]),t._v(" and can cause errors and incorrect data sets.")]),t._v(" "),a("h2",{attrs:{id:"filtering-for-null-in-queries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filtering-for-null-in-queries"}},[t._v("#")]),t._v(" Filtering for NULL in queries")]),t._v(" "),a("p",[t._v("The syntax for filtering for "),a("code",[t._v("NULL")]),t._v(" (i.e. the absence of a value) in "),a("code",[t._v("WHERE")]),t._v(" blocks is slightly different than filtering for specific values.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ManagerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ManagerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("Note that because "),a("code",[t._v("NULL")]),t._v(" is not equal to anything, not even to itself, using equality operators "),a("code",[t._v("= NULL")]),t._v(" or "),a("code",[t._v("<> NULL")]),t._v(" (or "),a("code",[t._v("!= NULL")]),t._v(") will always yield the truth value of "),a("code",[t._v("UNKNOWN")]),t._v(" which will be rejected by "),a("code",[t._v("WHERE")]),t._v(".")]),t._v(" "),a("p",[a("code",[t._v("WHERE")]),t._v(" filters all rows that the condition is "),a("code",[t._v("FALSE")]),t._v(" or "),a("code",[t._v("UKNOWN")]),t._v(" and keeps only rows that the condition is "),a("code",[t._v("TRUE")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"nullable-columns-in-tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nullable-columns-in-tables"}},[t._v("#")]),t._v(" Nullable columns in tables")]),t._v(" "),a("p",[t._v("When creating tables it is possible to declare a column as nullable or non-nullable.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" MyTable\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    MyCol1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- non-nullable")]),t._v("\n    MyCol2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- nullable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("By default every column (except those in primary key constraint) is nullable unless we explicitly set "),a("code",[t._v("NOT NULL")]),t._v(" constraint.")]),t._v(" "),a("p",[t._v("Attempting to assign "),a("code",[t._v("NULL")]),t._v(" to a non-nullable column will result in an error.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" MyTable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyCol1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyCol2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- works fine")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" MyTable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyCol1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyCol2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- cannot insert")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- the value NULL into column 'MyCol1', table 'MyTable'; ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- column does not allow nulls. INSERT fails.")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"updating-fields-to-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-fields-to-null"}},[t._v("#")]),t._v(" Updating fields to NULL")]),t._v(" "),a("p",[t._v("Setting a field to "),a("code",[t._v("NULL")]),t._v(" works exactly like with any other value:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" Employees \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ManagerId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"inserting-rows-with-null-fields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inserting-rows-with-null-fields"}},[t._v("#")]),t._v(" Inserting rows with NULL fields")]),t._v(" "),a("p",[t._v("For example inserting an employee with no phone number and no manager into the "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/sql/280/example-databases/1014/auto-shop-database#t=201607221354152300317",target:"_blank",rel:"noopener noreferrer"}},[t._v("Employees"),a("OutboundLink")],1),t._v(" example table:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Employees\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PhoneNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ManagerId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DepartmentId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HireDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jane'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Doe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("800")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2016-07-22'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);