(window.webpackJsonp=window.webpackJsonp||[]).push([[2932],{3340:function(t,a,e){"use strict";e.r(a);var n=e(31),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"r-in-latex-with-knitr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#r-in-latex-with-knitr"}},[t._v("#")]),t._v(" R in LaTeX with knitr")]),t._v(" "),e("h2",{attrs:{id:"r-in-latex-with-knitr-and-code-externalization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#r-in-latex-with-knitr-and-code-externalization"}},[t._v("#")]),t._v(" R in Latex with Knitr and Code Externalization")]),t._v(" "),e("p",[t._v("Knitr is an R package that allows us to intermingle R code with LaTeX code.  One way to achieve this is external code chunks.  External code chunks allow us to develop/test R Scripts in an R development environment and then include the results in a report.  It is a powerful organizational technique.  This approach is demonstrated below.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# r-noweb-file.Rnw")]),t._v("\n\\documentclass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("article"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("echo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cache"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("\n knitr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("opts_chunk"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("echo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  cache"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n knitr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("read_chunk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r-file.R'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),t._v("\n \n\\begin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nThis is an Rnw file "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R noweb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".  It contains a combination of LateX and R.\n \nOne we have called the read\\_chunk command above we can reference sections of code "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the r"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("file.R script.\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Chunk1"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),t._v("\n\\end"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("p",[t._v("When using this approach we keep our code in a separate R file as shown below.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## r-file.R")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## note the specific comment style of a single pound sign followed by four dashes")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---- Chunk1 ----")]),t._v("\n\nprint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is R Code in an external file"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nx "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" seq"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ny "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" rev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seq"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nplot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"r-in-latex-with-knitr-and-inline-code-chunks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#r-in-latex-with-knitr-and-inline-code-chunks"}},[t._v("#")]),t._v(" R in Latex with Knitr and Inline Code Chunks")]),t._v(" "),e("p",[t._v("Knitr is an R package that allows us to intermingle R code with LaTeX code. One way to achieve this is inline code chunks. This apporach is demonstrated below.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# r-noweb-file.Rnw")]),t._v("\n\\documentclass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("article"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("     \n\\begin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nThis is an Rnw file "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R noweb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".  It contains a combination of LateX and R.\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("my"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("label"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("\nprint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is an R Code Chunk"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" seq"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),t._v("\n\nAbove is an internal code chunk.\nWe can access data created "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" any code chunk inline with our LaTeX code like this.\nThe length of array x is \\Sexpr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(".\n\n\\end"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"r-in-latex-with-knitr-and-internal-code-chunks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#r-in-latex-with-knitr-and-internal-code-chunks"}},[t._v("#")]),t._v(" R in LaTex with Knitr and Internal Code Chunks")]),t._v(" "),e("p",[t._v("Knitr is an R package that allows us to intermingle R code with LaTeX code.  One way to achieve this is internal code chunks.  This apporach is demonstrated below.")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# r-noweb-file.Rnw")]),t._v("\n\\documentclass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("article"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n\\begin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nThis is an Rnw file "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R noweb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".  It contains a combination of LateX and R.\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("chunk"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("label"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("\nprint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is an R Code Chunk"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" seq"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ny "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" seq"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nplot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Brownian motion")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),t._v("\n\n\\end"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("h4",{attrs:{id:"syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),e("li",[t._v("<"),e("internal-code-chunk-name",{attrs:{",":"","options...":""}},[t._v(">="),e("br"),t._v("\n# R Code Here "),e("br"),t._v("\n@")])],1),t._v("\n1. \\Sexpr{ #R Code Here }\n"),e("li",[t._v("<< read-external-R-file >>="),e("br"),t._v("\nread_chunk('r-file.R')"),e("br"),t._v("\n@"),e("br"),t._v(" "),e("br"),t._v("\n<"),e("external-code-chunk-name",{attrs:{",":"","options...":""}},[t._v(">="),e("br"),t._v("\n@")])],1),t._v(" "),e("h4",{attrs:{id:"parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Option")]),t._v(" "),e("th",[t._v("Details")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("echo")]),t._v(" "),e("td",[t._v("(TRUE/FALSE) - whether to include R source code in the output file")])]),t._v(" "),e("tr",[e("td",[t._v("message")]),t._v(" "),e("td",[t._v("(TRUE/FALSE) - whether to include messages from the R source execution in the output file")])]),t._v(" "),e("tr",[e("td",[t._v("warning")]),t._v(" "),e("td",[t._v("(TRUE/FALSE) - whether to include warnings from the R source execution in the output file")])]),t._v(" "),e("tr",[e("td",[t._v("error")]),t._v(" "),e("td",[t._v("(TRUE/FALSE) - whether to include errors from the R source execution in the output file")])]),t._v(" "),e("tr",[e("td",[t._v("cache")]),t._v(" "),e("td",[t._v("(TRUE/FALSE) - whether to cache the results of the R source execution")])]),t._v(" "),e("tr",[e("td",[t._v("fig.width")]),t._v(" "),e("td",[t._v("(numeric) - width of the plot generated by the R source execution")])]),t._v(" "),e("tr",[e("td",[t._v("fig.height")]),t._v(" "),e("td",[t._v("(numeric) - height of the plot generated by the R source execution")])])])]),t._v(" "),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),e("p",[t._v("Knitr is a tool that allows us to interweave natural language (in the form of LaTeX) and source code (in the form of R).  In general, the concept of interspersing natural language and source code is called "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Literate_programming",target:"_blank",rel:"noopener noreferrer"}},[t._v("literate programming"),e("OutboundLink")],1),t._v(".  Since knitr files contain a mixture of LaTeX (traditionally housed in .tex files) and R (traditionally housed in .R files) a new file extension called R noweb (.Rnw) is required.  .Rnw files contain a mixture of LaTeX and R code.")]),t._v(" "),e("p",[t._v("Knitr allows for the generation of statistical reports in PDF format and is a key tool for achieving "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Reproducibility#Reproducible_research",target:"_blank",rel:"noopener noreferrer"}},[t._v("reproducable research"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Compiling .Rnw files to a PDF is a two step process.  First, we need to know how to execute the R code and capture the output in a format that a LaTeX compiler can understand (a process called 'kniting').  We do this using the knitr package.  The command for this is shown below, assuming you have "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Literate_programming",target:"_blank",rel:"noopener noreferrer"}},[t._v("installed the knitr package"),e("OutboundLink")],1),t._v(":")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("Rscript "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v('e "library'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("knitr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" knit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r-noweb-file.Rnw'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),e("p",[t._v("This will generate a normal .tex file (called r-noweb.tex in this example) which can then be turned into a PDF file using:")]),t._v(" "),e("div",{staticClass:"language-r extra-class"},[e("pre",{pre:!0,attrs:{class:"language-r"}},[e("code",[t._v("pdflatex r"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("noweb"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("file.tex\n\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);