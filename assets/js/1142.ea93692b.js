(window.webpackJsonp=window.webpackJsonp||[]).push([[1142],{1550:function(e,t,a){"use strict";a.r(t);var r=a(31),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"pushing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pushing"}},[e._v("#")]),e._v(" Pushing")]),e._v(" "),a("p",[e._v("After changing, staging, and committing code with Git, pushing is required to make your changes available to others and transfers your local changes to the repository server. This topic will cover how to properly push code using Git.")]),e._v(" "),a("h2",{attrs:{id:"push-a-specific-object-to-a-remote-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-a-specific-object-to-a-remote-branch"}},[e._v("#")]),e._v(" Push a specific object to a remote branch")]),e._v(" "),a("h3",{attrs:{id:"general-syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#general-syntax"}},[e._v("#")]),e._v(" General syntax")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push <remotename> <object>:<remotebranchname>\n\n")])])]),a("h3",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push origin master:wip-yourname\n\n")])])]),a("p",[e._v("Will push your master branch to the "),a("code",[e._v("wip-yourname")]),e._v(" branch of origin (most of the time, the repository you cloned from).")]),e._v(" "),a("h3",{attrs:{id:"delete-remote-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete-remote-branch"}},[e._v("#")]),e._v(" Delete remote branch")]),e._v(" "),a("p",[e._v("Deleting the remote branch is the equivalent of pushing an empty object to it.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push <remotename> :<remotebranchname>\n\n")])])]),a("h3",{attrs:{id:"example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push origin :wip-yourname\n\n")])])]),a("p",[e._v("Will delete the remote branch "),a("code",[e._v("wip-yourname")])]),e._v(" "),a("p",[e._v("Instead of using the colon, you can also use the --delete flag, which is better readable in some cases.")]),e._v(" "),a("h3",{attrs:{id:"example-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-3"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push origin --delete wip-yourname\n\n")])])]),a("h3",{attrs:{id:"push-a-single-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-a-single-commit"}},[e._v("#")]),e._v(" Push a single commit")]),e._v(" "),a("p",[e._v("If you have a single commit in your branch that you want to push to a remote without pushing anything else, you can use the following")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push <remotename> <commit SHA>:<remotebranchname>\n\n")])])]),a("h3",{attrs:{id:"example-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-4"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("p",[e._v("Assuming a git history like this")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("eeb32bc Commit 1 - already pushed\n347d700 Commit 2 - want to push\ne539af8 Commit 3 - only local\n5d339db Commit 4 - only local\n\n")])])]),a("p",[e._v("to push only commit "),a("strong",[e._v("347d700")]),e._v(" to remote "),a("strong",[e._v("master")]),e._v(" use the following command")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push origin 347d700:master\n\n")])])]),a("h2",{attrs:{id:"push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[e._v("#")]),e._v(" Push")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push\n\n")])])]),a("p",[e._v("will push your code to your existing upstream. Depending on the push configuration, it will either push code from you current branch (default in Git 2.x) or from all branches (default in Git 1.x).")]),e._v(" "),a("h3",{attrs:{id:"specify-remote-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specify-remote-repository"}},[e._v("#")]),e._v(" Specify remote repository")]),e._v(" "),a("p",[e._v("When working with git, it can be handy to have multiple remote repositories. To specify a remote repository to push to, just append its name to the command.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push origin\n\n")])])]),a("h3",{attrs:{id:"specify-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specify-branch"}},[e._v("#")]),e._v(" Specify Branch")]),e._v(" "),a("p",[e._v("To push to a specific branch, say "),a("code",[e._v("feature_x")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push origin feature_x\n\n")])])]),a("h3",{attrs:{id:"set-the-remote-tracking-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-the-remote-tracking-branch"}},[e._v("#")]),e._v(" Set the remote tracking branch")]),e._v(" "),a("p",[e._v("Unless the branch you are working on originally comes from a remote repository, simply using "),a("code",[e._v("git push")]),e._v(" won't work the first time. You must perform the following command to tell git to push the current branch to a specific remote/branch combination")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push --set-upstream origin master\n\n")])])]),a("p",[e._v("Here, "),a("code",[e._v("master")]),e._v(" is the branch name on the remote "),a("code",[e._v("origin")]),e._v(". You can use "),a("code",[e._v("-u")]),e._v(" as a shorthand for "),a("code",[e._v("--set-upstream")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"pushing-to-a-new-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pushing-to-a-new-repository"}},[e._v("#")]),e._v(" Pushing to a new repository")]),e._v(" "),a("p",[e._v("To push to a repository that you haven't made yet, or is empty:")]),e._v(" "),a("ol",[a("li",[e._v("Create the repository on GitHub (if applicable)")]),e._v(" "),a("li",[e._v("Copy the url given to you, in the form "),a("code",[e._v("https://github.com/USERNAME/REPO_NAME.git")])]),a("li",[e._v("Go to your local repository, and execute "),a("code",[e._v("git remote add origin URL")]),e._v(" "),a("ul")]),e._v(" "),a("li",[e._v("To verify it was added, run "),a("code",[e._v("git remote -v")])]),e._v(" "),a("li",[e._v("Run "),a("code",[e._v("git push origin master")])])]),e._v(" "),a("p",[e._v("Your code should now be on GitHub")]),e._v(" "),a("p",[e._v("For more information view "),a("a",{attrs:{href:"http://stackoverflow.com/documentation/git/4071/git-remote/16208/add-a-remote-repository#t=20161222004640218776",target:"_blank",rel:"noopener noreferrer"}},[e._v("Adding a remote repository"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"explanation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explanation"}},[e._v("#")]),e._v(" Explanation")]),e._v(" "),a("p",[e._v("Push code means that git will analyze the differences of your local commits and remote and send them to be written on the upstream. When push succeeds, your local repository and remote repository are synchronized and other users can see your commits.")]),e._v(" "),a("p",[e._v('For more details on the concepts of "upstream" and "downstream", see '),a("a",{attrs:{href:"//stackoverflow.com/documentation/git/2600/pushing#remarks"}},[e._v("Remarks")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"force-pushing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#force-pushing"}},[e._v("#")]),e._v(" Force Pushing")]),e._v(" "),a("p",[e._v("Sometimes, when you have local changes incompatible with remote changes (ie, when you cannot fast-forward the remote branch, or the remote branch is not a direct ancestor of your local branch), the only way to push your changes is a force push.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push -f\n\n")])])]),a("p",[e._v("or")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push --force\n\n")])])]),a("h3",{attrs:{id:"important-notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#important-notes"}},[e._v("#")]),e._v(" Important notes")]),e._v(" "),a("p",[e._v("This will "),a("strong",[e._v("overwrite")]),e._v(" any remote changes and your remote will match your local.")]),e._v(" "),a("p",[e._v("Attention: Using this command may cause the remote repository to "),a("strong",[e._v("lose commits")]),e._v(". Moreover, it is strongly advised against doing a force push if you are sharing this remote repository with others, since their history will retain every overwritten commit, thus rending their work out of sync with the remote repository.")]),e._v(" "),a("p",[e._v("As a rule of thumb, only force push when:")]),e._v(" "),a("ul",[a("li",[e._v("Nobody except you pulled the changes you are trying to overwrite")]),e._v(" "),a("li",[e._v("You can force everyone to clone a fresh copy after the forced push and make everyone apply their changes to it (people may hate you for this).")])]),e._v(" "),a("h2",{attrs:{id:"push-tags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-tags"}},[e._v("#")]),e._v(" Push tags")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push --tags\n\n")])])]),a("p",[e._v("Pushes all of the "),a("code",[e._v("git tags")]),e._v(" in the local repository that are not in the remote one.")]),e._v(" "),a("h2",{attrs:{id:"changing-the-default-push-behavior"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changing-the-default-push-behavior"}},[e._v("#")]),e._v(" Changing the default push behavior")]),e._v(" "),a("p",[a("strong",[e._v("Current")]),e._v(" updates the branch on the remote repository that shares a name with the current working branch.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git config push.default current\n\n")])])]),a("p",[a("strong",[e._v("Simple")]),e._v(" pushes to the upstream branch, but will not work if the upstream branch is called something else.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git config push.default simple\n\n")])])]),a("p",[a("strong",[e._v("Upstream")]),e._v(" pushes to the upstream branch, no matter what it is called.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git config push.default upstream\n\n")])])]),a("p",[a("strong",[e._v("Matching")]),e._v(" pushes all branches that match on the local and the remote\ngit config push.default upstream")]),e._v(" "),a("p",[e._v("After you've set the preferred style, use")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git push\n\n")])])]),a("p",[e._v("to update the remote repository.")]),e._v(" "),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[e._v("#")]),e._v(" Syntax")]),e._v(" "),a("ul",[a("li",[e._v("git push [-f | --force][-v | --verbose] ["),a("remote",[e._v(" ["),a("refspec",[e._v("...]]")])],1)],1)]),e._v(" "),a("h4",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Parameter")]),e._v(" "),a("th",[e._v("Details")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("--force")]),e._v(" "),a("td",[e._v("Overwrites the remote ref to match your local ref. "),a("strong",[e._v("Can cause the remote repository to lose commits, so use with care")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("--verbose")]),e._v(" "),a("td",[e._v("Run verbosely.")])]),e._v(" "),a("tr",[a("td",[a("remote")],1),e._v(" "),a("td",[e._v("The remote repository that is destination of the push operation.")])]),e._v(" "),a("tr",[a("td",[a("refspec",[e._v("...")])],1),e._v(" "),a("td",[e._v("Specify what remote ref to update with what local ref or object.")])])])]),e._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[e._v("#")]),e._v(" Remarks")]),e._v(" "),a("h3",{attrs:{id:"upstream-downstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upstream-downstream"}},[e._v("#")]),e._v(" Upstream & Downstream")]),e._v(" "),a("blockquote"),e._v(" "),a("p",[e._v('In terms of source control, you\'re **"downstream"** when you copy (clone,\ncheckout, etc) from a repository. Information flowed "downstream" to\nyou.')]),e._v(" "),a("p",[e._v('When you make changes, you usually want to send them back **"upstream"**\nso they make it into that repository so that everyone pulling from the\nsame source is working with all the same changes. This is mostly a\nsocial issue of how everyone can coordinate their work rather than a\ntechnical requirement of source control. You want to get your changes\ninto the main project so you\'re not tracking divergent lines of\ndevelopment.')]),e._v(" "),a("p",[e._v('Sometimes you\'ll read about package or release managers (the people,\nnot the tool) talking about submitting changes to "upstream". That\nusually means they had to adjust the original sources so they could\ncreate a package for their system. They don\'t want to keep making\nthose changes, so if they send them "upstream" to the original source,\nthey shouldn\'t have to deal with the same issue in the next release.')]),e._v(" "),a("p",[e._v("("),a("a",{attrs:{href:"http://stackoverflow.com/a/2739476/163024",target:"_blank",rel:"noopener noreferrer"}},[e._v("Source"),a("OutboundLink")],1),e._v(")")])])}),[],!1,null,null,null);t.default=s.exports}}]);