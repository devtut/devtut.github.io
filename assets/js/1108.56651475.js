(window.webpackJsonp=window.webpackJsonp||[]).push([[1108],{1516:function(e,t,a){"use strict";a.r(t);var n=a(31),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"bundles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bundles"}},[e._v("#")]),e._v(" Bundles")]),e._v(" "),a("h2",{attrs:{id:"creating-a-git-bundle-on-the-local-machine-and-using-it-on-another"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-git-bundle-on-the-local-machine-and-using-it-on-another"}},[e._v("#")]),e._v(" Creating a git bundle on the local machine and using it on another")]),e._v(" "),a("p",[e._v("Sometimes you may want maintain versions of a git repository on machines that  have no network connection. Bundles allow you to package git objects and references in a repository on one machine and import those into a repository on another.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git tag 2016_07_24\ngit bundle create changes_between_tags.bundle [some_previous_tag]..2016_07_24\n\n")])])]),a("p",[e._v("Somehow transfer the "),a("strong",[e._v("changes_between_tags.bundle")]),e._v(" file to the remote machine; e.g., via thumb drive. Once you have it there:")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git bundle verify changes_between_tags.bundle  # make sure bundle arrived intact\ngit checkout [some branch]       # in the repo on the remote machine\ngit bundle list-heads changes_between_tags.bundle # list the references in the bundle\ngit pull changes_between_tags.bundle [reference from the bundle, e.g. last field from the previous output]\n\n")])])]),a("p",[e._v("The reverse is also possible. Once you've made changes on the remote repository you can bundle up the deltas; put the changes on, e.g., a thumb drive, and merge them back into the local repository so the two can stay in sync without requiring direct "),a("code",[e._v("git")]),e._v(", "),a("code",[e._v("ssh")]),e._v(", "),a("code",[e._v("rsync")]),e._v(", or "),a("code",[e._v("http")]),e._v(" protocol access between the machines.")]),e._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[e._v("#")]),e._v(" Remarks")]),e._v(" "),a("p",[e._v("The key to making this work is to begin by cloning a bundle that starts from the beginning of the repo history:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\ngit bundle create initial.bundle master\n git tag -f some_previous_tag master  # so the whole repo does not have to go each time\n\n")])])]),a("p",[e._v("getting that initial bundle to the remote machine; and")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\ngit clone -b master initial.bundle remote_repo_name\n\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);