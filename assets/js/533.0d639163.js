(window.webpackJsonp=window.webpackJsonp||[]).push([[533],{941:function(e,s,a){"use strict";a.r(s);var t=a(31),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"splitting-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitting-files"}},[e._v("#")]),e._v(" Splitting Files")]),e._v(" "),a("p",[e._v("Sometimes it's useful to split a file into multiple separate files. If you have large files, it might be a good idea to break it into smaller chunks")]),e._v(" "),a("h2",{attrs:{id:"split-a-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split-a-file"}},[e._v("#")]),e._v(" Split a file")]),e._v(" "),a("p",[e._v("Running the split command without any options will split a file into 1 or more separate files containing up to 1000 lines each.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("split")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v("\n\n")])])]),a("p",[e._v("This will create files named "),a("code",[e._v("xaa")]),e._v(", "),a("code",[e._v("xab")]),e._v(", "),a("code",[e._v("xac")]),e._v(", etc, each containing up to 1000 lines. As you can see, all of them are prefixed with the letter "),a("code",[e._v("x")]),e._v(" by default. If the initial file was less than 1000 lines, only one such file would be created.")]),e._v(" "),a("p",[e._v("To change the prefix, add your desired prefix to the end of the command line")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("split")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" customprefix\n\n")])])]),a("p",[e._v("Now files named "),a("code",[e._v("customprefixaa")]),e._v(", "),a("code",[e._v("customprefixab")]),e._v(", "),a("code",[e._v("customprefixac")]),e._v(" etc. will be created")]),e._v(" "),a("p",[e._v("To specify the number of lines to output per file, use the "),a("code",[e._v("-l")]),e._v(" option. The following will split a file into a maximum of 5000 lines")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("split")]),e._v(" -l5000 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v("\n\n")])])]),a("p",[e._v("OR")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("split")]),e._v(" --lines"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5000")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v("\n\n")])])]),a("p",[e._v("Alternatively, you can specify a maximum number of bytes instead of lines. This is done by using the "),a("code",[e._v("-b")]),e._v(" or "),a("code",[e._v("--bytes")]),e._v(" options. For example, to allow a maximum of 1MB")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("split")]),e._v(" --bytes"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("1MB "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v("\n\n")])])]),a("h2",{attrs:{id:"we-can-use-sed-with-w-option-to-split-a-file-into-mutiple-files-files-can-be-split-by-specifying-line-address-or-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#we-can-use-sed-with-w-option-to-split-a-file-into-mutiple-files-files-can-be-split-by-specifying-line-address-or-pattern"}},[e._v("#")]),e._v(" We can use sed with w option to split a file into mutiple files. Files can be split by specifying line address or pattern.")]),e._v(" "),a("p",[e._v("Suppose we have this source file that we would like to split:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" -n sourcefile\n\n")])])]),a("p",[a("em",[e._v("1  On the Ning Nang Nong"),a("br"),e._v("\n2  Where the Cows go Bong!"),a("br"),e._v("\n3  and the monkeys all say BOO!"),a("br"),e._v("\n4  There's a Nong Nang Ning"),a("br"),e._v("\n5  Where the trees go Ping!"),a("br"),e._v("\n6  And the tea pots jibber jabber joo."),a("br"),e._v("\n7  On the Nong Ning Nang")])]),e._v(" "),a("p",[e._v("Command to split the file by line number:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'1,3w f1\n> 4,7w f2'")]),e._v(" sourcefile\n\n")])])]),a("p",[e._v("This writes line1 to line3 into file f1 and line4 to line7 into file f2, from the sourcefile.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" -n f1\n\n")])])]),a("p",[a("em",[e._v("1  On the Ning Nang Nong"),a("br"),e._v("\n2  Where the Cows go Bong!"),a("br"),e._v("\n3  and the monkeys all say BOO!")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" -n f2 \n\n")])])]),a("p",[e._v("1  There's a Nong Nang Ning"),a("br"),e._v("\n2  Where the trees go Ping!"),a("br"),e._v("\n3  And the tea pots jibber jabber joo."),a("br"),e._v("\n4  On the Nong Ning Nang")]),e._v(" "),a("p",[e._v("Command to split the file by context/pattern:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/Ning/w file1\n> /Ping/w file2'")]),e._v(" sourcefile\n\n")])])]),a("p",[e._v("This splits the sourcefile into file1 and file2.\nfile1 contains all lines that match Ning, file2 contains lines that match Ping.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" file1\n\n")])])]),a("p",[a("em",[e._v("On the Ning Nang Nong"),a("br"),e._v("\nThere's a Nong Nang Ning"),a("br"),e._v("\nOn the Nong Ning Nang")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" file2\n\n")])])]),a("p",[a("strong",[e._v("Where the trees go Ping!")])])])}),[],!1,null,null,null);s.default=n.exports}}]);