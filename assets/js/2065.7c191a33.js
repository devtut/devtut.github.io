(window.webpackJsonp=window.webpackJsonp||[]).push([[2065],{2473:function(a,s,t){"use strict";t.r(s);var e=t(31),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"stored-procedures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stored-procedures"}},[a._v("#")]),a._v(" Stored Procedures")]),a._v(" "),t("p",[a._v("In SQL Server, a procedure is a stored program that you can pass parameters into. It does not return a value like a function does. However, it can return a success/failure status to the procedure that called it.")]),a._v(" "),t("h2",{attrs:{id:"creating-and-executing-a-basic-stored-procedure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#creating-and-executing-a-basic-stored-procedure"}},[a._v("#")]),a._v(" Creating and executing a basic stored procedure")]),a._v(" "),t("p",[a._v("Using the "),t("code",[a._v("Authors")]),a._v(" table in the "),t("a",{attrs:{href:"http://stackoverflow.com/documentation/sql/280/example-databases/4978/library-database#t=20160722132728048284",target:"_blank",rel:"noopener noreferrer"}},[a._v("Library Database"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PROCEDURE")]),a._v(" GetName\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@input_id")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--Input parameter,  id of the person, NULL default")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("128")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--Input parameter, name of the person, NULL default")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("AS")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" Name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("' is from '")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" Country \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" Authors \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" Id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@input_id")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("OR")]),a._v(" Name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@name")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v(" \nGO\n\n")])])]),t("p",[a._v("You can execute a procedure with a few different syntaxes. First, you can use "),t("code",[a._v("EXECUTE")]),a._v(" or "),t("code",[a._v("EXEC")])]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXECUTE")]),a._v(" GetName "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@id")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXEC")]),a._v(" Getname "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Ernest Hemingway'")]),a._v("\n\n")])])]),t("p",[a._v("Additionally, you can omit the EXEC command. Also, you don't have to specify what parameter you are passing in, as you pass in all parameters.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[a._v("GetName "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Ernest Hemingway'")]),a._v("\n\n")])])]),t("p",[a._v("When you want to specify the input parameters in a different order than how they are declared in the procedure you can specify the parameter name and assign values. For example")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\nCREATE PROCEDURE dbo.sProcTemp \n (\n    @Param1 INT,\n    @Param2 INT\n)\nAS\nBEGIN\n\n    SELECT\n        Param1 = @Param1,\n        Param2 = @Param2\n\nEND\n\n")])])]),t("p",[a._v("the normal order to execute this procedure is to specify the value for @Param1 first and then @Param2 second. So it will look something like this")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n EXEC dbo.sProcTemp @Param1 = 0,@Param2=1\n\n")])])]),t("p",[a._v("But it's also possible that you can use the following")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n EXEC dbo.sProcTemp @Param2 = 0,@Param1=1\n\n")])])]),t("p",[a._v("in this, you are specifying the value for @param2 first and @Param1 second. Which means you do not have to keep the same order as it is declared in the procedure but you can have any order as you wish. but you will need to specify to which parameter you are setting the value")]),a._v(" "),t("p",[t("strong",[a._v("Access stored procedure from any database")])]),a._v(" "),t("p",[a._v("And also you can create a procedure with a prefix "),t("code",[a._v("sp_")]),a._v(' these procuedres, like all system stored procedures, can be executed without specifying the database because of the default behavior of SQL Server. When you execute a stored procedure that starts with "sp_", SQL Server looks for the procedure in the master database first. If the procedure is not found in master, it looks in the active database. If you have a stored procedure that you want to access from all your databases, create it in master and use a name that includes the "sp_" prefix.')]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("Use")]),a._v(" Master\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PROCEDURE")]),a._v(" sp_GetName\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@input_id")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--Input parameter,  id of the person, NULL default")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("128")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--Input parameter, name of the person, NULL default")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("AS")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" Name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("' is from '")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" Country \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" Authors \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHERE")]),a._v(" Id "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@input_id")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("OR")]),a._v(" Name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@name")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v(" \nGO\n\n")])])]),t("h2",{attrs:{id:"stored-procedure-with-if-else-and-insert-into-operation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stored-procedure-with-if-else-and-insert-into-operation"}},[a._v("#")]),a._v(" Stored Procedure with If...Else and Insert Into operation")]),a._v(" "),t("p",[a._v("Create example table "),t("code",[a._v("Employee")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" Employee\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    Id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    EmpName "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("25")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    EmpGender "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    EmpDeptId "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INT")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("p",[a._v("Creates stored procedure that checks whether the values passed in stored procedure are not null or non empty and perform insert operation in Employee table.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PROCEDURE")]),a._v(" spSetEmployeeDetails\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ID")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("25")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Gender")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@DeptId")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INT")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("AS")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("IF")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ID")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("IS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("NOT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("LEN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ID")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("IS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("NOT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("LEN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Gender")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("IS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("NOT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("LEN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Gender")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@DeptId")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("IS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("NOT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("NULL")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("AND")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("LEN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@DeptId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INSERT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INTO")]),a._v(" Employee\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n            Id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            EmpName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            EmpGender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            EmpDeptId\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VALUES")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ID")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Gender")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@DeptId")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ELSE")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PRINT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Incorrect Parameters'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v("\nGO\n\n")])])]),t("p",[a._v("Execute the stored procedure")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DECLARE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ID")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("25")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Gender")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@DeptId")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INT")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXECUTE")]),a._v(" spSetEmployeeDetails\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ID")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Subin Nepal'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Gender")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Male'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@DeptId")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("182666")]),a._v(" \n\n")])])]),t("h2",{attrs:{id:"dynamic-sql-in-stored-procedure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-sql-in-stored-procedure"}},[a._v("#")]),a._v(" Dynamic SQL in stored procedure")]),a._v(" "),t("p",[a._v("Dynamic SQL enables us to generate and run SQL statements at run time. Dynamic SQL is needed when our SQL statements contains identifier that may change at different compile times.")]),a._v(" "),t("p",[a._v("Simple Example of dynamic SQL:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PROC")]),a._v(" sp_dynamicSQL\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@table_name")]),a._v("      NVARCHAR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@col_name")]),a._v("        NVARCHAR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@col_value")]),a._v("       NVARCHAR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("AS")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DECLARE")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Query")]),a._v("  NVARCHAR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Query")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'SELECT * FROM '")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@table_name")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Query")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Query")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("' WHERE '")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@col_name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("' = '")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("''''")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@col_value")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("''''")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXEC")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@Query")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v("\n\n")])])]),t("p",[a._v("In the above sql query, we can see that we can use above query by defining values in "),t("code",[a._v("@table_name, @col_name, and @col_value")]),a._v(" at run time. The query is generated at runtime and executed. This is technique in which we can create whole scripts as string in a variable and execute it. We can create more complex queries using dynamic SQL and concatenation concept. This concept is very powerful when you want to create a script that can be used under several conditions.")]),a._v(" "),t("p",[a._v("Executing stored procedure")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DECLARE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@table_name")]),a._v("     NVARCHAR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ITCompanyInNepal'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@col_name")]),a._v("       NVARCHAR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Headquarter'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@col_value")]),a._v("      NVARCHAR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'USA'")]),a._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXEC")]),a._v("    sp_dynamicSQL   "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@table_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("    \n                        "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@col_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                        "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@col_value")]),a._v("\n\n")])])]),t("p",[a._v("Table I have used")]),a._v(" "),t("p",[t("a",{attrs:{href:"http://i.stack.imgur.com/dxCe3.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"http://i.stack.imgur.com/dxCe3.png",alt:"enter image description here"}}),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("Output")]),a._v(" "),t("p",[t("a",{attrs:{href:"http://i.stack.imgur.com/kwVch.png",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"http://i.stack.imgur.com/kwVch.png",alt:"enter image description here"}}),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"stored-procedure-with-out-parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stored-procedure-with-out-parameters"}},[a._v("#")]),a._v(" STORED PROCEDURE with OUT parameters")]),a._v(" "),t("p",[a._v("Stored procedures can return values using the "),t("code",[a._v("OUTPUT")]),a._v(" keyword in its parameter list.")]),a._v(" "),t("h3",{attrs:{id:"creating-a-stored-procedure-with-a-single-out-parameter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-stored-procedure-with-a-single-out-parameter"}},[a._v("#")]),a._v(" Creating a stored procedure with a single out parameter")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PROCEDURE")]),a._v(" SprocWithOutParams\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@InParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" OUTPUT\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("AS")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@InParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("' must come out'")]),a._v("   \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RETURN")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v("   \nGO\n\n")])])]),t("h3",{attrs:{id:"executing-the-stored-procedure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#executing-the-stored-procedure"}},[a._v("#")]),a._v(" Executing the stored procedure")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DECLARE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("    \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXECUTE")]),a._v(" SprocWithOutParams "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'what goes in'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" OUTPUT   \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PRINT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" \n\n")])])]),t("h3",{attrs:{id:"creating-a-stored-procedure-with-multiple-out-parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-stored-procedure-with-multiple-out-parameters"}},[a._v("#")]),a._v(" Creating a stored procedure with multiple out parameters")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PROCEDURE")]),a._v(" SprocWithOutParams2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@InParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" OUTPUT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" OUTPUT\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("AS")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@InParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("' must come out'")]),a._v("   \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@InParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("' must come out'")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RETURN")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v("    \nGO\n\n")])])]),t("h3",{attrs:{id:"executing-the-stored-procedure-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#executing-the-stored-procedure-2"}},[a._v("#")]),a._v(" Executing the stored procedure")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DECLARE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("    \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DECLARE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXECUTE")]),a._v(" SprocWithOutParams2 "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'what goes in'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" OUTPUT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam2")]),a._v(" OUTPUT   \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PRINT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PRINT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@OutParam2")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"simple-looping"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#simple-looping"}},[a._v("#")]),a._v(" Simple Looping")]),a._v(" "),t("p",[a._v("First lets get some data into a temp table named "),t("code",[a._v("#systables")]),a._v(" and ad a incrementing row number so we can query one record at a time")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v("\n    o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    row_number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("over")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("order")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("by")]),a._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" rn\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("into")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#systables")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v("\n    sys"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("objects "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" o\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("where")]),a._v("\n    o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("type")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'S'")]),a._v("\n\n")])])]),t("p",[a._v("Next we declare some variables to control the looping and store the table name in this example")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("declare")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@rn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@maxRn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v("\n                        "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("rn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v("\n                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#systables as s")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("declare")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@tablename")]),a._v(" sys name\n\n")])])]),t("p",[a._v("Now we can loop using a simple while. We increment "),t("code",[a._v("@rn")]),a._v(" in the "),t("code",[a._v("select")]),a._v(" statement but this could also have been a separate statement for ex "),t("code",[a._v("set @rn = @rn + 1")]),a._v(" it will depend on your requirements. We also use the value of "),t("code",[a._v("@rn")]),a._v(" before it's incremented to select a single record from "),t("code",[a._v("#systables")]),a._v(". Lastly we print the table name.")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@rn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@maxRn")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("begin")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@tablename")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@rn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@rn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#systables as s")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("where")]),a._v("\n            s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("rn "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@rn")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("print")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@tablename")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("end")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"simple-looping-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#simple-looping-2"}},[a._v("#")]),a._v(" Simple Looping")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PROCEDURE")]),a._v(" SprocWithSimpleLoop\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@SayThis")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ThisManyTimes")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INT")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("AS")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WHILE")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ThisManyTimes")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("BEGIN")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("PRINT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@SayThis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SET")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ThisManyTimes")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@ThisManyTimes")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RETURN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("END")]),a._v("    \nGO\n\n")])])]),t("h4",{attrs:{id:"syntax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[a._v("#")]),a._v(" Syntax")]),a._v(" "),t("ul",[t("li",[a._v("CREATE { PROCEDURE | PROC } [schema_name.]procedure_name")]),a._v(" "),t("li",[a._v("[ @parameter [type_schema_name.] datatype")]),a._v(" "),t("li",[a._v("[ VARYING ] [ = default ] [ OUT | OUTPUT | READONLY ]")]),a._v(" "),t("li",[a._v(", @parameter [type_schema_name.] datatype")]),a._v(" "),t("li",[a._v("[ VARYING ] [ = default ] [ OUT | OUTPUT | READONLY ] ]")]),a._v(" "),t("li",[a._v("[ WITH { ENCRYPTION | RECOMPILE | EXECUTE AS Clause } ]")]),a._v(" "),t("li",[a._v("[ FOR REPLICATION ]")]),a._v(" "),t("li",[a._v("AS")]),a._v(" "),t("li",[a._v("BEGIN")]),a._v(" "),t("li",[a._v("[declaration_section]")]),a._v(" "),t("li",[a._v("executable_section")]),a._v(" "),t("li",[a._v("END;")])])])}),[],!1,null,null,null);s.default=r.exports}}]);