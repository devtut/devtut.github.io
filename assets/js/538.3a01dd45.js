(window.webpackJsonp=window.webpackJsonp||[]).push([[538],{946:function(a,s,t){"use strict";t.r(s);var e=t(31),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"typing-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typing-variables"}},[a._v("#")]),a._v(" Typing variables")]),a._v(" "),t("h2",{attrs:{id:"declare-weakly-typed-variables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#declare-weakly-typed-variables"}},[a._v("#")]),a._v(" declare weakly typed variables")]),a._v(" "),t("p",[t("strong",[a._v("declare")]),a._v(' is an internal command of bash. (internal command use **help ** for displaying "manpage"). It is used to show and define variables or show function bodies.')]),a._v(" "),t("p",[a._v("Syntax: "),t("strong",[a._v("declare [options] [name[=value]]...")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# options are used to define")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# an integer")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -i myInteger\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -i "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("anotherInt")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# an array with values")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -a "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("anArray")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" one two three"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# an assoc Array")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -A "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("assocArray")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("element1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"something"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("second"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("anotherthing "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# note that bash recognizes the string context within []")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# some modifiers exist")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# uppercase content")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -u "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("big")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'this will be uppercase'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# same for lower case")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -l "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("small")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'THIS WILL BE LOWERCASE'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# readonly array")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -ra "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("constarray")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" eternal "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" and unchangeable "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# export integer to environment")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -xi "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("importantInt")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("42")]),a._v("\n\n")])])]),t("p",[a._v("You can use also the + which takes away the given attribute. Mostly useless, just for completness.")]),a._v(" "),t("p",[a._v("To display variables and/or functions there are some options too")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# printing definded vars and functions")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -f\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# restrict output to functions only")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("declare")]),a._v(" -F "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# if debugging prints line number and filename defined in too")]),a._v("\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);