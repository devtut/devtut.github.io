(window.webpackJsonp=window.webpackJsonp||[]).push([[519],{927:function(a,t,s){"use strict";s.r(t);var e=s(31),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"pattern-matching-and-regular-expressions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pattern-matching-and-regular-expressions"}},[a._v("#")]),a._v(" Pattern matching and regular expressions")]),a._v(" "),s("h2",{attrs:{id:"check-if-a-string-matches-a-regular-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check-if-a-string-matches-a-regular-expression"}},[a._v("#")]),a._v(" Check if a string matches a regular expression")]),a._v(" "),s("p",[a._v("Check if a string consists in exactly 8 digits:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("date")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20150624")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$date")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v(" ^"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("-9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yes"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"no"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yes")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("date")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("hello\n$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$date")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v(" ^"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("-9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yes"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"no"')]),a._v("\nno\n\n")])])]),s("h2",{attrs:{id:"behaviour-when-a-glob-does-not-match-anything"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#behaviour-when-a-glob-does-not-match-anything"}},[a._v("#")]),a._v(" Behaviour when a glob does not match anything")]),a._v(" "),s("p",[s("strong",[a._v("Preparation")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" macy stacy tracy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"file with space"')]),a._v(" folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/file .hiddenfile\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u globstar\n\n")])])]),s("p",[a._v("In case the glob does not match anything the result is determined by the\noptions "),s("code",[a._v("nullglob")]),a._v(" and "),s("code",[a._v("failglob")]),a._v(". If neither of them are set, Bash will return the glob itself if nothing is matched")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" no*match\nno*match\n\n")])])]),s("p",[a._v("If "),s("code",[a._v("nullglob")]),a._v(" is activated then nothing ("),s("code",[a._v("null")]),a._v(") is returned:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" no*match\n\n$\n\n")])])]),s("p",[a._v("If "),s("code",[a._v("failglob")]),a._v(" is activated then an error message is returned:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" no*match\nbash: no match: no*match\n$\n\n")])])]),s("p",[a._v("Notice, that the "),s("code",[a._v("failglob")]),a._v(" option supersedes the "),s("code",[a._v("nullglob")]),a._v(" option, i.e.,\nif "),s("code",[a._v("nullglob")]),a._v(" and "),s("code",[a._v("failglob")]),a._v(" are both set, then - in case of no match - an\nerror is returned.")]),a._v(" "),s("h2",{attrs:{id:"get-captured-groups-from-a-regex-match-against-a-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-captured-groups-from-a-regex-match-against-a-string"}},[a._v("#")]),a._v(" Get captured groups from a regex match against a string")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'I am a simple string with digits 1234'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("pat")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'(.*) ([0-9]+)'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$pat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("BASH_REMATCH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("BASH_REMATCH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("BASH_REMATCH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v('"')]),a._v("\n\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("I am a simple string with digits "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1234")]),a._v("\nI am a simple string with digits\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1234")]),a._v("\n\n")])])]),s("h2",{attrs:{id:"the-glob"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-glob"}},[a._v("#")]),a._v(" The * glob")]),a._v(" "),s("p",[s("strong",[a._v("Preparation")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" macy stacy tracy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"file with space"')]),a._v(" folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/file .hiddenfile\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u globstar\n\n")])])]),s("p",[a._v("The asterisk * is probably the most commonly used glob. It simply matches any\nString")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" *acy\nmacy stacy tracy\n\n")])])]),s("p",[a._v("A single * will not match files and folders that reside in subfolders")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" *\nemptyfolder folder macy stacy tracy\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" folder/*\nfolder/anotherfolder folder/subfolder\n\n")])])]),s("h2",{attrs:{id:"the-glob-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-glob-2"}},[a._v("#")]),a._v(" The ** glob")]),a._v(" "),s("p",[s("strong",[a._v("Preparation")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" macy stacy tracy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"file with space"')]),a._v(" folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/file .hiddenfile\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s globstar\n\n")])])]),s("p",[a._v("Bash is able to interpret two adjacent asterisks as a single glob. With the "),s("code",[a._v("globstar")]),a._v("\noption activated this can be used to match folders that reside deeper in the directory structure")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" **\nemptyfolder folder folder/anotherfolder folder/anotherfolder/content folder/anotherfolder/content/deepfolder folder/anotherfolder/content/deepfolder/file folder/subfolder folder/subfolder/content folder/subfolder/content/deepfolder folder/subfolder/content/deepfolder/file macy stacy tracy\n\n")])])]),s("p",[a._v("The "),s("code",[a._v("**")]),a._v(" can be thought of a path expansion, no matter how deep the path is.\nThis example matches any file or folder that starts with "),s("code",[a._v("deep")]),a._v(", regardless of how\ndeep it is nested:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" **/deep*\nfolder/anotherfolder/content/deepfolder folder/subfolder/content/deepfolder\n\n")])])]),s("h2",{attrs:{id:"the-glob-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-glob-3"}},[a._v("#")]),a._v(" The ? glob")]),a._v(" "),s("p",[s("strong",[a._v("Preparation")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" macy stacy tracy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"file with space"')]),a._v(" folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/file .hiddenfile\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u globstar\n\n")])])]),s("p",[a._v("The "),s("code",[a._v("?")]),a._v(" simply matches exactly one character")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ?acy\nmacy\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ??acy\nstacy tracy\n\n")])])]),s("h2",{attrs:{id:"the-glob-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-glob-4"}},[a._v("#")]),a._v(" The [ ] glob")]),a._v(" "),s("p",[s("strong",[a._v("Preparation")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" macy stacy tracy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"file with space"')]),a._v(" folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/file .hiddenfile\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u globstar\n\n")])])]),s("p",[a._v("If there is a need to match specific characters then '[]' can be used. Any\ncharacter inside '[]' will be matched exactly once.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("acy\nmacy\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("st"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("tr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("acy\nstacy tracy\n\n")])])]),s("p",[a._v("The "),s("code",[a._v("[]")]),a._v(" glob, however, is more versatile than just that. It also allows\nfor a negative match and even matching ranges of characters and\ncharacterclasses. A negative match is achieved by using "),s("code",[a._v("!")]),a._v(" or "),s("code",[a._v("^")]),a._v(" as the first\ncharacter following "),s("code",[a._v("[")]),a._v(". We can match "),s("code",[a._v("stacy")]),a._v(" by")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("^r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("acy\nstacy\n\n")])])]),s("p",[a._v("Here we are telling bash the we want to match only files which do not not\nstart with a "),s("code",[a._v("t")]),a._v(" and the second letter is not an "),s("code",[a._v("r")]),a._v(" and the file ends in\n"),s("code",[a._v("acy")]),a._v(".")]),a._v(" "),s("p",[a._v("Ranges can be matched by seperating a pair of characters with a hyphen ("),s("code",[a._v("-")]),a._v("). Any\ncharacter that falls between those two enclosing characters - inclusive - will\nbe matched. E.g., "),s("code",[a._v("[r-t]")]),a._v(" is equivalent to "),s("code",[a._v("[rst]")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("r-t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("r-t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("acy\nstacy tracy\n\n")])])]),s("p",[a._v("Character classes can be matched by "),s("code",[a._v("[:class:]")]),a._v(", e.g., in order to match files\nthat contain a whitespace")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":blank:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" with space\n\n")])])]),s("h2",{attrs:{id:"matching-hidden-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#matching-hidden-files"}},[a._v("#")]),a._v(" Matching hidden files")]),a._v(" "),s("p",[s("strong",[a._v("Preparation")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" macy stacy tracy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"file with space"')]),a._v(" folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/file .hiddenfile\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u globstar\n\n")])])]),s("p",[a._v("The Bash built-in option "),s("strong",[a._v("dotglob")]),a._v(" allows to match hidden files\nand folders, i.e., files and folders that start with a "),s("code",[a._v(".")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" *\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" with space folder .hiddenfile macy stacy tracy\n\n")])])]),s("h2",{attrs:{id:"case-insensitive-matching"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#case-insensitive-matching"}},[a._v("#")]),a._v(" Case insensitive matching")]),a._v(" "),s("p",[s("strong",[a._v("Preparation")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" macy stacy tracy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"file with space"')]),a._v(" folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/file .hiddenfile\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u globstar\n\n")])])]),s("p",[a._v("Setting the option "),s("code",[a._v("nocaseglob")]),a._v(" will match the glob in a case insensitive\nmanner")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" M*\nM*\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" M*\nmacy\n\n")])])]),s("h2",{attrs:{id:"extended-globbing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extended-globbing"}},[a._v("#")]),a._v(" Extended globbing")]),a._v(" "),s("p",[s("strong",[a._v("Preparation")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" globbing\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" macy stacy tracy "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"file with space"')]),a._v(" folder/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("sub,another"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("folder/content/deepfolder/file .hiddenfile\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nullglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u failglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u dotglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u nocaseglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u globstar\n\n")])])]),s("p",[a._v("Bash's built-in "),s("code",[a._v("extglob")]),a._v(" option can extend a glob's matching capabilities")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s extglob\n\n")])])]),s("p",[a._v("The following sub-patterns comprise valid extended globs:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("?(pattern-list)")]),a._v(" – Matches zero or one occurrence of the given patterns")]),a._v(" "),s("li",[s("code",[a._v("*(pattern-list)")]),a._v(" – Matches zero or more occurrences of the given patterns")]),a._v(" "),s("li",[s("code",[a._v("+(pattern-list)")]),a._v(" – Matches one or more occurrences of the given patterns")]),a._v(" "),s("li",[s("code",[a._v("@(pattern-list)")]),a._v(" – Matches one of the given patterns")]),a._v(" "),s("li",[s("code",[a._v("!(pattern-list)")]),a._v(" – Matches anything except one of the given patterns")])]),a._v(" "),s("p",[a._v("The "),s("code",[a._v("pattern-list")]),a._v(" is a list of globs separated by "),s("code",[a._v("|")]),a._v(".")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("r-t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("acy\nstacy tracy\n\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("r-t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("acy\nmacy stacy tracy\n\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ?"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a-z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("acy\nmacy\n\n")])])]),s("p",[a._v("The "),s("code",[a._v("pattern-list")]),a._v(" itself can be another, nested extended glob. In the above\nexample we have seen that we can match "),s("code",[a._v("tracy")]),a._v(" and "),s("code",[a._v("stacy")]),a._v(" with "),s("code",[a._v("*(r-t)")]),a._v(".\nThis extended glob itself can be used inside the negated extended glob\n"),s("code",[a._v("!(pattern-list)")]),a._v(" in order to match "),s("code",[a._v("macy")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("r-t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("))")]),a._v("acy\nmacy\n\n")])])]),s("p",[a._v("It matches anything that does "),s("strong",[a._v("not")]),a._v(" start with zero or more occurrences of the\nletters "),s("code",[a._v("r")]),a._v(", "),s("code",[a._v("s")]),a._v(" and "),s("code",[a._v("t")]),a._v(", which leaves only "),s("code",[a._v("macy")]),a._v(" as possible match.")]),a._v(" "),s("h2",{attrs:{id:"regex-matching"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regex-matching"}},[a._v("#")]),a._v(" Regex matching")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("pat")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[^0-9]+([0-9]+)'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("s")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'I am a string with some digits 1024'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$pat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# $pat must be unquoted")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("BASH_REMATCH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("BASH_REMATCH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v('"')]),a._v("\n\n")])])]),s("p",[a._v("Output:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("I am a string with some digits "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v("\n\n")])])]),s("p",[a._v("Instead of assigning the regex to a variable ("),s("code",[a._v("$pat")]),a._v(") we could also do:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("^0-9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("-9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n")])])]),s("p",[s("strong",[a._v("Explanation")])]),a._v(" "),s("ul",[s("li",[a._v("The "),s("code",[a._v("[[ $s =~ $pat ]]")]),a._v(" construct performs the regex matching")]),a._v(" "),s("li",[a._v("The captured groups i.e the match results are available in an array named "),s("strong",[a._v("BASH_REMATCH")])]),a._v(" "),s("li",[a._v("The 0th index in the "),s("strong",[a._v("BASH_REMATCH")]),a._v(" array is the total match")]),a._v(" "),s("li",[a._v("The "),s("strong",[a._v("i'th")]),a._v(" index in the "),s("strong",[a._v("BASH_REMATCH")]),a._v(" array is the "),s("strong",[a._v("i'th")]),a._v(" captured group, where "),s("strong",[a._v("i")]),a._v(" = 1, 2, 3 ...")])]),a._v(" "),s("h4",{attrs:{id:"syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[a._v("#")]),a._v(" Syntax")]),a._v(" "),s("ul",[s("li",[a._v("$ shopt -u option # Deactivate Bash's built-in 'option'")]),a._v(" "),s("li",[a._v("$ shopt -s option # Activate Bash's built-in 'option'")])]),a._v(" "),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[a._v("#")]),a._v(" Remarks")]),a._v(" "),s("p",[s("strong",[a._v("Character Classes")])]),a._v(" "),s("p",[a._v("Valid character classes for the "),s("code",[a._v("[]")]),a._v(" glob are defined by the POSIX standard:")]),a._v(" "),s("blockquote"),a._v(" "),s("p",[a._v("alnum alpha ascii blank cntrl digit graph lower print punct space\nupper word xdigit")]),a._v(" "),s("p",[a._v("Inside "),s("code",[a._v("[]")]),a._v(" more than one character class or range can be used, e.g.,")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a-z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":blank:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("-9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n\n")])])]),s("p",[a._v("will match any file that starts with an "),s("code",[a._v("a")]),a._v(" and is followed by either a lowercase letter or a blank or a digit.")]),a._v(" "),s("p",[a._v("It should be kept in mind, though, that a "),s("code",[a._v("[]")]),a._v(" glob can only be wholly negated and not only parts of it. The negating character "),s("strong",[a._v("must")]),a._v(" be the first character following the opening "),s("code",[a._v("[")]),a._v(", e.g., this expression matches all files that do "),s("strong",[a._v("not")]),a._v(" start with an "),s("code",[a._v("a")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("^a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n\n")])])]),s("p",[a._v("The following does match all files that start with either a digit or a "),s("code",[a._v("^")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":alpha:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("^a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n\n")])])]),s("p",[a._v("It does "),s("strong",[a._v("not")]),a._v(" match any file or folder that starts with with letter except an "),s("code",[a._v("a")]),a._v(" because the "),s("code",[a._v("^")]),a._v(" is interpreted as a literal "),s("code",[a._v("^")]),a._v(".")]),a._v(" "),s("p",[s("strong",[a._v("Escaping glob characters")])]),a._v(" "),s("p",[a._v("It is possible that a file or folder contains a glob character as part of its name. In this case a glob can be escaped with a preceding "),s("code",[a._v("\\")]),a._v(" in order for a literal match. Another approach is to use double "),s("code",[a._v('""')]),a._v(" or single "),s("code",[a._v("''")]),a._v(" quotes to address the file.\nBash does not process globs that are enclosed within "),s("code",[a._v('""')]),a._v(" or "),s("code",[a._v("''")]),a._v(".")]),a._v(" "),s("p",[s("strong",[a._v("Difference to Regular Expressions")])]),a._v(" "),s("p",[a._v("The most significant difference between globs and Regular Expressions is that\na valid Regular Expressions requires a qualifier as well as a quantifier.\nA qualifier identifies "),s("strong",[a._v("what")]),a._v(" to match and a quantifier tells how often\nto match the qualifier. The equivalent RegEx to the "),s("code",[a._v("*")]),a._v(" glob is "),s("code",[a._v(".*")]),a._v(" where\n"),s("code",[a._v(".")]),a._v(" stands for any character and "),s("code",[a._v("*")]),a._v(" stands for zero or more matches of the\nprevious character. The equivalent RegEx for the "),s("code",[a._v("?")]),a._v(" glob is "),s("code",[a._v(".{1}")]),a._v(". As\nbefore, the qualifier "),s("code",[a._v(".")]),a._v(" matches any character and the "),s("code",[a._v("{1}")]),a._v(" indicates to\nmatch the preceding qualifier exactly once. This should not be confused with\nthe "),s("code",[a._v("?")]),a._v(" quantifier, which matches zero or once in a RegEx.\nThe "),s("code",[a._v("[]")]),a._v(" glob is can be used just the same in a RegEx, as long as it is\nfollowed by a mandatory quantifier.")]),a._v(" "),s("p",[s("strong",[a._v("Equivalent Regular Expressions")])]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("Glob")]),a._v(" "),s("th",[a._v("RegEx")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[s("code",[a._v("*")])]),a._v(" "),s("td",[s("code",[a._v(".*")])])]),a._v(" "),s("tr",[s("td",[s("code",[a._v("?")])]),a._v(" "),s("td",[s("code",[a._v(".")])])]),a._v(" "),s("tr",[s("td",[s("code",[a._v("[]")])]),a._v(" "),s("td",[s("code",[a._v("[]")])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);