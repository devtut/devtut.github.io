(window.webpackJsonp=window.webpackJsonp||[]).push([[2079],{2487:function(e,a,t){"use strict";t.r(a);var s=t(31),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"use-of-temp-table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#use-of-temp-table"}},[e._v("#")]),e._v(" Use of TEMP Table")]),e._v(" "),t("h2",{attrs:{id:"dropping-temp-tables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dropping-temp-tables"}},[e._v("#")]),e._v(" Dropping temp tables")]),e._v(" "),t("p",[e._v("Temp tables must have unique IDs (within the session, for local temp tables, or within the server, for global temp tables).  Trying to create a table using a name that already exists will return the following error:")]),e._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[e._v("There "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("is")]),e._v(" already an object named "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#tempTable'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("in")]),e._v(" the "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("database")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n\n")])])]),t("p",[e._v("If your query produces temp tables, and you want to run it more than once, you will need to drop the tables before trying to generate them again.  The basic syntax for this is:")]),e._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("drop")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("table")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#tempTable")]),e._v("\n\n")])])]),t("p",[e._v("Trying to execute this syntax before the table exists (e.g. on the first run of your syntax) will cause another error:")]),e._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[e._v("Cannot "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("drop")]),e._v(" the "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("table")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#tempTable'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" because it does "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("not")]),e._v(" exist "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("or")]),e._v(" you "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("not")]),e._v(" have permission"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n\n")])])]),t("p",[e._v("To avoid this, you can check to see if the table already exists before dropping it, like so:")]),e._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("IF")]),e._v(" OBJECT_ID "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'tempdb..#tempTable'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'U'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("is")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("not")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("null")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DROP")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TABLE")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#tempTable")]),e._v("\n\n")])])]),t("h2",{attrs:{id:"local-temp-table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#local-temp-table"}},[e._v("#")]),e._v(" Local Temp Table")]),e._v(" "),t("li",[e._v("\nWill be available till the current connection persists for the user.\nAutomatically deleted when the user disconnects.\nThe name should start with # (#temp)\n"),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TABLE")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#LocalTempTable(")]),e._v("\n                StudentID      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                StudentName    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" \n                StudentAddress "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("150")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n")])])])]),e._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("insert")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("into")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#LocalTempTable values ( 1, 'Ram','India');")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#LocalTempTable")]),e._v("\n\n")])])]),t("p",[e._v("After executing all these statements if we close the query window and open it again and try inserting and select it will show an error message")]),e._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[e._v("“Invalid object name "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#LocalTempTable”")]),e._v("\n\n")])])]),t("h2",{attrs:{id:"global-temp-table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#global-temp-table"}},[e._v("#")]),e._v(" Global Temp Table")]),e._v(" "),t("li",[e._v("\nWill start with ## (##temp).\nWill be deleted only if user disconnects all connections.\nIt behaves like a permanent table.\n"),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TABLE")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##NewGlobalTempTable(")]),e._v("\n               StudentID      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n               StudentName    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" \n               StudentAddress "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("150")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Insert")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Into")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##NewGlobalTempTable values ( 1,'Ram','India');")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Select")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##NewGlobalTempTable")]),e._v("\n\n")])])])]),e._v(" "),t("p",[e._v("Note: These are viewable by all users of the database, irrespective of permissions level.")]),e._v(" "),t("h4",{attrs:{id:"remarks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[e._v("#")]),e._v(" Remarks")]),e._v(" "),t("p",[e._v("Temporary Tables are really very helpful.")]),e._v(" "),t("p",[e._v("The table can be created at runtime and can do all operations which are done in a normal table.")]),e._v(" "),t("p",[e._v("These tables are created in a tempdb database.")]),e._v(" "),t("p",[e._v("Used when ?")]),e._v(" "),t("li",[e._v("\nWe have to do complex join operation.\n")]),e._v(" "),t("li",[e._v("\nWe do large number of row manipulation in stored procedures.\n")]),e._v(" "),t("li",[e._v("\nCan replace the usage of cursor.\n")]),e._v(" "),t("p",[e._v("Thus increases the performance.")])])}),[],!1,null,null,null);a.default=n.exports}}]);