(window.webpackJsonp=window.webpackJsonp||[]).push([[2151],{2559:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"string-operations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-operations"}},[t._v("#")]),t._v(" String operations")]),t._v(" "),a("h2",{attrs:{id:"find-element-in-comma-separated-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-element-in-comma-separated-list"}},[t._v("#")]),t._v(" Find element in comma separated list")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" FIND_IN_SET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a,b,c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("Return value:")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[t._v("2")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" FIND_IN_SET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a,b,c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("Return value:")]),t._v(" "),a("blockquote"),t._v(" "),a("p",[t._v("0")]),t._v(" "),a("h2",{attrs:{id:"str-to-date-convert-string-to-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#str-to-date-convert-string-to-date"}},[t._v("#")]),t._v(" STR_TO_DATE - Convert string to date")]),t._v(" "),a("p",[t._v("With a column of one of the string types, named "),a("code",[t._v("my_date_field")]),t._v(" with a value such as [the string] "),a("code",[t._v("07/25/2016")]),t._v(", the following statement demonstrates the use of the "),a("code",[t._v("STR_TO_DATE")]),t._v(" function:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" STR_TO_DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_date_field"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%m/%d/%Y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" my_table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("You could use this function as part of "),a("code",[t._v("WHERE")]),t._v(" clause as well.")]),t._v(" "),a("h2",{attrs:{id:"lower-lcase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lower-lcase"}},[t._v("#")]),t._v(" LOWER() / LCASE()")]),t._v(" "),a("p",[t._v("Convert in lowercase the string argument")]),t._v(" "),a("p",[t._v("Syntax: LOWER(str)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("LOWER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fOoBar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'foobar'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LCASE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fOoBar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'foobar'")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" REPLACE()")]),t._v(" "),a("p",[t._v("Convert in lowercase the string argument")]),t._v(" "),a("p",[t._v("Syntax: REPLACE(str, from_str, to_str)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BAR'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'fooBARbaz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zzz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ZZZ'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'foobarbaz'")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"substring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substring"}},[t._v("#")]),t._v(" SUBSTRING()")]),t._v(" "),a("p",[t._v("SUBSTRING (or equivalent: SUBSTR) returns the substring starting from the specified position and, optionally, with the specified length")]),t._v(" "),a("p",[t._v("Syntax: "),a("code",[t._v("SUBSTRING(str, start_position)")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'barbaz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'barbaz'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- using negative indexing")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'barbaz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'barbaz'")]),t._v("\n\n")])])]),a("p",[t._v("Syntax: "),a("code",[t._v("SUBSTRING(str, start_position, length)")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'bar'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'bar'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- using negative indexing")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'bar'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobarbaz'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'bar'")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"upper-ucase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upper-ucase"}},[t._v("#")]),t._v(" UPPER() / UCASE()")]),t._v(" "),a("p",[t._v("Convert in uppercase the string argument")]),t._v(" "),a("p",[t._v("Syntax: UPPER(str)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("UPPER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fOoBar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'FOOBAR'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UCASE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fOoBar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'FOOBAR'")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#length"}},[t._v("#")]),t._v(" LENGTH()")]),t._v(" "),a("p",[t._v("Return the length of the string in bytes. Since some characters may be encoded using more than one byte, if you want the length in characters see CHAR_LENGTH()")]),t._v(" "),a("p",[t._v("Syntax: LENGTH(str)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("LENGTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 6")]),t._v("\nLENGTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fööbar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 8 -- contrast with CHAR_LENGTH(...) = 6")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"char-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char-length"}},[t._v("#")]),t._v(" CHAR_LENGTH()")]),t._v(" "),a("p",[t._v("Return the number of characters in the string")]),t._v(" "),a("p",[t._v("Syntax: CHAR_LENGTH(str)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("CHAR_LENGTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 6")]),t._v("\nCHAR_LENGTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fööbar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 6 -- contrast with LENGTH(...) = 8")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"hex-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hex-str"}},[t._v("#")]),t._v(" HEX(str)")]),t._v(" "),a("p",[t._v("Convert the argument to hexadecimal.  This is used for strings.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("HEX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fööbar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('-- 66F6F6626172 -- in "CHARACTER SET latin1" because "F6" is hex for ö')]),t._v("\nHEX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fööbar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('-- 66C3B6C3B6626172  -- in "CHARACTER SET utf8 or utf8mb4" because "C3B6" is hex for ö')]),t._v("\n\n")])])]),a("h4",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ASCII()")]),t._v(" "),a("td",[t._v("Return numeric value of left-most character")])]),t._v(" "),a("tr",[a("td",[t._v("BIN()")]),t._v(" "),a("td",[t._v("Return a string containing binary representation of a number")])]),t._v(" "),a("tr",[a("td",[t._v("BIT_LENGTH()")]),t._v(" "),a("td",[t._v("Return length of argument in bits")])]),t._v(" "),a("tr",[a("td",[t._v("CHAR()")]),t._v(" "),a("td",[t._v("Return the character for each integer passed")])]),t._v(" "),a("tr",[a("td",[t._v("CHAR_LENGTH()")]),t._v(" "),a("td",[t._v("Return number of characters in argument")])]),t._v(" "),a("tr",[a("td",[t._v("CHARACTER_LENGTH()")]),t._v(" "),a("td",[t._v("Synonym for CHAR_LENGTH()")])]),t._v(" "),a("tr",[a("td",[t._v("CONCAT()")]),t._v(" "),a("td",[t._v("Return concatenated string")])]),t._v(" "),a("tr",[a("td",[t._v("CONCAT_WS()")]),t._v(" "),a("td",[t._v("Return concatenate with separator")])]),t._v(" "),a("tr",[a("td",[t._v("ELT()")]),t._v(" "),a("td",[t._v("Return string at index number")])]),t._v(" "),a("tr",[a("td",[t._v("EXPORT_SET()")]),t._v(" "),a("td",[t._v("Return a string such that for every bit set in the value bits, you get an on string and for every unset bit, you get an off string")])]),t._v(" "),a("tr",[a("td",[t._v("FIELD()")]),t._v(" "),a("td",[t._v("Return the index (position) of the first argument in the subsequent arguments")])]),t._v(" "),a("tr",[a("td",[t._v("FIND_IN_SET()")]),t._v(" "),a("td",[t._v("Return the index position of the first argument within the second argument")])]),t._v(" "),a("tr",[a("td",[t._v("FORMAT()")]),t._v(" "),a("td",[t._v("Return a number formatted to specified number of decimal places")])]),t._v(" "),a("tr",[a("td",[t._v("FROM_BASE64()")]),t._v(" "),a("td",[t._v("Decode to a base-64 string and return result")])]),t._v(" "),a("tr",[a("td",[t._v("HEX()")]),t._v(" "),a("td",[t._v("Return a hexadecimal representation of a decimal or string value")])]),t._v(" "),a("tr",[a("td",[t._v("INSERT()")]),t._v(" "),a("td",[t._v("Insert a substring at the specified position up to the specified number of characters")])]),t._v(" "),a("tr",[a("td",[t._v("INSTR()")]),t._v(" "),a("td",[t._v("Return the index of the first occurrence of substring")])]),t._v(" "),a("tr",[a("td",[t._v("LCASE()")]),t._v(" "),a("td",[t._v("Synonym for LOWER()")])]),t._v(" "),a("tr",[a("td",[t._v("LEFT()")]),t._v(" "),a("td",[t._v("Return the leftmost number of characters as specified")])]),t._v(" "),a("tr",[a("td",[t._v("LENGTH()")]),t._v(" "),a("td",[t._v("Return the length of a string in bytes")])]),t._v(" "),a("tr",[a("td",[t._v("LIKE")]),t._v(" "),a("td",[t._v("Simple pattern matching")])]),t._v(" "),a("tr",[a("td",[t._v("LOAD_FILE()")]),t._v(" "),a("td",[t._v("Load the named file")])]),t._v(" "),a("tr",[a("td",[t._v("LOCATE()")]),t._v(" "),a("td",[t._v("Return the position of the first occurrence of substring")])]),t._v(" "),a("tr",[a("td",[t._v("LOWER()")]),t._v(" "),a("td",[t._v("Return the argument in lowercase")])]),t._v(" "),a("tr",[a("td",[t._v("LPAD()")]),t._v(" "),a("td",[t._v("Return the string argument, left-padded with the specified string")])]),t._v(" "),a("tr",[a("td",[t._v("LTRIM()")]),t._v(" "),a("td",[t._v("Remove leading spaces")])]),t._v(" "),a("tr",[a("td",[t._v("MAKE_SET()")]),t._v(" "),a("td",[t._v("Return a set of comma-separated strings that have the corresponding bit in bits set")])]),t._v(" "),a("tr",[a("td",[t._v("MATCH")]),t._v(" "),a("td",[t._v("Perform full-text search")])]),t._v(" "),a("tr",[a("td",[t._v("MID()")]),t._v(" "),a("td",[t._v("Return a substring starting from the specified position")])]),t._v(" "),a("tr",[a("td",[t._v("NOT LIKE")]),t._v(" "),a("td",[t._v("Negation of simple pattern matching")])]),t._v(" "),a("tr",[a("td",[t._v("NOT REGEXP")]),t._v(" "),a("td",[t._v("Negation of REGEXP")])]),t._v(" "),a("tr",[a("td",[t._v("OCT()")]),t._v(" "),a("td",[t._v("Return a string containing octal representation of a number")])]),t._v(" "),a("tr",[a("td",[t._v("OCTET_LENGTH()")]),t._v(" "),a("td",[t._v("Synonym for LENGTH()")])]),t._v(" "),a("tr",[a("td",[t._v("ORD()")]),t._v(" "),a("td",[t._v("Return character code for leftmost character of the argument")])]),t._v(" "),a("tr",[a("td",[t._v("POSITION()")]),t._v(" "),a("td",[t._v("Synonym for LOCATE()")])]),t._v(" "),a("tr",[a("td",[t._v("QUOTE()")]),t._v(" "),a("td",[t._v("Escape the argument for use in an SQL statement")])]),t._v(" "),a("tr",[a("td",[t._v("REGEXP")]),t._v(" "),a("td",[t._v("Pattern matching using regular expressions")])]),t._v(" "),a("tr",[a("td",[t._v("REPEAT()")]),t._v(" "),a("td",[t._v("Repeat a string the specified number of times")])]),t._v(" "),a("tr",[a("td",[t._v("REPLACE()")]),t._v(" "),a("td",[t._v("Replace occurrences of a specified string")])]),t._v(" "),a("tr",[a("td",[t._v("REVERSE()")]),t._v(" "),a("td",[t._v("Reverse the characters in a string")])]),t._v(" "),a("tr",[a("td",[t._v("RIGHT()")]),t._v(" "),a("td",[t._v("Return the specified rightmost number of characters")])]),t._v(" "),a("tr",[a("td",[t._v("RLIKE")]),t._v(" "),a("td",[t._v("Synonym for REGEXP")])]),t._v(" "),a("tr",[a("td",[t._v("RPAD()")]),t._v(" "),a("td",[t._v("Append string the specified number of times")])]),t._v(" "),a("tr",[a("td",[t._v("RTRIM()")]),t._v(" "),a("td",[t._v("Remove trailing spaces")])]),t._v(" "),a("tr",[a("td",[t._v("SOUNDEX()")]),t._v(" "),a("td",[t._v("Return a soundex string")])]),t._v(" "),a("tr",[a("td",[t._v("SOUNDS LIKE")]),t._v(" "),a("td",[t._v("Compare sounds")])]),t._v(" "),a("tr",[a("td",[t._v("SPACE()")]),t._v(" "),a("td",[t._v("Return a string of the specified number of spaces")])]),t._v(" "),a("tr",[a("td",[t._v("STRCMP()")]),t._v(" "),a("td",[t._v("Compare two strings")])]),t._v(" "),a("tr",[a("td",[t._v("SUBSTR()")]),t._v(" "),a("td",[t._v("Return the substring as specified")])]),t._v(" "),a("tr",[a("td",[t._v("SUBSTRING()")]),t._v(" "),a("td",[t._v("Return the substring as specified")])]),t._v(" "),a("tr",[a("td",[t._v("SUBSTRING_INDEX()")]),t._v(" "),a("td",[t._v("Return a substring from a string before the specified number of occurrences of the delimiter")])]),t._v(" "),a("tr",[a("td",[t._v("TO_BASE64()")]),t._v(" "),a("td",[t._v("Return the argument converted to a base-64 string")])]),t._v(" "),a("tr",[a("td",[t._v("TRIM()")]),t._v(" "),a("td",[t._v("Remove leading and trailing spaces")])]),t._v(" "),a("tr",[a("td",[t._v("UCASE()")]),t._v(" "),a("td",[t._v("Synonym for UPPER()")])]),t._v(" "),a("tr",[a("td",[t._v("UNHEX()")]),t._v(" "),a("td",[t._v("Return a string containing hex representation of a number")])]),t._v(" "),a("tr",[a("td",[t._v("UPPER()")]),t._v(" "),a("td",[t._v("Convert to uppercase")])]),t._v(" "),a("tr",[a("td",[t._v("WEIGHT_STRING()")]),t._v(" "),a("td",[t._v("Return the weight string for a string")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);