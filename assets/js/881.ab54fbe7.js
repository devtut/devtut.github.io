(window.webpackJsonp=window.webpackJsonp||[]).push([[881],{1289:function(s,t,e){"use strict";e.r(t);var a=e(31),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"preprocessor-directives"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preprocessor-directives"}},[s._v("#")]),s._v(" Preprocessor directives")]),s._v(" "),e("h2",{attrs:{id:"conditional-expressions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conditional-expressions"}},[s._v("#")]),s._v(" Conditional Expressions")]),s._v(" "),e("p",[s._v("When the following is compiled, it will return a different value depending on which directives are defined.")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Compile with /d:A or /d:B to see the difference")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("SomeFunction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" A")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" B")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),e("p",[s._v("Conditional expressions are typically used to log additional information for debug builds.")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("SomeFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("SomeRiskyMethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArgumentException")]),s._v(" ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s._v("DEBUG")]),s._v("\n        log"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SomeFunc"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s._v("endif")]),s._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("HandleException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"other-compiler-instructions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#other-compiler-instructions"}},[s._v("#")]),s._v(" Other Compiler Instructions")]),s._v(" "),e("h3",{attrs:{id:"line"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#line"}},[s._v("#")]),s._v(" Line")]),s._v(" "),e("p",[e("code",[s._v("#line")]),s._v(" controls the line number and filename reported by the compiler when outputting warnings and errors.")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("line")]),s._v(" 42 ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Answer"')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("line")]),s._v(" filename ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SomeFile.cs"')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" life"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// compiler warning CS0168 in "SomeFile.cs" at Line 42')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("line")]),s._v(" default")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// compiler warnings reset to default")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),e("h3",{attrs:{id:"pragma-checksum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pragma-checksum"}},[s._v("#")]),s._v(" Pragma Checksum")]),s._v(" "),e("p",[e("code",[s._v("#pragma checksum")]),s._v(" allows the specification of a specific checksum for a generated program database (PDB) for debugging.")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" checksum ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MyCode.cs"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{00000000-0000-0000-0000-000000000000}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{0123456789A}"')]),s._v("\n\n")])])]),e("h2",{attrs:{id:"defining-and-undefining-symbols"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#defining-and-undefining-symbols"}},[s._v("#")]),s._v(" Defining and Undefining Symbols")]),s._v(" "),e("p",[s._v("A compiler symbol is a keyword that is defined at compile-time that can be checked for to conditionally execute specific sections of code.")]),s._v(" "),e("p",[s._v("There are three ways to define a compiler symbol. They can be defined via code:")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" MYSYMBOL")]),s._v("\n\n")])])]),e("p",[s._v("They can be defined in Visual Studio, under Project Properties > Build > Conditional Compilation Symbols:")]),s._v(" "),e("img",{attrs:{src:"http://i.imgur.com/PHG04dI.png",alt:"VS Compiler Symbols"}}),s._v(" "),e("p",[e("strong",[s._v("(Note that "),e("code",[s._v("DEBUG")]),s._v(" and "),e("code",[s._v("TRACE")]),s._v(" have their own checkboxes and do not need to be specified explicitly.)")])]),s._v(" "),e("p",[s._v("Or they can be defined at compile-time using the "),e("code",[s._v("/define:[name]")]),s._v(" switch on the C# compiler, "),e("code",[s._v("csc.exe")]),s._v(".")]),s._v(" "),e("p",[s._v("You can also undefined symbols using the "),e("code",[s._v("#undefine")]),s._v(" directive.")]),s._v(" "),e("p",[s._v("The most prevalent example of this is the "),e("code",[s._v("DEBUG")]),s._v(" symbol, which gets defined by Visual Studio when an application is compiled in Debug mode (versus Release mode).")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("DoBusinessLogic")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("AuthenticateUser")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("LoadAccount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ProcessAccount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("FinalizeTransaction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s._v("DEBUG")]),s._v("\n        System"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Diagnostics"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Trace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Unhandled exception!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        System"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Diagnostics"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Trace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n        LoggingFramework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("LogError")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("DisplayFriendlyErrorMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),e("p",[s._v("In the example above, when an error occurs in the business logic of the application, if the application is compiled in Debug mode (and the "),e("code",[s._v("DEBUG")]),s._v(" symbol is set), the error will be written to the trace log, and the exception will be re-thrown for debugging. However, if the application is compiled in Release mode (and no "),e("code",[s._v("DEBUG")]),s._v(" symbol is set), a logging framework is used to quietly log the error, and a friendly error message is displayed to the end user.")]),s._v(" "),e("h2",{attrs:{id:"region-blocks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#region-blocks"}},[s._v("#")]),s._v(" Region Blocks")]),s._v(" "),e("p",[s._v("Use "),e("code",[s._v("#region")]),s._v(" and "),e("code",[s._v("#endregion")]),s._v(" to define a collapsible code region.")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("region")]),s._v(" Event Handlers")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Button_Click")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")])]),s._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EventArgs")]),s._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("DropDown_SelectedIndexChanged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")])]),s._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EventArgs")]),s._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endregion")])]),s._v("\n\n")])])]),e("p",[s._v("These directives are only beneficial when an IDE that supports collapsible regions (such as "),e("a",{attrs:{href:"https://www.visualstudio.com/en-us/visual-studio-homepage-vs.aspx",target:"_blank",rel:"noopener noreferrer"}},[s._v("Visual Studio"),e("OutboundLink")],1),s._v(") is used to edit the code.")]),s._v(" "),e("h2",{attrs:{id:"disabling-and-restoring-compiler-warnings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#disabling-and-restoring-compiler-warnings"}},[s._v("#")]),s._v(" Disabling and Restoring Compiler Warnings")]),s._v(" "),e("p",[s._v("You can disable compiler warnings using "),e("code",[s._v("#pragma warning disable")]),s._v(" and restore them using "),e("code",[s._v("#pragma warning restore")]),s._v(":")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" warning disable CS0168")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// Will not generate the "unused variable" compiler warning since it was disabled')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" warning restore CS0168")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Will generate a compiler warning since the warning was just restored")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),e("p",[s._v("Comma-separated warning numbers are allowed:")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" warning disable CS0168, CS0219")]),s._v("\n\n")])])]),e("p",[s._v("The "),e("code",[s._v("CS")]),s._v(" prefix is optional, and can even be intermixed (though this is not a best practice):")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" warning disable 0168, 0219, CS0414")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"generating-compiler-warnings-and-errors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generating-compiler-warnings-and-errors"}},[s._v("#")]),s._v(" Generating Compiler Warnings and Errors")]),s._v(" "),e("p",[s._v("Compiler warnings can be generated using the "),e("code",[s._v("#warning")]),s._v(" directive, and errors can likewise be generated using the "),e("code",[s._v("#error")]),s._v(" directive.")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" SOME_SYMBOL")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("error")]),s._v(" This is a compiler Error.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("elif")]),s._v(" SOME_OTHER_SYMBOL")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("warning")]),s._v(" This is a compiler Warning.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n")])])]),e("h2",{attrs:{id:"using-the-conditional-attribute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-the-conditional-attribute"}},[s._v("#")]),s._v(" Using the Conditional attribute")]),s._v(" "),e("p",[s._v("Adding a "),e("code",[s._v("Conditional")]),s._v(" attribute from "),e("code",[s._v("System.Diagnostics")]),s._v(" namespace to a method is a clean way to control which methods are called in your builds and which are not.")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" EXAMPLE_A")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("System"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Diagnostics")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Program")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ExampleA")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// This method will be called")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ExampleB")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// This method will not be called")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token attribute"}},[e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Conditional")]),e("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"EXAMPLE_A"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ExampleA")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token range operator"}},[s._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token attribute"}},[e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Conditional")]),e("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"EXAMPLE_B"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ExampleB")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token range operator"}},[s._v("..")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"custom-preprocessors-at-project-level"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-preprocessors-at-project-level"}},[s._v("#")]),s._v(" Custom Preprocessors at project level")]),s._v(" "),e("p",[s._v("It is convenient to set custom conditional preprocessing at project level when some actions need to be skipped lets say for tests.")]),s._v(" "),e("p",[s._v("Go to "),e("code",[s._v("Solution Explorer")]),s._v(" -> Click "),e("kbd",[s._v("Right Mouse")]),s._v(" on project you want to set variable to -> "),e("code",[s._v("Properties")]),s._v(" -> "),e("code",[s._v("Build")]),s._v(" -> In General find field "),e("code",[s._v("Conditional compilation symbols")]),s._v(" and enter your conditional variable here")]),s._v(" "),e("p",[e("a",{attrs:{href:"http://i.stack.imgur.com/B2pi1.png",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"http://i.stack.imgur.com/B2pi1.png",alt:"enter image description here"}}),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("Code example that will skip some code:")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" !IGNOREREFRESHDB")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// will skip code here")]),s._v("\n     db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Initialize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),e("h4",{attrs:{id:"syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[s._v("#")]),s._v(" Syntax")]),s._v(" "),e("ul",[e("li",[s._v("#define "),e("strong",[s._v("[symbol]")]),s._v(" // Defines a compiler symbol.")]),s._v(" "),e("li",[s._v("#undef "),e("strong",[s._v("[symbol]")]),s._v(" // Undefines a compiler symbol.")]),s._v(" "),e("li",[s._v("#warning "),e("strong",[s._v("[warning message]")]),s._v(" // Generates a compiler warning. Useful with #if.")]),s._v(" "),e("li",[s._v("#error "),e("strong",[s._v("[error message]")]),s._v(" // Generates a compiler error. Useful with #if.")]),s._v(" "),e("li",[s._v("#line "),e("strong",[s._v("[line number] (file name)")]),s._v(" // Overrides the compiler line number (and optionally source file name). Used with "),e("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/bb126445.aspx",target:"_blank",rel:"noopener noreferrer"}},[s._v("T4 text templates"),e("OutboundLink")],1),s._v(".")]),s._v(" "),e("li",[s._v("#pragma warning [disable|restore] "),e("strong",[s._v("[warning numbers]")]),s._v(" // Disables/restores compiler warnings.")]),s._v(" "),e("li",[s._v('#pragma checksum "'),e("strong",[s._v("[filename]")]),s._v('" "'),e("strong",[s._v("[guid]")]),s._v('" "'),e("strong",[s._v("[checksum]")]),s._v("\" // Validates a source file's contents.")]),s._v(" "),e("li",[s._v("#region "),e("strong",[s._v("[region name]")]),s._v(" // Defines a collapsible code region.")]),s._v(" "),e("li",[s._v("#endregion // Ends a code region block.")]),s._v(" "),e("li",[s._v("#if "),e("strong",[s._v("[condition]")]),s._v(" // Executes the code below if the condition is true.")]),s._v(" "),e("li",[s._v("#else // Used after an #if.")]),s._v(" "),e("li",[s._v("#elif "),e("strong",[s._v("[condition]")]),s._v(" // Used after an #if.")]),s._v(" "),e("li",[s._v("#endif // Ends a conditional block started with #if.")])]),s._v(" "),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[s._v("#")]),s._v(" Remarks")]),s._v(" "),e("p",[s._v("Preprocessor directives are typically used to make source programs easy to change and easy to compile in different execution environments. Directives in the source file tell the preprocessor to perform specific actions. For example, the preprocessor can replace tokens in the text, insert the contents of other files into the source file, or suppress compilation of part of the file by removing sections of text. Preprocessor lines are recognized and carried out before macro expansion. Therefore, if a macro expands into something that looks like a preprocessor command, that command is not recognized by the preprocessor.")]),s._v(" "),e("p",[s._v("Preprocessor statements use the same character set as source file statements, with the exception that escape sequences are not supported. The character set used in preprocessor statements is the same as the execution character set. The preprocessor also recognizes negative character values.")]),s._v(" "),e("h3",{attrs:{id:"conditional-expressions-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conditional-expressions-2"}},[s._v("#")]),s._v(" Conditional Expressions")]),s._v(" "),e("p",[s._v("Conditional expressions ("),e("code",[s._v("#if")]),s._v(", "),e("code",[s._v("#elif")]),s._v(", etc) do support a limited subset of boolean operators. They are:")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("==")]),s._v(" and "),e("code",[s._v("!=")]),s._v(". These can only be used for testing whether the symbol is true (defined) or false (not defined)")]),s._v(" "),e("li",[e("code",[s._v("&&")]),s._v(", "),e("code",[s._v("||")]),s._v(", "),e("code",[s._v("!")])]),s._v(" "),e("li",[e("code",[s._v("()")])])]),s._v(" "),e("p",[s._v("For example:")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" !DEBUG && (SOME_SYMBOL || SOME_OTHER_SYMBOL) && RELEASE == ")]),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s._v("true")]),s._v("\nConsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OK!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token preprocessor property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n")])])]),e("p",[s._v('would compile code that prints "OK!" to the console if '),e("code",[s._v("DEBUG")]),s._v(" is not defined, either "),e("code",[s._v("SOME_SYMBOL")]),s._v(" or "),e("code",[s._v("SOME_OTHER_SYMBOL")]),s._v(" is defined, and "),e("code",[s._v("RELEASE")]),s._v(" is defined.")]),s._v(" "),e("p",[s._v("Note: These substitutions are done "),e("strong",[s._v("at compile time")]),s._v(" and are therefore not available for inspection at run time. Code eliminated through use of "),e("code",[s._v("#if")]),s._v(" is not part of the compiler's output.")]),s._v(" "),e("p",[s._v("See Also: "),e("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/ed8yd1ha.aspx",target:"_blank",rel:"noopener noreferrer"}},[s._v("C# Preprocessor Directives"),e("OutboundLink")],1),s._v(" at MSDN.")])])}),[],!1,null,null,null);t.default=n.exports}}]);