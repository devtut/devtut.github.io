(window.webpackJsonp=window.webpackJsonp||[]).push([[1230],{1638:function(s,t,a){"use strict";a.r(t);var n=a(31),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"testing-with-tasty"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testing-with-tasty"}},[s._v("#")]),s._v(" Testing with Tasty")]),s._v(" "),a("h2",{attrs:{id:"smallcheck-quickcheck-and-hunit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smallcheck-quickcheck-and-hunit"}},[s._v("#")]),s._v(" SmallCheck, QuickCheck and HUnit")]),s._v(" "),a("div",{staticClass:"language-hs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token import-statement"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Tasty")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token import-statement"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Tasty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SmallCheck "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" SC")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token import-statement"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Tasty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("QuickCheck "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" QC")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token import-statement"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Tasty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("HUnit")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("main")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IO")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("main")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("defaultMain")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("tests")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("tests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TestTree")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("tests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("testGroup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tests"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("smallCheckTests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("quickCheckTests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("unitTests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("smallCheckTests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TestTree")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("smallCheckTests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("testGroup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SmallCheck Tests"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("SC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("testProperty")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"String length <= 3"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("length")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("take")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("SC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("testProperty")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"String length <= 2"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- should fail")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("length")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("take")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("quickCheckTests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TestTree")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("quickCheckTests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("testGroup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"QuickCheck Tests"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("QC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("testProperty")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"String length <= 5"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("length")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("take")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("QC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("testProperty")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"String length <= 4"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- should fail")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("length")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("take")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("unitTests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TestTree")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("unitTests")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("testGroup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Unit Tests"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("testCase")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"String comparison 1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("assertEqual")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"description"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OK"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OK"')]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("testCase")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"String comparison 2"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- should fail")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("assertEqual")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"description"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fail"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fail!"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n")])])]),a("p",[s._v("Install packages:")]),s._v(" "),a("div",{staticClass:"language-hs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("cabal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("tasty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("smallcheck")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("tasty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("quickcheck")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("tasty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("hunit")]),s._v("\n\n")])])]),a("p",[s._v("Run with cabal:")]),s._v(" "),a("div",{staticClass:"language-hs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("cabal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("runhaskell")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("hs")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);