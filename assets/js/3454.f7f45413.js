(window.webpackJsonp=window.webpackJsonp||[]).push([[3454],{3862:function(s,t,a){"use strict";a.r(t);var e=a(31),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"conditions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditions"}},[s._v("#")]),s._v(" Conditions")]),s._v(" "),a("h2",{attrs:{id:"if-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-operator"}},[s._v("#")]),s._v(" If operator")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("condition "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"False"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("p",[s._v("We can use the "),a("strong",[s._v("If")]),s._v(" operator instead of "),a("strong",[s._v("If...Then...Else..End If")]),s._v(" statement blocks.")]),s._v(" "),a("p",[s._v("Consider the following example:")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Then")]),s._v("\n     MsgBox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Else")]),s._v("\n     MsgBox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"False"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v("\n\n")])])]),a("p",[s._v("is the same as")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[s._v("MsgBox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"False"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("p",[a("code",[s._v("If()")]),s._v(" uses "),a("strong",[s._v("short-circuit")]),s._v(" evaluation, which means that it will only evaluate the arguments it uses. If the condition is false (or a "),a("code",[s._v("Nullable")]),s._v(" that is "),a("code",[s._v("Nothing")]),s._v("), the first alternative will not be evaluated at all, and none of its side effects will be observed. This is effectively the same as C#'s "),a("a",{attrs:{href:"//stackoverflow.com/documentation/c%23/18/operators/6029/ternary-operator"}},[s._v("ternary operator")]),s._v(" in the form of "),a("code",[s._v("condition?a:b")]),s._v(".")]),s._v(" "),a("p",[s._v("This is especially useful in avoiding exceptions:")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" z "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("p",[s._v("We all know that dividing by zero will throw an exception, but "),a("code",[s._v("If()")]),s._v(" here guards against this by short-circuiting to only the expression that the condition has already ensured is valid.")]),s._v(" "),a("p",[s._v("Another example:")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" varDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" DateTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("varString "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"N/A"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Convert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ToDateTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("varString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("p",[s._v("If "),a("code",[s._v('varString <> "N/A"')]),s._v(" evaluates to "),a("code",[s._v("False")]),s._v(", it will assign "),a("code",[s._v("varDate")]),s._v("'s value as "),a("code",[s._v("Now.Date")]),s._v(" without evaluating the first expression.")]),s._v(" "),a("p",[s._v("Older versions of VB do not have the "),a("code",[s._v("If()")]),s._v(" operator and have to make do with the "),a("code",[s._v("IIf()")]),s._v(" built-in function. As it's a function, not an operator, it does "),a("strong",[s._v("not")]),s._v(" short-circuit; all expressions are evaluated, with all possible side-effects, including performance penalties, changing state, and throwing exceptions. (Both of the above examples that avoid exceptions would throw if converted to "),a("code",[s._v("IIf")]),s._v(".) If any of these side effects present a problem, there's no way to use an inline conditional; instead, rely on "),a("code",[s._v("If..Then")]),s._v(" blocks as usual.")]),s._v(" "),a("h2",{attrs:{id:"if-then-else"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-then-else"}},[s._v("#")]),s._v(" IF...Then...Else")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" message "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Then")]),s._v("\n    message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"There are no items."')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ElseIf")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Then")]),s._v("\n    message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"There is 1 item."')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Else")]),s._v("\n    message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"There are "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" items."')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);