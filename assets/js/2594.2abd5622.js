(window.webpackJsonp=window.webpackJsonp||[]).push([[2594],{3002:function(t,a,s){"use strict";s.r(a);var n=s(31),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"gui-in-powershell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gui-in-powershell"}},[t._v("#")]),t._v(" GUI in Powershell")]),t._v(" "),s("h2",{attrs:{id:"wpf-gui-for-get-service-cmdlet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wpf-gui-for-get-service-cmdlet"}},[t._v("#")]),t._v(" WPF GUI for Get-Service cmdlet")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add-Type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("AssemblyName PresentationFramework\n \n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[xml]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$XAMLWindow")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'\n<Window \n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    Height="Auto"\n    SizeToContent="WidthAndHeight"\n    Title="Get-Service">\n    <ScrollViewer Padding="10,10,10,0" ScrollViewer.VerticalScrollBarVisibility="Disabled">\n        <StackPanel>\n            <StackPanel Orientation="Horizontal">\n                <Label Margin="10,10,0,10">ComputerName:</Label>\n                <TextBox Name="Input" Margin="10" Width="250px"></TextBox>\n            </StackPanel>\n            <DockPanel>\n                <Button Name="ButtonGetService" Content="Get-Service" Margin="10" Width="150px" IsEnabled="false"/>\n                <Button Name="ButtonClose" Content="Close" HorizontalAlignment="Right" Margin="10" Width="50px"/>\n            </DockPanel>\n        </StackPanel> \n    </ScrollViewer >\n</Window>\n\'')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the Window Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Reader")]),t._v("="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Xml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("XmlNodeReader "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$XAMLWindow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Window")]),t._v("="),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Windows.Markup.XamlReader]")]),t._v("::Load"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Reader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TextChanged Event Handler for Input ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TextboxInput")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Window")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FindName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TextboxInput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_TextChanged"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Invoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ComputerName")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TextboxInput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ButtonGetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IsEnabled = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ComputerName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-ne")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Click Event Handler for ButtonClose")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ButtonClose")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Window")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FindName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ButtonClose"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ButtonClose")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_Click"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Invoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Window")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Click Event Handler for ButtonGetService")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ButtonGetService")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Window")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FindName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ButtonGetService"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ButtonGetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_Click"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Invoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ComputerName")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TextboxInput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Trim"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-Service")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ComputerName "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$computerName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Out-GridView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Title "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Get-Service on '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ComputerName")]),t._v('"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Windows.MessageBox]")]),t._v("::Show"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Windows.MessageBoxButton]")]),t._v("::OK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Windows.MessageBoxImage]")]),t._v("::Error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Open the Window")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Window")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ShowDialog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Out-Null")]),t._v("\n\n")])])]),s("p",[t._v("This creates a dialog window which allows the user to select a computer name, then will display a table of services and their statuses on that computer."),s("br"),t._v("\nThis example uses WPF rather than Windows Forms.")])])}),[],!1,null,null,null);a.default=e.exports}}]);