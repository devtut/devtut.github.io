(window.webpackJsonp=window.webpackJsonp||[]).push([[515],{923:function(n,t,s){"use strict";s.r(t);var a=s(31),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#namespace"}},[n._v("#")]),n._v(" Namespace")]),n._v(" "),s("h2",{attrs:{id:"there-are-no-such-things-as-namespaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#there-are-no-such-things-as-namespaces"}},[n._v("#")]),n._v(" There are no such things as namespaces")]),n._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function-name function"}},[n._v("myfunc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("echo")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"I will never be executed."')]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function-name function"}},[n._v("another_func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v('# this "redeclare" overwrites original function')]),n._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[n._v("myfunc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("echo")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"I am the one and only"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v('# myfunc will print "I will never be executed"')]),n._v("\nmyfunc\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# but if we call another_func first")]),n._v("\nanother_func\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# it gets overwritten and")]),n._v("\nmyfunc\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v('# no prints "I am the one and only"')]),n._v("\n\n")])])]),s("p",[n._v("The latest declaration wins. There are no such things as namespaces!\nHowever, functions can contain other functions.")])])}),[],!1,null,null,null);t.default=e.exports}}]);