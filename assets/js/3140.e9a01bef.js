(window.webpackJsonp=window.webpackJsonp||[]).push([[3140],{3548:function(e,t,s){"use strict";s.r(t);var a=s(31),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"authenticate-api-using-devise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authenticate-api-using-devise"}},[e._v("#")]),e._v(" Authenticate Api using Devise")]),e._v(" "),s("p",[e._v("Devise is authentication solution for Rails. Before going any further i would like to add quick note on API. So API does not handle sessions (is stateless) which means one that provide response after you request, and then requires no further attention, which means no previous or future state is required for the system to work hence whenever we requesting to the server need to pass authentication details with all API and should tell Devise not to store authentication details.")]),e._v(" "),s("h2",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[e._v("#")]),e._v(" Getting Started")]),e._v(" "),s("p",[e._v("So first we will create rails project and setup device")]),e._v(" "),s("p",[e._v("create a rails application")]),e._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("rails "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" devise_example\n\n")])])]),s("p",[e._v("now add devise to gem list")]),e._v(" "),s("blockquote"),e._v(" "),s("p",[e._v("you can find a file named 'Gemfile' at the root of rails project")]),e._v(" "),s("p",[e._v("Then run "),s("code",[e._v("bundle install")])]),e._v(" "),s("p",[e._v("Next, you need to run the generator:")]),e._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("rails generate devise"),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":install")]),e._v("\n\n")])])]),s("p",[e._v("Now on console you can find few instructions just follow it.")]),e._v(" "),s("p",[e._v("Generate devise model")]),e._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("rails generate devise "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("MODEL")]),e._v("\n\n")])])]),s("p",[e._v("Then run "),s("code",[e._v("rake db:migrate")])]),e._v(" "),s("p",[e._v("For more details go to: "),s("a",{attrs:{href:"https://github.com/plataformatec/devise#getting-started",target:"_blank",rel:"noopener noreferrer"}},[e._v("Devise Gem"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"authentication-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication-token"}},[e._v("#")]),e._v(" Authentication Token")]),e._v(" "),s("p",[e._v("Authentication token is used to authenticate a user with a unique token, So\nBefore we proceed with the logic first we need to add "),s("code",[e._v("auth_token")]),e._v(" field to a Devise model")]),e._v(" "),s("p",[e._v("Hence,")]),e._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("rails g migration add_authentication_token_to_users\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("AddAuthenticationTokenToUsers")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("ActiveRecord")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("Migration")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token method-definition"}},[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("change")])]),e._v("\n    add_column "),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":users")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":auth_token")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n    add_index "),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":users")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":auth_token")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" unique"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("end")]),e._v("\n\n")])])]),s("p",[e._v("Then run "),s("code",[e._v("rake db:migrate")])]),e._v(" "),s("p",[e._v("Now we are all set to do authentication using "),s("code",[e._v("auth_token")])]),e._v(" "),s("p",[e._v("In "),s("code",[e._v("app/controllers/application_controllers.rb")])]),e._v(" "),s("p",[e._v("First this line to it")]),e._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("respond_to "),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":json")]),e._v(" \n\n")])])]),s("p",[e._v("this will help rails application respond with both html and json")]),e._v(" "),s("p",[e._v("Then")]),e._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[e._v("protect_from_forgery with"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token symbol"}},[e._v(":null")]),e._v("\n\n")])])]),s("p",[e._v("will change this "),s("code",[e._v(":null")]),e._v(" as we are not dealing with sessions.")]),e._v(" "),s("p",[e._v("now we will add authentication method in application_controller")]),e._v(" "),s("p",[e._v("So, by default Devise uses email as unique field we can also use custom fields, for this case we will be authenticating using user_email and auth_token.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\n before_filter do\n    user_email = params[:user_email].presence\n    user       = user_email && User.find_by_email(user_email)\n\n    if user && Devise.secure_compare(user.authentication_token, params[:auth_token])\n      sign_in user, store: false\n    end\n  end\n\n")])])]),s("blockquote"),e._v(" "),s("p",[e._v("Note: Above code is purely based on your logic i am just trying to explain the working example")]),e._v(" "),s("p",[e._v("On line 6 in the above code you can see that i have set "),s("code",[e._v("store: false")]),e._v(" which will prevent from creating a session on each requests hence we achieved stateless re")])])}),[],!1,null,null,null);t.default=n.exports}}]);