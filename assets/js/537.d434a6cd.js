(window.webpackJsonp=window.webpackJsonp||[]).push([[537],{945:function(t,s,e){"use strict";e.r(s);var a=e(31),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"type-of-shells"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-of-shells"}},[t._v("#")]),t._v(" Type of Shells")]),t._v(" "),e("h2",{attrs:{id:"introduction-to-dot-files"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction-to-dot-files"}},[t._v("#")]),t._v(" Introduction to dot files")]),t._v(" "),e("p",[t._v("In Unix, files and directories beginning with a period usually contain settings for a specific program/a series of programs. Dot files are usually hidden from the user, so you would need to run "),e("code",[t._v("ls -a")]),t._v(" to see them.")]),t._v(" "),e("p",[t._v("An example of a dot file is "),e("a",{attrs:{href:"http://unix.stackexchange.com/a/145254",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v(".bash_history")]),e("OutboundLink")],1),t._v(", which contains the latest executed commands, assuming the user is using Bash.")]),t._v(" "),e("p",[t._v("There are various files that are "),e("a",{attrs:{href:"http://superuser.com/a/46146",target:"_blank",rel:"noopener noreferrer"}},[t._v("sourced"),e("OutboundLink")],1),t._v(" when you are dropped into the Bash shell. The image below, taken from "),e("a",{attrs:{href:"http://www.solipsys.co.uk/new/BashInitialisationFiles.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("this site"),e("OutboundLink")],1),t._v(", shows the decision process behind choosing which files to source at startup.")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://i.stack.imgur.com/ihulP.png",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://i.stack.imgur.com/ihulP.png",alt:"Decision making tree for sourcing files"}}),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"start-an-interactive-shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#start-an-interactive-shell"}},[t._v("#")]),t._v(" Start an interactive shell")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"detect-type-of-shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#detect-type-of-shell"}},[t._v("#")]),t._v(" Detect type of shell")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("shopt")]),t._v(" -q login_shell "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'login'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'not-login'")]),t._v("\n\n")])])]),e("h4",{attrs:{id:"remarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),e("p",[e("strong",[t._v("Login Shell")])]),t._v(" "),e("p",[t._v("A login shell is one whose first character of argument zero is a -, or one started with the â€“login option.\nThe Initialization is more comprehensive than in an normal interactive (sub) shell.")]),t._v(" "),e("p",[e("strong",[t._v("Interactive Shell")])]),t._v(" "),e("p",[t._v("An interactive shell is one started without non-option arguments and without the -c option whose standard input and error are both connected to terminals (as determined by isatty(3)), or one started with the -i option. PS1 is set and $- includes i if bash is interactive, allowing a shell script or a startup file to test this state.")]),t._v(" "),e("p",[e("strong",[t._v("non-interactive Shell")])]),t._v(" "),e("p",[t._v("A non-interactive Shell is a shell in which the user can not interact with the shell. As en example, a shell running a script is always a non-interactive shell. All the same, the script can still access its tty.")]),t._v(" "),e("p",[e("strong",[t._v("Configuring a login shell")])]),t._v(" "),e("p",[t._v("On logging in:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("If "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/etc/profile'")]),t._v(" exists, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" it. \nIf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~/.bash_profile'")]),t._v(" exists, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" it, \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~/.bash_login'")]),t._v(" exists, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" it, \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~/.profile'")]),t._v(" exists, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" it. \n\n")])])]),e("p",[e("strong",[t._v("For non-login interactive shells")])]),t._v(" "),e("p",[t._v("On starting up:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("If `~/.bashrc' exists, "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" it.\n\n")])])]),e("p",[e("strong",[t._v("For non-interactive shells")])]),t._v(" "),e("p",[t._v("On starting up:\nIf the environment variable ENV is non-null, expand the variable and source the file named by the value. If Bash is not started in Posix mode, it looks for BASH_ENV before ENV.")])])}),[],!1,null,null,null);s.default=n.exports}}]);