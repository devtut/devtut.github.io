(window.webpackJsonp=window.webpackJsonp||[]).push([[1207],{1615:function(a,s,t){"use strict";t.r(s);var e=t(31),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"optimization"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#optimization"}},[a._v("#")]),a._v(" Optimization")]),a._v(" "),t("h2",{attrs:{id:"compiling-your-program-for-profiling"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compiling-your-program-for-profiling"}},[a._v("#")]),a._v(" Compiling your Program for Profiling")]),a._v(" "),t("p",[a._v("The GHC compiler has "),t("a",{attrs:{href:"https://downloads.haskell.org/%7Eghc/latest/docs/html/users_guide/profiling.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("mature support"),t("OutboundLink")],1),a._v(" for compiling with profiling annotations.")]),a._v(" "),t("p",[a._v("Using the "),t("code",[a._v("-prof")]),a._v(" and "),t("code",[a._v("-fprof-auto")]),a._v(" flags when compiling will add support to your binary for profiling flags for use at runtime.")]),a._v(" "),t("p",[a._v("Suppose we have this program:")]),a._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("main")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("print")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("fib")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("fib")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("n")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("n")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("fib")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("n")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("fib")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("n")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("p",[a._v("Compiled it like so:")]),a._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("ghc")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("prof")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("fprof")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("auto")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("rtsopts")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("Main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("hs")]),a._v("\n\n")])])]),t("p",[a._v("Then ran it with runtime system options for profiling:")]),a._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("./")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("Main")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("RTS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("p")]),a._v("\n\n")])])]),t("p",[a._v("We will see a "),t("code",[a._v("main.prof")]),a._v(" file created post execution (once the program has exited), and this will give us all sorts of profiling information such as cost centers which gives us a breakdown of the cost associated with running the various parts of the code:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n   Wed Oct 12 16:14 2011 Time and Allocation Profiling Report  (Final)\n\n           Main +RTS -p -RTS\n\n        total time  =        0.68 secs   (34 ticks @ 20 ms)\n        total alloc = 204,677,844 bytes  (excludes profiling overheads)\n\nCOST CENTRE MODULE  %time %alloc\n\nfib         Main    100.0  100.0\n\n\n                                                      individual     inherited\nCOST CENTRE MODULE                  no.     entries  %time %alloc   %time %alloc\n\nMAIN        MAIN                    102           0    0.0    0.0   100.0  100.0\n CAF        GHC.IO.Handle.FD        128           0    0.0    0.0     0.0    0.0\n CAF        GHC.IO.Encoding.Iconv   120           0    0.0    0.0     0.0    0.0\n CAF        GHC.Conc.Signal         110           0    0.0    0.0     0.0    0.0\n CAF        Main                    108           0    0.0    0.0   100.0  100.0\n  main      Main                    204           1    0.0    0.0   100.0  100.0\n   fib      Main                    205     2692537  100.0  100.0   100.0  100.0\n\n")])])]),t("h2",{attrs:{id:"cost-centers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cost-centers"}},[a._v("#")]),a._v(" Cost Centers")]),a._v(" "),t("p",[a._v("Cost centers are annotations on a Haskell program which can be added automatically by the GHC compiler -- using "),t("code",[a._v("-fprot-auto")]),a._v(" -- or by a programmer using "),t("code",[a._v('{-# SCC "name" #-} <expression>')]),a._v(', where "name" is any name you wish and '),t("code",[a._v("<expression>")]),a._v(" is any valid Haskell expression:")]),a._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("-- Main.hs")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("main")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("IO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("main")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("l")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9999999")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("print")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("$")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('{-# SCC "print_list" #-}')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("length")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("l")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("p",[a._v("Compiling with "),t("code",[a._v("-fprof")]),a._v(" and running with "),t("code",[a._v("+RTS -p")]),a._v(" e.g. "),t("code",[a._v("ghc -prof -rtsopts Main.hs && ./Main.hs +RTS -p")]),a._v(" would produce "),t("code",[a._v("Main.prof")]),a._v(" once the program's exited.")])])}),[],!1,null,null,null);s.default=n.exports}}]);