(window.webpackJsonp=window.webpackJsonp||[]).push([[1121],{1528:function(e,t,a){"use strict";a.r(t);var r=a(31),i=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"git-clean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-clean"}},[e._v("#")]),e._v(" Git Clean")]),e._v(" "),a("h2",{attrs:{id:"clean-ignored-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean-ignored-files"}},[e._v("#")]),e._v(" Clean Ignored Files")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git clean -fX\n\n")])])]),a("p",[e._v("Will remove all "),a("a",{attrs:{href:"https://stackoverflow.com/documentation/git/245/ignoring-files-and-folders",target:"_blank",rel:"noopener noreferrer"}},[e._v("ignored"),a("OutboundLink")],1),e._v(" files from the current directory and all subdirectories.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git clean -Xn\n\n")])])]),a("p",[e._v("Will preview all files that will be cleaned.")]),e._v(" "),a("h2",{attrs:{id:"clean-all-untracked-directories"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean-all-untracked-directories"}},[e._v("#")]),e._v(" Clean All Untracked Directories")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git clean -fd\n\n")])])]),a("p",[e._v("Will remove all untracked directories and the files within them. It will start at the current working directory and will iterate through all subdirectories.")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git clean -dn\n\n")])])]),a("p",[e._v("Will preview all directories that will be cleaned.")]),e._v(" "),a("h2",{attrs:{id:"forcefully-remove-untracked-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#forcefully-remove-untracked-files"}},[e._v("#")]),e._v(" Forcefully remove untracked files")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git clean -f\n\n")])])]),a("p",[e._v("Will remove all untracked files.")]),e._v(" "),a("h2",{attrs:{id:"clean-interactively"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean-interactively"}},[e._v("#")]),e._v(" Clean Interactively")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("git clean -i\n\n")])])]),a("p",[e._v("Will print out items to be removed and ask for a confirmation via commands like the follow:")]),e._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[e._v("Would remove the following items:\n  folder/file1.py\n  folder/file2.py\n*** Commands ***\n    1: clean        2: filter by pattern        3: select by numbers        4: ask each\n    5: quit        6: help\nWhat now>\n\n")])])]),a("p",[e._v("Interactive option "),a("code",[e._v("i")]),e._v(" can be added along with other options like "),a("code",[e._v("X")]),e._v(", "),a("code",[e._v("d")]),e._v(", etc.")]),e._v(" "),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[e._v("#")]),e._v(" Syntax")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("git clean [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <path>")])])]),e._v(" "),a("h4",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Parameter")]),e._v(" "),a("th",[e._v("Details")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("-d")]),e._v(" "),a("td",[e._v("Remove untracked directories in addition to untracked files. If an untracked directory is managed by a different Git repository, it is not removed by default. Use -f option twice if you really want to remove such a directory.")])]),e._v(" "),a("tr",[a("td",[e._v("-f, --force")]),e._v(" "),a("td",[e._v("If the Git configuration variable clean. "),a("code",[e._v("requireForce")]),e._v(" is not set to false, git clean will refuse to delete files or directories unless given -f, -n or -i. Git will refuse to delete directories with .git sub directory or file unless a second -f is given.")])]),e._v(" "),a("tr",[a("td",[e._v("-i, --interactive")]),e._v(" "),a("td",[e._v("Interactively prompts the removal of each file.")])]),e._v(" "),a("tr",[a("td",[e._v("-n, --dry-run")]),e._v(" "),a("td",[e._v("Only displays a list of files to be removed, without actually removing them.")])]),e._v(" "),a("tr",[a("td",[e._v("-q,--quiet")]),e._v(" "),a("td",[e._v("Only display errors, not the list of successfully removed files.")])])])])])}),[],!1,null,null,null);t.default=i.exports}}]);