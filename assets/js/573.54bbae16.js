(window.webpackJsonp=window.webpackJsonp||[]).push([[573],{982:function(t,e,n){"use strict";n.r(e);var a=n(31),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"implementation-defined-behaviour"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#implementation-defined-behaviour"}},[t._v("#")]),t._v(" Implementation-defined behaviour")]),t._v(" "),n("h2",{attrs:{id:"right-shift-of-a-negative-integer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#right-shift-of-a-negative-integer"}},[t._v("#")]),t._v(" Right shift of a negative integer")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" signed_integer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The right shift operation exhibits implementation-defined behavior:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" signed_integer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),n("h2",{attrs:{id:"assigning-an-out-of-range-value-to-an-integer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#assigning-an-out-of-range-value-to-an-integer"}},[t._v("#")]),t._v(" Assigning an out-of-range value to an integer")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Supposing SCHAR_MAX, the maximum value that can be represented by a signed char, is")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 127, the behavior of this assignment is implementation-defined:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("signed")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" integer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninteger "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),n("h2",{attrs:{id:"allocating-zero-bytes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#allocating-zero-bytes"}},[t._v("#")]),t._v(" Allocating zero bytes")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The allocation functions have implementation-defined behavior when the requested size")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// of the allocation is zero.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),n("h2",{attrs:{id:"representation-of-signed-integers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#representation-of-signed-integers"}},[t._v("#")]),t._v(" Representation of signed integers")]),t._v(" "),n("p",[t._v("Each signed integer type may be represented in any one of three formats; it is implementation-defined which one is used.  The implementation in use for any given signed integer type at least as wide as "),n("code",[t._v("int")]),t._v(" can be determined at runtime from the two lowest-order bits of the representation of value "),n("code",[t._v("-1")]),t._v(" in that type, like so:")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" sign_magnitude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ones_compl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" twos_compl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("SIGN_REP")]),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SIGN_REP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" sign_magnitude"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* do something */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" ones_compl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* do otherwise */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" twos_compl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* do yet else  */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("_Static_assert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SIGN_REP")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bogus sign representation"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("The same pattern applies to the representation of narrower types, but they cannot be tested by this technique because the operands of "),n("code",[t._v("&")]),t._v(' are subject to "the usual arithmetic conversions" before the result is computed.')]),t._v(" "),n("h4",{attrs:{id:"remarks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),n("h3",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),n("p",[t._v("The C standard describes the language syntax, the functions provided by the standard library, and the behavior of conforming C processors (roughly speaking, compilers) and conforming C programs.  With respect to behavior, the standard for the most part specifies particular behaviors for programs and processors.  On the other hand, some operations have explicit or implicit "),n("strong",[t._v("undefined behavior")]),t._v(" -- such operations are always to be avoided, as you cannot rely on anything about them.  In between, there are a variety of "),n("strong",[t._v("implementation defined")]),t._v(" behaviors.  These behaviors may vary between C processors, runtimes, and standard libraries (collectively, "),n("strong",[t._v("implementations")]),t._v("), but they are consistent and reliable for any given implementation, and conforming implementations document their behavior in each of these areas.")]),t._v(" "),n("p",[t._v("It is sometimes reasonable for a program to rely on implementation-defined behavior.  For example, if the program is anyway specific to a particular operating environment then relying on implementation-defined behaviors general to the common processors for that environment is unlikely to be a problem.  Alternatively, one can use conditional compilation directives to select implementation-defined behaviors appropriate for the implementation in use.  In any case, it is essential to know which operations have implementation defined behavior, so as to either avoid them or to make an informed decision about whether and how to use them.")]),t._v(" "),n("p",[t._v("The balance of these remarks constitute a list of all the implementation-defined behaviors and characteristics specified in the C2011 standard, with references to the standard.  Many of them use "),n("a",{attrs:{href:"http://port70.net/%7Ensz/c/c11/n1570.html#3",target:"_blank",rel:"noopener noreferrer"}},[t._v("the terminology of the standard"),n("OutboundLink")],1),t._v(".  Some others rely more generally on the context of the standard, such as the eight stages of translating source code into a program, or the difference between hosted and freestanding implementations.  Some that may be particularly surprising or notable are presented in bold typeface.  Not all the behaviors described are supported by earlier C standards, but generally speaking, they have implementation-defined behavior in all versions of the standard that support them.")]),t._v(" "),n("h3",{attrs:{id:"programs-and-processors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#programs-and-processors"}},[t._v("#")]),t._v(" Programs and Processors")]),t._v(" "),n("h3",{attrs:{id:"general"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[t._v("#")]),t._v(" General")]),t._v(" "),n("li",[t._v("\n**The number of bits in one byte** ([3.6/3](http://port70.net/%7Ensz/c/c11/n1570.html#3.6p3)). At least `8`, the actual value can be queried with the macro `CHAR_BIT`.\n")]),t._v(" "),n("li",[t._v('\nWhich output messages are considered "diagnostic messages" ([3.10/1](http://port70.net/%7Ensz/c/c11/n1570.html#3.10p1))\n')]),t._v(" "),n("h3",{attrs:{id:"source-translation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#source-translation"}},[t._v("#")]),t._v(" Source translation")]),t._v(" "),n("li",[t._v("\nThe manner in which physical source file multibyte characters are mapped to the source character set ([5.1.1.2/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.1.2p1)).\n")]),t._v(" "),n("li",[t._v("\nWhether non-empty sequences of non-newline whitespace are replaced by single spaces during translation phase 3 ([5.1.1.2/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.1.2p1))\n")]),t._v(" "),n("li",[t._v("\nThe execution-set character(s) to which character literals and characters in string constants are converted (during translation phase 5) when there is otherwise no corresponding character ([5.1.1.2/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.1.2p1)).\n")]),t._v(" "),n("h3",{attrs:{id:"operating-environment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#operating-environment"}},[t._v("#")]),t._v(" Operating environment")]),t._v(" "),n("li",[t._v("\nThe manner in which the diagnostic messages to be emitted are identified ([5.1.1.3/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.1.3p1)).\n")]),t._v(" "),n("li",[t._v("\nThe name and type of the function called at startup in a freestanding implementation ([5.1.2.1/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.1p1)).\n")]),t._v(" "),n("li",[t._v("\nWhich library facilities are available in a freestanding implementation, beyond a specified minimal set ([5.1.2.1/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.1p1)).\n")]),t._v(" "),n("li",[t._v("\nThe effect of program termination in a freestanding environment ([5.1.2.1/2](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.1p2)).\n")]),t._v(" "),n("li",[t._v("\nIn a hosted environment, any allowed signatures for the `main()` function other than `int main(int argc, char *arg[])` and `int main(void)` ([5.1.2.2.1/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.2.1p1)).\n")]),t._v(" "),n("li",[t._v("\nThe manner in which a hosted implementation defines the strings pointed to by the second argument to `main()` ([5.1.2.2.1/2](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.2.1p2)).\n")]),t._v(" "),n("li",[t._v('\nWhat constitutes an "interactive device" for the purpose of sections [5.1.2.3](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.3) (Program Execution) and [7.21.3](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.3) (Files) ([5.1.2.3/7](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.3p7)).\n')]),t._v(" "),n("li",[t._v("\nAny restrictions on objects referred to by interrupt-handler routines in an optimizing implementation ([5.1.2.3/10](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.3p10)).\n")]),t._v(" "),n("li",[t._v("\nIn a freestanding implementation, whether multiple threads of execution are supported ([5.1.2.4/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.1.2.4p1)).\n")]),t._v(" "),n("li",[t._v("\nThe values of the members of the execution character set ([5.2.1/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.1p1)).\n")]),t._v(" "),n("li",[t._v("\nThe `char` values corresponding to the defined alphabetic escape sequences ([5.2.2/3](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.2p3)).\n")]),t._v(" "),n("li",[t._v("\n**The integer and floating-point numeric limits and characteristics** ([5.2.4.2/1](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.4.2p1)).\n")]),t._v(" "),n("li",[t._v("\nThe accuracy of floating-point arithmetic operations and of the standard library's conversions from internal floating point representations to string representations ([5.2.4.2.2/6](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.4.2.2p6)).\n")]),t._v(" "),n("li",[t._v("\nThe value of macro `FLT_ROUNDS`, which encodes the default floating-point rounding mode ([5.2.4.2.2/8](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.4.2.2p8)).\n")]),t._v(" "),n("li",[t._v("\nThe rounding behaviors characterized by supported values of `FLT_ROUNDS` greater than 3 or less than -1 ([5.2.4.2.2/8](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.4.2.2p8)).\n")]),t._v(" "),n("li",[t._v("\nThe value of macro `FLT_EVAL_METHOD`, which characterizes floating-point evaluation behavior ([5.2.4.2.2/9](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.4.2.2p9)).\n")]),t._v(" "),n("li",[t._v("\nThe behavior characterized by any supported values of `FLT_EVAL_METHOD` less than -1 ([5.2.4.2.2/9](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.4.2.2p9)).\n")]),t._v(" "),n("li",[t._v("\nThe values of macros `FLT_HAS_SUBNORM`, `DBL_HAS_SUBNORM`, and `LDBL_HAS_SUBNORM`, characterizing whether the standard floating-point formats support subnormal numbers ([5.2.4.2.2/10](http://port70.net/%7Ensz/c/c11/n1570.html#5.2.4.2.2p10))\n")]),t._v(" "),n("h3",{attrs:{id:"types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[t._v("#")]),t._v(" Types")]),t._v(" "),n("li",[t._v("\nThe result of attempting to (indirectly) access an object with thread storage duration from a thread other than the one with which the object is associated ([6.2.4/4](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.4p4))\n")]),t._v(" "),n("li",[t._v("\nThe value of a `char` to which a character outside the basic execution set has been assigned ([6.2.5/3](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.5p3)).\n")]),t._v(" "),n("li",[t._v("\nThe supported extended signed integer types, if any, ([6.2.5/4](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.5p4)), and any extension keywords used to identify them.\n")]),t._v(" "),n("li",[t._v("\n**Whether `char` has the same representation and behavior as `signed char` or as `unsigned char`** ([6.2.5/15](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.5p15)). Can be queried with `CHAR_MIN`, which is either `0` or `SCHAR_MIN` if `char` is unsigned or signed, respectively.\n")]),t._v(" "),n("li",[t._v("\n**The number, order, and encoding of bytes in the representations of objects**, except where explicitly specified by the standard ([6.2.6.1/2](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.6.1p2)).\n")]),t._v(" "),n("li",[t._v("\n**Which of the three recognized forms of integer representation applies in any given situation, and whether certain bit patterns of integer objects are trap representations** ([6.2.6.2/2](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.6.2p2)).\n")]),t._v(" "),n("li",[t._v("\nThe alignment requirement of each type ([6.2.8/1](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.8p1)).\n")]),t._v(" "),n("li",[t._v("\nWhether and in what contexts any extended alignments are supported ([6.2.8/3](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.8p3)).\n")]),t._v(" "),n("li",[t._v("\nThe set of supported extended alignments ([6.2.8/4](http://port70.net/%7Ensz/c/c11/n1570.html#6.2.8p4)).\n")]),t._v(" "),n("li",[t._v("\nThe integer conversion ranks of any extended signed integer types relative to each other ([6.3.1.1/1](http://port70.net/%7Ensz/c/c11/n1570.html#6.3.1.1p1)).\n")]),t._v(" "),n("li",[t._v("\n**The effect of assigning an out-of-range value to a signed integer** ([6.3.1.3/3](http://port70.net/%7Ensz/c/c11/n1570.html#6.3.1.3p3)).\n")]),t._v(" "),n("li",[t._v("\nWhen an in-range but unrepresentable value is assigned to a floating-point object, how the representable value stored in the object is chosen from between the two nearest representable values ([6.3.1.4/2](http://port70.net/%7Ensz/c/c11/n1570.html#6.3.1.4p2);  [6.3.1.5/1](http://port70.net/%7Ensz/c/c11/n1570.html#6.3.1.5p1); [6.4.4.2/3](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.4.2p3)).\n")]),t._v(" "),n("li",[t._v("\n**The result of converting an integer to a pointer type**, except for integer constant expressions with value `0` ([6.3.2.3/5](http://port70.net/%7Ensz/c/c11/n1570.html#6.3.2.3p5)).\n")]),t._v(" "),n("h3",{attrs:{id:"source-form"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#source-form"}},[t._v("#")]),t._v(" Source form")]),t._v(" "),n("li",[t._v("\nThe locations within `#pragma` directives where header name tokens are recognized ([6.4/4](http://port70.net/%7Ensz/c/c11/n1570.html#6.4p4)).\n")]),t._v(" "),n("li",[t._v("\nThe characters, including multibyte characters, other than underscore, unaccented Latin letters, universal character names, and decimal digits that may appear in identifiers ([6.4.2.1/1](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.2.1p1)).\n")]),t._v(" "),n("li",[t._v("\n**The number of significant characters in an identifier** ([6.4.2.1/5](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.2.1p5)).\n")]),t._v(" "),n("li",[t._v("\nWith some exceptions, the manner in which the source characters in an integer character constant are mapped to execution-set characters ([6.4.4.4/2](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.4.4p2); [6.4.4.4/10](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.4.4p10)).\n")]),t._v(" "),n("li",[t._v("\nThe current locale used for computing the value of a wide character constant, and most other aspects of the conversion for many such constants ([6.4.4.4/11](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.4.4p11)).\n")]),t._v(" "),n("li",[t._v("\nWhether differently-prefixed wide string literal tokens can be concatenated and, if so, the treatment of the resulting multibyte character sequence ([6.4.5/5](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.5p5))\n")]),t._v(" "),n("li",[t._v("\nThe locale used during translation phase 7 to convert wide string literals to multibyte character sequences, and their value when the result is not representable in the execution character set ([6.4.5/6](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.5p6)).\n")]),t._v(" "),n("li",[t._v("\nThe manner in which header names are mapped to file names ([6.4.7/2](http://port70.net/%7Ensz/c/c11/n1570.html#6.4.7p2)).\n")]),t._v(" "),n("h3",{attrs:{id:"evaluation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#evaluation"}},[t._v("#")]),t._v(" Evaluation")]),t._v(" "),n("li",[t._v("\nWhether and how floating-point expressions are contracted when `FP_CONTRACT` is not used ([6.5/8](http://port70.net/%7Ensz/c/c11/n1570.html#6.5p8)).\n")]),t._v(" "),n("li",[t._v("\n**The values of the results of the `sizeof` and `_Alignof` operators** ([6.5.3.4/5](http://port70.net/%7Ensz/c/c11/n1570.html#6.5.3.4p5)).\n")]),t._v(" "),n("li",[t._v("\nThe size of the result type of pointer subtraction ([6.5.6/9](http://port70.net/%7Ensz/c/c11/n1570.html#6.5.6p9)).\n")]),t._v(" "),n("li",[t._v("\n**The result of right-shifting a signed integer with a negative value** ([6.5.7/5](http://port70.net/%7Ensz/c/c11/n1570.html#6.5.7p5)).\n")]),t._v(" "),n("h3",{attrs:{id:"runtime-behavior"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#runtime-behavior"}},[t._v("#")]),t._v(" Runtime behavior")]),t._v(" "),n("li",[t._v("\nThe extent to which the `register` keyword is effective ([6.7.1/6](http://port70.net/%7Ensz/c/c11/n1570.html#6.7.1p6)).\n")]),t._v(" "),n("li",[t._v("\nWhether the type of a bitfield declared as `int` is the same type as `unsigned int` or as `signed int` ([6.7.2/5](http://port70.net/%7Ensz/c/c11/n1570.html#6.7.2p5)).\n")]),t._v(" "),n("li",[t._v("\nWhat types bitfields may take, other than optionally-qualified `_Bool`, `signed int`, and `unsigned int`; whether bitfields may have atomic types ([6.7.2.1/5](http://port70.net/%7Ensz/c/c11/n1570.html#6.7.2.1p5)).\n")]),t._v(" "),n("li",[t._v("\nAspects of how implementations lay out the storage for bitfields ([6.7.2.1/11](http://port70.net/%7Ensz/c/c11/n1570.html#6.7.2.1p11)).\n")]),t._v(" "),n("li",[t._v("\nThe alignment of non-bitfield members of structures and unions ([6.7.2.1/14](http://port70.net/%7Ensz/c/c11/n1570.html#6.7.2.1p14)).\n")]),t._v(" "),n("li",[t._v("\nThe underlying type for each enumerated type ([6.7.2.2/4](http://port70.net/%7Ensz/c/c11/n1570.html#6.7.2.2p4)).\n")]),t._v(" "),n("li",[t._v('\nWhat constitutes an "access" to an object of `volatile`-qualifed type ([6.7.3/7](http://port70.net/%7Ensz/c/c11/n1570.html#6.7.3p7)).\n')]),t._v(" "),n("li",[t._v("\nThe effectiveness of `inline` function declarations ([6.7.4/6](http://port70.net/%7Ensz/c/c11/n1570.html#6.7.4p6)).\n")]),t._v(" "),n("h3",{attrs:{id:"preprocessor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#preprocessor"}},[t._v("#")]),t._v(" Preprocessor")]),t._v(" "),n("li",[t._v("\nWhether character constants are converted to integer values the same way in preprocessor conditionals as in ordinary expressions, and whether a single-character constant may have a negative value ([6.10.1/4](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.1p4)).\n")]),t._v(" "),n("li",[t._v("\nThe locations searched for files designated in an `#include` directive ([6.10.2/2-3](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.2p2)).\n")]),t._v(" "),n("li",[t._v("\nThe manner in which a header name is formed from the tokens of a multi-token `#include` directive ([6.10.2/4](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.2p4)).\n")]),t._v(" "),n("li",[t._v("\nThe limit for `#include` nesting ([6.10.2/6](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.2p6)).\n")]),t._v(" "),n("li",[t._v("\nWhether a `\\` character is inserted before the `\\` introducing a universal character name in the result of the preprocessor's `#` operator ([6.10.3.2/2](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.3.2p2)).\n")]),t._v(" "),n("li",[t._v("\nThe behavior of the `#pragma` preprocessing directive for pragmas other than `STDC` ([6.10.6/1](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.6p1)).\n")]),t._v(" "),n("li",[t._v("\nThe value of the `__DATE__` and `__TIME__` macros if no translation date or time, respectively, is available ([6.10.8.1/1](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.8.1p1)).\n")]),t._v(" "),n("li",[t._v("\nThe internal character encoding used for `wchar_t` if macro `__STDC_ISO_10646__` is not defined ([6.10.8.2/1](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.8.2p1)).\n")]),t._v(" "),n("li",[t._v("\nThe internal character encoding used for `char32_t` if macro `__STDC_UTF_32__` is not defined ([6.10.8.2/1](http://port70.net/%7Ensz/c/c11/n1570.html#6.10.8.2p1)).\n")]),t._v(" "),n("h3",{attrs:{id:"standard-library"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#standard-library"}},[t._v("#")]),t._v(" Standard Library")]),t._v(" "),n("h3",{attrs:{id:"general-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#general-2"}},[t._v("#")]),t._v(" General")]),t._v(" "),n("ul",[n("li",[t._v("The format of the messages emitted when assertions fail ("),n("a",{attrs:{href:"http://port70.net/%7Ensz/c/c11/n1570.html#7.2.1.1p2",target:"_blank",rel:"noopener noreferrer"}},[t._v("7.2.1.1/2"),n("OutboundLink")],1),t._v(").")])]),t._v(" "),n("h3",{attrs:{id:"floating-point-environment-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#floating-point-environment-functions"}},[t._v("#")]),t._v(" Floating-point environment functions")]),t._v(" "),n("li",[t._v("\nAny additional floating-point exceptions beyond those defined by the standard ([7.6/6](http://port70.net/%7Ensz/c/c11/n1570.html#7.6p6)).\n")]),t._v(" "),n("li",[t._v("\nAny additional floating-point rounding modes beyond those defined by the standard ([7.6/8](http://port70.net/%7Ensz/c/c11/n1570.html#7.6p8)).\n")]),t._v(" "),n("li",[t._v("\nAny additional floating-point environments beyond those defined by the standard ([7.6/10](http://port70.net/%7Ensz/c/c11/n1570.html#7.6p10)).\n")]),t._v(" "),n("li",[t._v("\nThe default value of the floating-point environment access switch ([7.6.1/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.6.1p2)).\n")]),t._v(" "),n("li",[t._v("\nThe representation of the floating-point status flags recorded by `fegetexceptflag()` ([7.6.2.2/1](http://port70.net/%7Ensz/c/c11/n1570.html#7.6.2.2p1)).\n")]),t._v(" "),n("li",[t._v('\nWhether the `feraiseexcept()` function additionally raises the "inexact" floating-point exception whenever it raises the "overflow" or "underflow" floating-point exception ([7.6.2.3/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.6.2.3p2)).\n')]),t._v(" "),n("h3",{attrs:{id:"locale-related-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#locale-related-functions"}},[t._v("#")]),t._v(" Locale-related functions")]),t._v(" "),n("ul",[n("li",[t._v("The locale strings other than "),n("code",[t._v('"C"')]),t._v(" supported by "),n("code",[t._v("setlocale()")]),t._v(" ("),n("a",{attrs:{href:"http://port70.net/%7Ensz/c/c11/n1570.html#7.11.1.1p3",target:"_blank",rel:"noopener noreferrer"}},[t._v("7.11.1.1/3"),n("OutboundLink")],1),t._v(").")])]),t._v(" "),n("h3",{attrs:{id:"math-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#math-functions"}},[t._v("#")]),t._v(" Math functions")]),t._v(" "),n("li",[t._v("\nThe types represented by `float_t` and `double_t` when the `FLT_EVAL_METHOD` macro has a value different from `0`, `1`, and `2` ([7.12/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.12p2)).\n")]),t._v(" "),n("li",[t._v("\nAny supported floating-point classifications beyond those defined by the standard ([7.12/6](http://port70.net/%7Ensz/c/c11/n1570.html#7.12p6)).\n")]),t._v(" "),n("li",[t._v("\nThe value returned by the `math.h` functions in the event of a domain error ([7.12.1/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.12.1p2)).\n")]),t._v(" "),n("li",[t._v("\nThe value returned by the `math.h` functions in the event of a pole error ([7.12.1/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.12.1p3)).\n")]),t._v(" "),n("li",[t._v("\nThe value returned by the `math.h` functions when the result underflows, and aspects of whether `errno` is set to `ERANGE` and whether a floating-point exception is raised under those circumstances ([7.12.1/6](http://port70.net/%7Ensz/c/c11/n1570.html#7.12.1p6)).\n")]),t._v(" "),n("li",[t._v("\nThe default value of the FP-contraction switch ([7.12.2/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.12.2p2)).\n")]),t._v(" "),n("li",[t._v("\nWhether the `fmod()` functions return 0 or raise a domain error when their second argument is 0 ([7.12.10.1/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.12.10.1p3)).\n")]),t._v(" "),n("li",[t._v("\nWhether the `remainder()` functions return 0 or raise a domain error when their second argument is 0 ([7.12.10.2/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.12.10.2p3)).\n")]),t._v(" "),n("li",[t._v("\nThe number of significant bits in the quotient moduli computed by the `remquo()` functions ([7.12.10.3/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.12.10.3p2)).\n")]),t._v(" "),n("li",[t._v("\nWhether the `remquo()` functions return 0 or raise a domain error when their second argument is 0 ([7.12.10.3/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.12.10.3p3)).\n")]),t._v(" "),n("h3",{attrs:{id:"signals"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#signals"}},[t._v("#")]),t._v(" Signals")]),t._v(" "),n("li",[t._v("\nThe complete set of supported signals, their semantics, and their default handling ([7.14/4](http://port70.net/%7Ensz/c/c11/n1570.html#7.14p4)).\n")]),t._v(" "),n("li",[t._v("\nWhen a signal is raised and there is a custom handler associated with that signal, which signals, if any, are blocked for the duration of the execution of the handler ([7.14.1.1/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.14.1.1p3)).\n")]),t._v(" "),n("li",[t._v("\nWhich signals other than `SIGFPE`, `SIGILL`, and `SIGSEGV` cause the behavior upon returning from a custom signal handler to be undefined ([7.14.1.1/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.14.1.1p3)).\n")]),t._v(" "),n("li",[t._v("\nWhich signals are initially configured to be ignored (regardless of their default handling; [7.14.1.1/6](http://port70.net/%7Ensz/c/c11/n1570.html#7.14.1.1p6)).\n")]),t._v(" "),n("h3",{attrs:{id:"miscellaneous"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#miscellaneous"}},[t._v("#")]),t._v(" Miscellaneous")]),t._v(" "),n("ul",[n("li",[t._v("The specific null pointer constant to which macro "),n("code",[t._v("NULL")]),t._v(" expands ("),n("a",{attrs:{href:"http://port70.net/%7Ensz/c/c11/n1570.html#7.19p3",target:"_blank",rel:"noopener noreferrer"}},[t._v("7.19/3"),n("OutboundLink")],1),t._v(").")])]),t._v(" "),n("h3",{attrs:{id:"file-handling-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#file-handling-functions"}},[t._v("#")]),t._v(" File-handling functions")]),t._v(" "),n("li",[t._v("\nWhether the last line of a text stream requires a terminating newline ([7.21.2/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.2p2)).\n")]),t._v(" "),n("li",[t._v("\nThe number of null characters automatically appended to a binary stream ([7.21.2/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.2p3)).\n")]),t._v(" "),n("li",[t._v("\nThe initial position of a file opened in append mode ([7.21.3/1](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.3p1)).\n")]),t._v(" "),n("li",[t._v("\nWhether a write on a text stream causes the stream to be truncated ([7.21.3/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.3p2)).\n")]),t._v(" "),n("li",[t._v("\nSupport for stream buffering ([7.21.3/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.3p3)).\n")]),t._v(" "),n("li",[t._v("\nWhether zero-length files actually exist ([7.21.3/4](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.3p4)).\n")]),t._v(" "),n("li",[t._v("\nThe rules for composing valid file names ([7.21.3/8](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.3p8)).\n")]),t._v(" "),n("li",[t._v("\nWhether the same file can simultaneously be open multiple times ([7.21.3/8](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.3p8)).\n")]),t._v(" "),n("li",[t._v("\nThe nature and choice of encoding for multibyte characters ([7.21.3/10](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.3p10)).\n")]),t._v(" "),n("li",[t._v("\nThe behavior of the `remove()` function when the target file is open ([7.21.4.1/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.4.1p2)).\n")]),t._v(" "),n("li",[t._v("\nThe behavior of the `rename()` function when the target file already exists ([7.21.4.2/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.4.2p2)).\n")]),t._v(" "),n("li",[t._v("\nWhether files created via the `tmpfile()` function are removed in the event that the program terminates abnormally ([7.21.4.3/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.4.3p2)).\n")]),t._v(" "),n("li",[t._v("\nWhich mode changes under which circumstances are permitted via `freopen()` ([7.21.5.4/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.5.4p3)).\n")]),t._v(" "),n("h3",{attrs:{id:"i-o-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#i-o-functions"}},[t._v("#")]),t._v(" I/O functions")]),t._v(" "),n("li",[t._v("\nWhich of the permitted representations of infinite and not-a-number FP values are produced by the printf()-family functions ([7.21.6.1/8](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.6.1p8)).\n")]),t._v(" "),n("li",[t._v("\nThe manner in which pointers are formatted by the `printf()`-family functions ([7.21.6.1/8](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.6.1p8)).\n")]),t._v(" "),n("li",[t._v("\nThe behavior of `scanf()`-family functions when the `-` character appears in an internal position of the scanlist of a `[` field ([7.21.6.2/12](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.6.2p12)).\n")]),t._v(" "),n("li",[t._v("\nMost aspects of the `scanf()`-family functions' handing of `p` fields ([7.21.6.2/12](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.6.2p12)).\n")]),t._v(" "),n("li",[t._v("\nThe `errno` value set by `fgetpos()` on failure ([7.21.9.1/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.9.1p2)).\n")]),t._v(" "),n("li",[t._v("\nThe `errno` value set by `fsetpos()` on failure ([7.21.9.3/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.9.3p2)).\n")]),t._v(" "),n("li",[t._v("\nThe `errno` value set by `ftell()` on failure ([7.21.9.4/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.21.9.4p3)).\n")]),t._v(" "),n("li",[t._v("\nThe meaning to the `strtod()`-family functions of some supported aspects of a NaN formatting ([7.22.1.3p4](http://port70.net/%7Ensz/c/c11/n1570.html#7.22.1.3p4)).\n")]),t._v(" "),n("li",[t._v("\nWhether the `strtod()`-family functions set `errno` to `ERANGE` when the result underflows ([7.22.1.3/10](http://port70.net/%7Ensz/c/c11/n1570.html#7.22.1.3p10)).\n")]),t._v(" "),n("h3",{attrs:{id:"memory-allocation-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#memory-allocation-functions"}},[t._v("#")]),t._v(" Memory allocation functions")]),t._v(" "),n("ul",[n("li",[t._v("The behavior of the memory-allocation functions when the number of bytes requested is 0 ("),n("a",{attrs:{href:"http://port70.net/%7Ensz/c/c11/n1570.html#7.22.3p1",target:"_blank",rel:"noopener noreferrer"}},[t._v("7.22.3/1"),n("OutboundLink")],1),t._v(").")])]),t._v(" "),n("h3",{attrs:{id:"system-environment-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#system-environment-functions"}},[t._v("#")]),t._v(" System environment functions")]),t._v(" "),n("li",[t._v("\nWhat cleanups, if any, are performed and what status is returned to the host OS when the `abort()` function is called ([7.22.4.1/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.22.4.1p2)).\n")]),t._v(" "),n("li",[t._v("\nWhat status is returned to the host environment when `exit()` is called ([7.22.4.4/5](http://port70.net/%7Ensz/c/c11/n1570.html#7.22.4.4p5)).\n")]),t._v(" "),n("li",[t._v("\nThe handling of open streams and what status is returned to the host environment when `_Exit()` is called ([7.22.4.5/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.22.4.5p2)).\n")]),t._v(" "),n("li",[t._v("\nThe set of environment names accessible via `getenv()` and the method for altering the environment ([7.22.4.6/2](http://port70.net/%7Ensz/c/c11/n1570.html#7.22.4.6p2)).\n")]),t._v(" "),n("li",[t._v("\nThe return value of the `system()` function ([7.22.4.8/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.22.4.8p3)).\n")]),t._v(" "),n("h3",{attrs:{id:"date-and-time-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#date-and-time-functions"}},[t._v("#")]),t._v(" Date and time functions")]),t._v(" "),n("li",[t._v("\nThe local time zone and Daylight Saving time ([7.27.1/1](http://port70.net/%7Ensz/c/c11/n1570.html#7.27.1p1)).\n")]),t._v(" "),n("li",[t._v("\nThe range and precision of times representable via types `clock_t` and `time_t` ([7.27.1/4](http://port70.net/%7Ensz/c/c11/n1570.html#7.27.1p4)).\n")]),t._v(" "),n("li",[t._v("\nThe beginning of the era that serves as the reference for the times returned by the `clock()` function ([7.27.2.1/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.27.2.1p3)).\n")]),t._v(" "),n("li",[t._v("\nThe beginning of the epoch that serves as the reference for the times returned by the `timespec_get()` function (when the time base is `TIME_UTC`; [7.27.2.5/3](http://port70.net/%7Ensz/c/c11/n1570.html#7.27.2.5p3)).\n")]),t._v(" "),n("li",[t._v('\nThe `strftime()` replacement for the `%Z` conversion specifier in the "C" locale ([7.27.3.5/7](http://port70.net/%7Ensz/c/c11/n1570.html#7.27.3.5p7)).\n')]),t._v(" "),n("h3",{attrs:{id:"wide-character-i-o-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wide-character-i-o-functions"}},[t._v("#")]),t._v(" Wide-character I/O functions")]),t._v(" "),n("li",[t._v("\nWhich of the permitted representations of infinite and not-a-number FP values are produced by the `wprintf()`-family functions ([7.29.2.1/8](http://port70.net/%7Ensz/c/c11/n1570.html#7.29.2.1p8)).\n")]),t._v(" "),n("li",[t._v("\nThe manner in which pointers are formatted by the `wprintf()`-family functions ([7.29.2.1/8](http://port70.net/%7Ensz/c/c11/n1570.html#7.29.2.1p8)).\n")]),t._v(" "),n("li",[t._v("\nThe behavior of `wscanf()`-family functions when the `-` character appears in an internal position of the scanlist of a `[` field ([7.29.2.2/12](http://port70.net/%7Ensz/c/c11/n1570.html#7.29.2.2p12)).\n")]),t._v(" "),n("li",[t._v("\nMost aspects of the `wscanf()`-family functions' handing of `p` fields ([7.29.2.2/12](http://port70.net/%7Ensz/c/c11/n1570.html#7.29.2.2p12)).\n")]),t._v(" "),n("li",[t._v("\nThe meaning to the `wstrtod()`-family functions of some supported aspects of NaN formatting ([7.29.4.1.1/4](http://port70.net/%7Ensz/c/c11/n1570.html#7.29.4.1.1p4)).\n")]),t._v(" "),n("li",[t._v("\nWhether the `wstrtod()`-family functions set `errno` to `ERANGE` when the result underflows ([7.29.4.1.1/10](http://port70.net/%7Ensz/c/c11/n1570.html#7.29.4.1.1p10)).\n")])])}),[],!1,null,null,null);e.default=s.exports}}]);