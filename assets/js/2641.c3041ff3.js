(window.webpackJsonp=window.webpackJsonp||[]).push([[2641],{3049:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"working-with-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#working-with-objects"}},[t._v("#")]),t._v(" Working with Objects")]),t._v(" "),s("h2",{attrs:{id:"updating-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-objects"}},[t._v("#")]),t._v(" Updating Objects")]),t._v(" "),s("h3",{attrs:{id:"adding-properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-properties"}},[t._v("#")]),t._v(" Adding properties")]),t._v(" "),s("p",[t._v('If you\'d like to add properties to an existing object, you can use the Add-Member cmdlet.  With PSObjects, values are kept in a type of "Note Properties"')]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$object")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TypeName PSObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Property @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Name = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(":username\n        ID = 12\n        Address = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add-Member")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("InputObject "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SomeNewProp"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Value "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A value"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("MemberType NoteProperty\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v("> "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Object")]),t._v("\nName ID Address SomeNewProp\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\nnem  12         A value\n\n")])])]),s("p",[t._v("You can also add properties with Select-Object Cmdlet (so called calculated properties):")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Select-Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("label="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SomeOtherProp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" expression="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Another value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v("> "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v("\nName ID Address SomeNewProp SomeOtherProp\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\nnem  12         A value     Another value\n\n")])])]),s("p",[t._v("The command above can be shortened to this:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("l="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SomeOtherProp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("e="),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Another value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"removing-properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#removing-properties"}},[t._v("#")]),t._v(" Removing properties")]),t._v(" "),s("p",[t._v("You can use the Select-Object Cmdlet to remove properties from an object:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$object")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Select-Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ExcludeProperty ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Address\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v("> "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$object")]),t._v("\nName SomeNewProp SomeOtherProp\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\nnem  A value     Another value\n\n")])])]),s("h2",{attrs:{id:"creating-a-new-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-new-object"}},[t._v("#")]),t._v(" Creating a new object")]),t._v(" "),s("p",[t._v("PowerShell, unlike some other scripting languages, sends objects through the pipeline.  What this means is that when you send data from one command to another, it's essential to be able to create, modify, and collect objects.")]),t._v(" "),s("p",[t._v("Creating an object is simple.  Most objects you create will be custom objects in PowerShell, and the type to use for that is PSObject.  PowerShell will also allow you to create any object you could create in .NET.")]),t._v(" "),s("p",[t._v("Here's an example of creating a new objects with a few properties:")]),t._v(" "),s("h3",{attrs:{id:"option-1-new-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#option-1-new-object"}},[t._v("#")]),t._v(" Option 1: New-Object")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TypeName PSObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Property @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Name = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(":username\n    ID = 12\n    Address = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v("> "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v("\nName ID Address\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\nnem  12\n\n")])])]),s("p",[t._v("You can store the object in a variable by prefacing the command with "),s("code",[t._v("$newObject =")])]),t._v(" "),s("p",[t._v("You may also need to store collections of objects.  This can be done by creating an empty collection variable, and adding objects to the collection, like so:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newCollection")]),t._v(" = @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newCollection")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("New-Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TypeName PSObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Property @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Name = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(":username\n    ID = 12\n    Address = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("You may then wish to iterate through this collection object by object.  To do that, locate the Loop section in the documentation.")]),t._v(" "),s("h3",{attrs:{id:"option-2-select-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#option-2-select-object"}},[t._v("#")]),t._v(" Option 2: Select-Object")]),t._v(" "),s("p",[t._v("A less common way of creating objects that you'll still find on the internet is the following:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unuseddummy'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Select-Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Property Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Address\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(":username\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID = 12\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v("> "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v("\nName ID Address\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\nnem  12\n\n")])])]),s("h3",{attrs:{id:"option-3-pscustomobject-type-accelerator-psv3-required"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#option-3-pscustomobject-type-accelerator-psv3-required"}},[t._v("#")]),t._v(" Option 3: pscustomobject type accelerator (PSv3+ required)")]),t._v(" "),s("p",[t._v("The ordered type accelerator forces PowerShell to keep our properties in the order that we defined them. You don't need the ordered type accelerator to use "),s("code",[t._v("[PSCustomObject]")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[PSCustomObject]")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Ordered]")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Name = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$env")]),t._v(":Username\n    ID = 12\n    Address = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Returns")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v("> "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$newObject")]),t._v("\nName ID Address\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\nnem  12\n\n")])])]),s("h2",{attrs:{id:"examining-an-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examining-an-object"}},[t._v("#")]),t._v(" Examining an object")]),t._v(" "),s("p",[t._v("Now that you have an object, it might be good to figure out what it is.  You can use the Get-Member cmdlet to see what an object is and what it contains:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-Item")]),t._v(" c:\\windows "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-Member")]),t._v("\n\n")])])]),s("p",[t._v("This yields:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("TypeName: System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DirectoryInfo\n\n")])])]),s("p",[t._v("Followed by a list of properties and methods the object has.")]),t._v(" "),s("p",[t._v("Another way to get the type of an object is to use the GetType method, like so :")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("C:\\> "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Object")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-Item")]),t._v(" C:\\Windows\nC:\\> "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nIsPublic IsSerial Name                                     BaseType\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("                                     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\nTrue     True     DirectoryInfo                            System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FileSystemInfo\n\n")])])]),s("p",[t._v("To view a list of properties the object has, along with their values, you can use the Format-List cmdlet with its Property parameter set to : * (meaning all).")]),t._v(" "),s("p",[t._v("Here is a example, with the resulting output :")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("C:\\> "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-Item")]),t._v(" C:\\Windows "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Format-List")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Property "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n\nPSPath            : Microsoft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PowerShell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Core\\FileSystem::C:\\Windows\nPSParentPath      : Microsoft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PowerShell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Core\\FileSystem::C:\\\nPSChildName       : Windows\nPSDrive           : C\nPSProvider        : Microsoft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PowerShell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Core\\FileSystem\nPSIsContainer     : True\nMode              : d-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\nBaseName          : Windows\nTarget            : "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nLinkType          :\nName              : Windows\nParent            :\nExists            : True\nRoot              : C:\\\nFullName          : C:\\Windows\nExtension         :\nCreationTime      : 30"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("2015 06:28:30\nCreationTimeUtc   : 30"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("2015 06:28:30\nLastAccessTime    : 16"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("08"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("2016 17:32:04\nLastAccessTimeUtc : 16"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("08"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("2016 16:32:04\nLastWriteTime     : 16"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("08"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("2016 17:32:04\nLastWriteTimeUtc  : 16"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("08"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("2016 16:32:04\nAttributes        : Directory\n\n")])])]),s("h2",{attrs:{id:"creating-instances-of-generic-classes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-instances-of-generic-classes"}},[t._v("#")]),t._v(" Creating Instances of Generic Classes")]),t._v(" "),s("p",[t._v("Note: examples written for PowerShell 5.1\nYou can create instances of Generic Classes")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Nullable System.DateTime")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[Nullable[datetime]]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$nullableDate")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-Date")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Year 2012\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$nullableDate")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$nullableDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FullName\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$nullableDate")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$nullableDate")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Normal System.DateTime")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[datetime]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aDate")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-Date")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Year 2013\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aDate")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FullName\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aDate")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Throws exception when PowerShell attempts to convert null to ")]),t._v("\n\n")])])]),s("p",[t._v("Gives the output:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("Saturday"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 4 August 2012 08:53:02\nSystem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTime\nSunday"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 4 August 2013 08:53:02\nSystem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTime\nCannot convert null to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"System.DateTime"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nAt line:14 char:1\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$aDate")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ~~~~~~~~~~~~~~\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" CategoryInfo          : MetadataError: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ArgumentTransformationMetadataException\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" FullyQualifiedErrorId : RuntimeException\n\n")])])]),s("p",[t._v("Generic Collections are also possible")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Collections.Generic.SortedDictionary[int, String]]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),t._v(" = "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Collections.Generic.SortedDictionary[int, String]]")]),t._v("::new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GetType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FullName\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#powershell auto converts '4' to 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5.1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#powershell auto converts '5.1' to 5")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#powershell can't convert 'z' to System.Int32 so it throws an error")]),t._v("\n\n")])])]),s("p",[t._v("Gives the output:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Collections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Generic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SortedDictionary`2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nKey Value\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n  1 a\n  2 b\n  3 c\n  4 d\n  5 c\nCannot convert argument "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" with value: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Add"')]),t._v(" to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"System.Int32"')]),t._v(": "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cannot convert value "')]),t._v("z"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" to type "')]),t._v("System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Int32"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('". Error: "')]),t._v("Input string was not in a correct format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nAt line:15 char:1\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#powershell can't convert 'z' to System.Int32 so  ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ~~~~~~~~~~~~~~~~~~~\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" CategoryInfo          : NotSpecified: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MethodException\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" FullyQualifiedErrorId : MethodArgumentConversionInvalidCastArgument\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);