(window.webpackJsonp=window.webpackJsonp||[]).push([[2636],{3044:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"using-shouldprocess"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-shouldprocess"}},[t._v("#")]),t._v(" Using ShouldProcess")]),t._v(" "),a("h2",{attrs:{id:"full-usage-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#full-usage-example"}},[t._v("#")]),t._v(" Full Usage Example")]),t._v(" "),a("p",[t._v("Other examples couldn't clearly explain to me how to trigger the conditional logic.")]),t._v(" "),a("p",[t._v("This example also shows that underlying commands will also listen to the -Confirm flag!")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("<#\nRestart-Win32Computer\n#>")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" Restart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Win32Computer \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CmdletBinding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SupportsShouldProcess="),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ConfirmImpact="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"High"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("param")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[parameter(Mandatory=$true,ValueFromPipeline=$true,ValueFromPipelineByPropertyName=$true)]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[string[]]")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$computerName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[parameter(Mandatory=$true)]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[string]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ValidateSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Restart"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LogOff"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shutdown"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PowerOff"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[boolean]")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$force")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("$false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# translate action to numeric value required by the method")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Restart"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_action")]),t._v(" = 2\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LogOff"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_action")]),t._v(" = 0\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shutdown"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_action")]),t._v(" = 2\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PowerOff"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_action")]),t._v(" = 8\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to force, add 4 to the value")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$force")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_action")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" 4\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write-verbose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Action set to '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$action")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCESS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write-verbose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Attempting to connect to '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$computername")]),t._v('"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# this is how we support -whatif and -confirm")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# which are enabled by the SupportsShouldProcess")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# parameter in the cmdlet bindnig")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$pscmdlet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ShouldProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$computername")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get-wmiobject")]),t._v(" win32_operatingsystem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("computername "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$computername")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke-wmimethod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name Win32Shutdown "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("argumentlist "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_action")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Usage:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#This will only output a description of the actions that this command would execute if -WhatIf is removed.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'server1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Restart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Win32Computer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("action LogOff "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("whatif \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#This will request the permission of the caller to continue with this item.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Attention: in this example you will get two confirmation request because all cmdlets called by this cmdlet that also support ShouldProcess, will ask for their own confirmations...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'server1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Restart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Win32Computer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("action LogOff "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Confirm\n\n")])])]),a("h2",{attrs:{id:"adding-whatif-and-confirm-support-to-your-cmdlet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-whatif-and-confirm-support-to-your-cmdlet"}},[t._v("#")]),t._v(" Adding -WhatIf and -Confirm support to your cmdlet")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Invoke-MyCmdlet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[CmdletBinding(SupportsShouldProcess = $true)]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"using-shouldprocess-with-one-argument"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-shouldprocess-with-one-argument"}},[t._v("#")]),t._v(" Using ShouldProcess() with one argument")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PSCmdlet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ShouldProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Target of action"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Do the thing")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("When using "),a("code",[t._v("-WhatIf")]),t._v(":")]),t._v(" "),a("p",[a("code",[t._v('What if: Performing the action "Invoke-MyCmdlet" on target "Target of action"')])]),t._v(" "),a("p",[t._v("When using "),a("code",[t._v("-Confirm")]),t._v(":")]),t._v(" "),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("ul",[a("li",[t._v('$PSCmdlet.ShouldProcess("Target")')]),t._v(" "),a("li",[t._v('$PSCmdlet.ShouldProcess("Target", "Action")')])]),t._v(" "),a("h4",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Parameter")]),t._v(" "),a("th",[t._v("Details")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Target")]),t._v(" "),a("td",[t._v("The resource being changed.")])]),t._v(" "),a("tr",[a("td",[t._v("Action")]),t._v(" "),a("td",[t._v("The operation being performed. Defaults to the name of the cmdlet.")])])])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[a("code",[t._v("$PSCmdlet.ShouldProcess()")]),t._v(" will also automatically write a message to the verbose output.")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PS")]),t._v("> "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Invoke-MyCmdlet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Verbose\nVERBOSE: Performing the operation "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invoke-MyCmdlet"')]),t._v(" on target "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Target of action"')]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);