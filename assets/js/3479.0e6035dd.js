(window.webpackJsonp=window.webpackJsonp||[]).push([[3479],{3887:function(s,t,a){"use strict";a.r(t);var n=a(31),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"multithreading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multithreading"}},[s._v("#")]),s._v(" Multithreading")]),s._v(" "),a("h2",{attrs:{id:"multithreading-using-thread-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multithreading-using-thread-class"}},[s._v("#")]),s._v(" Multithreading using Thread Class")]),s._v(" "),a("p",[s._v("This example uses the "),a("code",[s._v("Thread")]),s._v(" Class, but multithreaded applications can also be made using "),a("code",[s._v("BackgroundWorker")]),s._v(". The "),a("code",[s._v("AddNumber")]),s._v(", "),a("code",[s._v("SubstractNumber")]),s._v(", and "),a("code",[s._v("DivideNumber")]),s._v(" functions will be executed by separate threads:")]),s._v(" "),a("p",[s._v("Edit: Now the UI thread waits for the child threads to finish and shows the result.")]),s._v(" "),a("div",{staticClass:"language-vb extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vb"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Module")]),s._v(" Module1\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("'Declare the Thread and assign a sub to that")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" AddThread "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("New")]),s._v(" Threading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AddressOf")]),s._v(" AddNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" SubstractThread "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("New")]),s._v(" Threading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AddressOf")]),s._v(" SubstractNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" DivideThread "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("New")]),s._v(" Threading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AddressOf")]),s._v(" DivideNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("'Declare the variable for holding the result ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" addResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" SubStractResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" DivisionResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Double")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" bFinishAddition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" bFinishSubstration "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" bFinishDivision "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" bShownAdditionResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" bShownDivisionResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" bShownSubstractionResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" Main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("'Now start the trheads")]),s._v("\n        AddThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        SubstractThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        DivideThread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("'Wait and display the results in console")]),s._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Waiting for threads to finish..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("While")]),s._v(" bFinishAddition "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Or")]),s._v(" bFinishDivision "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Or")]),s._v(" bFinishSubstration "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n            Threading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("'UI thread is sleeping")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v(" bFinishAddition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("And")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Not")]),s._v(" bShownAdditionResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Then")]),s._v("\n                Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Addition Result : "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" addResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                bShownAdditionResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v(" bFinishSubstration "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("And")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Not")]),s._v(" bShownSubstractionResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Then")]),s._v("\n                Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Substraction Result : "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" SubStractResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                bShownSubstractionResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v(" bFinishDivision  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("And")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Not")]),s._v(" bShownDivisionResult "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Then")]),s._v("\n                Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Division Result : "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" DivisionResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                bShownDivisionResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("If")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("While")]),s._v("\n\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WriteLine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Finished all threads."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ReadKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" AddNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" n1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" n2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("For")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("To")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n            addResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" addResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            Threading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("'sleeping Add thread")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Next")]),s._v("\n        bFinishAddition "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" SubstractNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" n1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" n2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("For")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("To")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n            SubStractResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" SubStractResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            Threading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Next")]),s._v("\n        bFinishSubstration "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v(" DivideNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" n1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Dim")]),s._v(" n2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("For")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Integer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("To")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n            DivisionResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" DivisionResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" n2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            Threading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Next")]),s._v("\n        bFinishDivision "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Sub")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("End")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Module")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);