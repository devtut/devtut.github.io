(window.webpackJsonp=window.webpackJsonp||[]).push([[2371],{2779:function(t,e,s){"use strict";s.r(e);var a=s(31),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"triggers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#triggers"}},[t._v("#")]),t._v(" Triggers")]),t._v(" "),s("p",[s("strong",[t._v("Introduction:")])]),t._v(" "),s("p",[t._v("Triggers are a useful concept in PL/SQL. A trigger is a special type of stored procedure which does not require to be explicitly called by the user. It is a group of instructions, which is automatically fired in response to a specific data modification action on a specific table or relation, or when certain specified conditions are satisfied.\nTriggers help maintain the integrity, and security of data. They make the job convenient by taking the required action automatically.")]),t._v(" "),s("h2",{attrs:{id:"before-insert-or-update-trigger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#before-insert-or-update-trigger"}},[t._v("#")]),t._v(" Before INSERT or UPDATE trigger")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRIGGER")]),t._v(" CORE_MANUAL_BIUR\n  BEFORE "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" CORE_MANUAL\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR EACH ROW")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" inserting "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- only set the current date if it is not specified        ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" :new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n      :new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sysdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- always set the modified date to now")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" inserting "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" updating "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    :new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("modified :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sysdate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),s("ul",[s("li",[t._v("CREATE [ OR REPLACE ] TRIGGER trigger_name")]),t._v(" "),s("li",[t._v("BEFORE UPDATE [or INSERT] [or DELETE]")]),t._v(" "),s("li",[t._v("ON table_name")]),t._v(" "),s("li",[t._v("[ FOR EACH ROW ]")]),t._v(" "),s("li",[t._v("DECLARE")]),t._v(" "),s("li",[t._v("-- variable declarations")]),t._v(" "),s("li",[t._v("BEGIN")]),t._v(" "),s("li",[t._v("-- trigger code")]),t._v(" "),s("li",[t._v("EXCEPTION")]),t._v(" "),s("li",[t._v("WHEN ...")]),t._v(" "),s("li",[t._v("-- exception handling")]),t._v(" "),s("li",[t._v("END;")])])])}),[],!1,null,null,null);e.default=r.exports}}]);