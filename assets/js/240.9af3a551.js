(window.webpackJsonp=window.webpackJsonp||[]).push([[240],{649:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"logging-and-using-logcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logging-and-using-logcat"}},[t._v("#")]),t._v(" Logging and using Logcat")]),t._v(" "),s("h2",{attrs:{id:"filtering-the-logcat-output"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filtering-the-logcat-output"}},[t._v("#")]),t._v(" Filtering the logcat output")]),t._v(" "),s("p",[t._v('It is helpful to filter the logcat output because there are many messages which are not of interest. To filter the output, open the "Android Monitor" and click on the drop down on the top-right and select '),s("strong",[t._v("Edit Filter Configuration")])]),t._v(" "),s("p",[s("a",{attrs:{href:"http://i.stack.imgur.com/XxB3K.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://i.stack.imgur.com/XxB3K.png",alt:"Android Monitor"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Now you can add custom filters to show messages which are of interest, as well as filter out well-known log lines which can safely be ignored. To ignore a part of the output you may define a "),s("a",{attrs:{href:"https://stackoverflow.com/documentation/regex/topics",target:"_blank",rel:"noopener noreferrer"}},[t._v("Regular Expression"),s("OutboundLink")],1),t._v(". Here is an example of excluding matching tags:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HideMe")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AndThis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("This can be entered by following this example:")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://i.stack.imgur.com/dyzcQ.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://i.stack.imgur.com/dyzcQ.png",alt:"Create new logcat filter"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("The above is a regular expression which excludes inputs. If you wanted to add another tag to the "),s("strong",[t._v("blacklist")]),t._v(", add it after a pipe "),s("code",[t._v("|")]),t._v(' character. For example, if you wanted to blacklist "GC", you would use a filter like this:')]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HideMe")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AndThis")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("GC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("For more documentation and examples visit "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/android/1552/logging-and-using-logcat",target:"_blank",rel:"noopener noreferrer"}},[t._v("Logging and using Logcat"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"logging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[t._v("#")]),t._v(" Logging")]),t._v(" "),s("p",[t._v("Any quality Android application will keep track of what it's doing through application logs.\nThese logs allow easy debugging help for the developer to diagnose what's going on with the application.\nFull Android Documentation can be found "),s("a",{attrs:{href:"https://developer.android.com/reference/android/util/Log.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(", but a summary follows:")]),t._v(" "),s("h3",[t._v("Basic Logging")]),t._v("\nThe `Log` class is the main source of writing developer logs, by specifying a `tag` and a `message`. The tag is what you can use to filter log messages by to identify which lines come from your particular Activity. Simply call\n"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("And the Android system will write a message to the logcat:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00.759")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24812")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24839")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packagename "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyAnimator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Some")]),t._v(" log messages\n └ time stamp             "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v("┘     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    └ any tag  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n     process "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" thread ids ┘          log level┘               └ the log message\n\n")])])]),s("blockquote"),t._v(" "),s("p",[t._v("TIP: "),s("br"),t._v("Notice the process id and the thread id. If they are the same - the log is coming from the main/UI thread!")]),t._v(" "),s("p",[t._v("Any tag can be used, but it is common to use the class name as a tag:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyAnimator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSimpleName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h3",[t._v("Log Levels")]),t._v("\nThe Android logger has 6 different levels, each of which serve a certain purpose:\n"),s("li",[t._v("`ERROR`: `Log.e()`\n"),s("ul",[t._v("\n- Used to indicate critical failure, this is the level printed at when throwing an `Exception`.\n"),s("ul",[s("li",[s("p",[t._v("Used to indicate a warning, mainly for recoverable failures")])]),t._v(" "),s("li",[s("p",[t._v("Used to indicate higher-level information about the state of the application")])]),t._v(" "),s("li",[s("p",[t._v("Used to log information that would be useful to know when debugging the application, but would get in the way when running the application")])]),t._v(" "),s("li",[s("p",[t._v("Used to log information that reflects the small details about the state of the application")])]),t._v(" "),s("li",[s("p",[t._v("Used to log information about a condition that should never happen.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("wtf")]),t._v(' stands for "What a Terrible Failure".')])])]),t._v(" "),s("h3",[t._v("Motivation For Logging")]),t._v("\nThe motivation for logging is to easily find errors, warnings, and other information by glancing at the chain of events from the application. For instance, imagine an application that reads lines from a text file, but incorrectly assumes that the file will never be empty. The log trace (of an app that doesn't log) would look something like this:\n"),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Process")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myapplication"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25788")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("SomeRandomException")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Expected")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" got "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'null'")]),t._v(" instead\n\n")])])]),s("p",[t._v("Followed by a bunch of stack traces that would eventually lead to the offending line, where stepping through with a debugger would eventually lead to the problem")]),t._v(" "),s("p",[t._v("However, the log trace of an application with logging enabled could look something like this:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Looking")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" file myFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt on the SD card\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("D")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Found")]),t._v(" file myFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt at path "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Opening")]),t._v(" file myFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("D")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Finished")]),t._v(" reading myFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" found "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" lines\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Closing")]),t._v(" file myFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApplication")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Process")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myapplication"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25788")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("SomeRandomException")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Expected")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" got "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'null'")]),t._v(" instead\n\n")])])]),s("p",[t._v("A quick glance at the logs and it is obvious that the file was empty.")]),t._v(" "),s("h3",[t._v("Things To Considering When Logging:")]),t._v("\nAlthough logging is a powerful tool that allows Android developers to gain a greater insight into the inner working of their application, logging does have some drawbacks.\n"),s("h3",[t._v(" Log Readability: ")]),t._v("\nIt is common for Android Applications to have several logs running synchronously. As such, it is very important that each log is easily readable and only contains relevant, necessary information.\n"),s("h3",[t._v("Performance:")]),t._v("\nLogging does require a small amount of system resources. In general, this does not warrant concern, however, if overused, logging may have a negative impact on application performance.\n"),s("h3",[t._v("Security:")]),t._v("\nRecently, several Android Applications have been added to the Google Play marketplace that allow the user to view logs of all running applications. This unintended display of data may allow users to view confidential information. As a rule of thumb, always remove logs that contain on non-public data **before** publishing your application to the marketplace.\n"),s("h3",[t._v("Conclusion:")]),t._v("\nLogging is an essential part of an Android application, because of the power it gives to developers. The ability to create a useful log trace is one of the most challenging aspects of software development, but Android's Log class helps to make it much easier.\n"),s("p",[t._v("For more documentation and examples visit "),s("a",{attrs:{href:"http://stackoverflow.com/documentation/android/1552/logging-and-using-logcat",target:"_blank",rel:"noopener noreferrer"}},[t._v("Logging and using Logcat"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"using-the-logcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-logcat"}},[t._v("#")]),t._v(" Using the Logcat")]),t._v(" "),s("p",[t._v("Logcat is a command-line tool that dumps a log of system messages, including stack traces when the device throws an error and messages that you have written from your app with the Log class.")]),t._v(" "),s("p",[t._v("The Logcat output can be displayed within Android Studio's Android Monitor or with adb command line.")]),t._v(" "),s("p",[s("strong",[t._v("In Android Studio")])]),t._v(" "),s("p",[t._v('Show by clicking the "Android Monitor" icon:\n'),s("a",{attrs:{href:"http://i.stack.imgur.com/rKiCw.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://i.stack.imgur.com/rKiCw.png",alt:"enter image description here"}}),s("OutboundLink")],1),t._v("\nOr by pressing "),s("kbd",[t._v("Alt")]),t._v("+"),s("kbd",[t._v("6")]),t._v(" on Windows/Linux or "),s("kbd",[t._v("CMD")]),t._v("+"),s("kbd",[t._v("6")]),t._v(" on Mac.")]),t._v(" "),s("p",[s("strong",[t._v("via command line:")])]),t._v(" "),s("p",[t._v("Simple usage:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("$ adb logcat\n\n")])])]),s("p",[t._v("With timestamps:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("$ adb logcat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v time\n\n")])])]),s("p",[t._v("Filter on specific text:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("$ adb logcat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" grep "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'searchtext'")]),t._v("\n\n")])])]),s("p",[t._v("There are many options and filters available to "),s("strong",[t._v("command line logcat")]),t._v(", documented "),s("a",{attrs:{href:"https://developer.android.com/studio/command-line/logcat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(". "),s("br"),t._v('\nA simple but useful example is the following filter expression that displays all log messages with priority level "error", on all tags:')]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("$ adb logcat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"log-with-link-to-source-directly-from-logcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log-with-link-to-source-directly-from-logcat"}},[t._v("#")]),t._v(" Log with link to source directly from Logcat")]),t._v(" "),s("p",[t._v("This is a nice trick to add a link to code, so it will be easy to jump to the code that issued the log.")]),t._v(" "),s("p",[t._v("With the following code, this call:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyLogger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("logWithLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyTag"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"param="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[s("br"),t._v("Will result in:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".012")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myapp "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("D")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyTag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFrag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFrag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2366")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// << logcat converts this to a link to source!")]),t._v("\n\n")])])]),s("p",[t._v("This is the code (inside a class called MyLogger):")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),t._v(" sb0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reusable string object")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("logWithLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" TAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StackTraceElement")]),t._v(" stack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sb0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// removes the ".java"')]),t._v("\n    sb0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sb0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMethodName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sb0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    sb0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('") "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sb0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ("')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFileName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLineNumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("d")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sb0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("This is a basic example, it can be easily extended to issue a link to the caller (hint: the stack will be [4] instead of [3]), and you can also add other relevant information.")]),t._v(" "),s("h2",{attrs:{id:"generating-logging-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generating-logging-code"}},[t._v("#")]),t._v(" Generating Logging code")]),t._v(" "),s("p",[s("code",[t._v("Android Studio")]),t._v("'s "),s("code",[t._v("Live templates")]),t._v(" can offer quite a few shortcuts for quick logging."),s("br"),t._v("\nTo use Live templates, all you need to do is to start typing the template name, and hit "),s("code",[t._v("TAB")]),t._v(" or enter to insert the statement.")]),t._v(" "),s("p",[t._v("Examples:")]),t._v(" "),s("li",[t._v('`logi` → turns into → `android.util.Log.i(TAG, "$METHOD_NAME$: $content$");`\n'),s("ul",[t._v("\n- `$METHOD_NAME$` will automatically be replaced with your method name, and the cursor will wait for the content to be filled.\n"),s("p",[t._v("Full list of templates can be found in "),s("code",[t._v("Android Studio")]),t._v("'s settings ("),s("kbd",[t._v("ALT")]),t._v("+"),s("kbd",[t._v("s")]),t._v(' and type "live"). And it is possible to add your custom templates as well.')]),t._v(" "),s("p",[t._v("If you find "),s("code",[t._v("Android Studio")]),t._v("'s "),s("code",[t._v("Live templates")]),t._v(" not enough for your needs,\nyou can consider "),s("a",{attrs:{href:"https://github.com/takahirom/android-postfix-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("Android Postfix Plugin"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("This is a very useful library which helps you to avoid writing the logging  line manually.")]),t._v(" "),s("p",[t._v("The syntax is absolutely simple:")]),t._v(" "),s("p",[s("strong",[t._v(".log")]),t._v('  -  Logging. If there is constant variable "TAG", it use "TAG" . Else it use class name.')]),t._v(" "),s("p",[s("a",{attrs:{href:"http://i.stack.imgur.com/mE7vX.gif",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://i.stack.imgur.com/mE7vX.gif",alt:"enter image description here"}}),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"android-studio-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#android-studio-usage"}},[t._v("#")]),t._v(" Android Studio usage")]),t._v(" "),s("li",[s("p",[t._v("Hide/show printed information:\n["),s("img",{attrs:{src:"http://i.stack.imgur.com/Q4b4G.jpg",alt:"Screenshot"}}),t._v("](http://i.stack.imgur.com/Q4b4G.jpg)")])]),t._v(" "),s("li",[s("p",[t._v("Control verbosity of the logging:\n["),s("img",{attrs:{src:"http://i.stack.imgur.com/TDyHa.jpg",alt:"Log verbosity screenshot"}}),t._v("](http://i.stack.imgur.com/TDyHa.jpg)")])]),t._v(" "),s("li",[s("p",[t._v("Disable/enable opening log window when starting run/debug application\n["),s("img",{attrs:{src:"http://i.stack.imgur.com/ief7b.jpg",alt:"Disable opening log screenshot"}}),t._v("](http://i.stack.imgur.com/ief7b.jpg)")])]),t._v(" "),s("h2",{attrs:{id:"clear-logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clear-logs"}},[t._v("#")]),t._v(" Clear logs")]),t._v(" "),s("p",[t._v("In order to clear (flush) the entire log:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("adb logcat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c\n\n")])])]),s("h4",{attrs:{id:"syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Log.v(String tag, String msg, Throwable tr)")])]),t._v(" "),s("li",[s("code",[t._v("Log.v(String tag, String msg)")])]),t._v(" "),s("li",[s("code",[t._v("Log.d(String tag, String msg, Throwable tr)")])]),t._v(" "),s("li",[s("code",[t._v("Log.d(String tag, String msg)")])]),t._v(" "),s("li",[s("code",[t._v("Log.i(String tag, String msg, Throwable tr)")])]),t._v(" "),s("li",[s("code",[t._v("Log.i(String tag, String msg)")])]),t._v(" "),s("li",[s("code",[t._v("Log.w(String tag, String msg, Throwable tr)")])]),t._v(" "),s("li",[s("code",[t._v("Log.w(String tag, String msg)")])]),t._v(" "),s("li",[s("code",[t._v("Log.e(String tag, String msg, Throwable tr)")])]),t._v(" "),s("li",[s("code",[t._v("Log.e(String tag, String msg)")])])]),t._v(" "),s("h4",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Option")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-b (buffer)")]),t._v(" "),s("td",[t._v("Loads an alternate log buffer for viewing, such as events or radio. The main buffer is used by default. See Viewing Alternative Log Buffers.")])]),t._v(" "),s("tr",[s("td",[t._v("-c")]),t._v(" "),s("td",[t._v("Clears (flushes) the entire log and exits.")])]),t._v(" "),s("tr",[s("td",[t._v("-d")]),t._v(" "),s("td",[t._v("Dumps the log to the screen and exits.")])]),t._v(" "),s("tr",[s("td",[t._v("-f (filename)")]),t._v(" "),s("td",[t._v("Writes log message output to (filename). The default is stdout.")])]),t._v(" "),s("tr",[s("td",[t._v("-g")]),t._v(" "),s("td",[t._v("Prints the size of the specified log buffer and exits.")])]),t._v(" "),s("tr",[s("td",[t._v("-n (count)")]),t._v(" "),s("td",[t._v("Sets the maximum number of rotated logs to (count). The default value is 4. Requires the -r option.")])]),t._v(" "),s("tr",[s("td",[t._v("-r (kbytes)")]),t._v(" "),s("td",[t._v("Rotates the log file every (kbytes) of output. The default value is 16. Requires the -f option.")])]),t._v(" "),s("tr",[s("td",[t._v("-s")]),t._v(" "),s("td",[t._v("Sets the default filter spec to silent.")])]),t._v(" "),s("tr",[s("td",[t._v("-v (format)")]),t._v(" "),s("td",[t._v("Sets the output format for log messages. The default is brief format.")])])])]),t._v(" "),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),s("h3",{attrs:{id:"definition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#definition"}},[t._v("#")]),t._v(" Definition")]),t._v(" "),s("p",[t._v("Logcat is a command-line tool that dumps a log of system messages, including stack traces when the device throws an error and messages that you have written from your app with the "),s("a",{attrs:{href:"https://developer.android.com/reference/android/util/Log.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Log"),s("OutboundLink")],1),t._v(" class.")]),t._v(" "),s("h3",{attrs:{id:"when-to-use"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#when-to-use"}},[t._v("#")]),t._v(" When to use")]),t._v(" "),s("p",[t._v("If you are considering using Java's System.out methods for printing to the console instead of using one of Android's Log methods, then you should know that they basically work the same. However, it is better to avoid using Java's methods because the extra information and formatting provided by Android's Log methods are more beneficial. Also, the System.out print methods are "),s("a",{attrs:{href:"http://stackoverflow.com/a/2220559/1684720",target:"_blank",rel:"noopener noreferrer"}},[t._v("redirected"),s("OutboundLink")],1),t._v(" to the "),s("code",[t._v("Log.i()")]),t._v(" method.")]),t._v(" "),s("h3",{attrs:{id:"useful-links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useful-links"}},[t._v("#")]),t._v(" Useful links")]),t._v(" "),s("ul",[s("li",[t._v("Android developer official documentation for "),s("a",{attrs:{href:"https://developer.android.com/reference/android/util/Log.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Log"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://developer.android.com/studio/command-line/logcat.html#startingLogcat",target:"_blank",rel:"noopener noreferrer"}},[t._v("logcat"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("li",[t._v("Stackoveflow Question : "),s("a",{attrs:{href:"http://stackoverflow.com/questions/7959263/android-log-v-log-d-log-i-log-w-log-e-when-to-use-each-one",target:"_blank",rel:"noopener noreferrer"}},[t._v("Android Log.v(), Log.d(), Log.i(), Log.w(), Log.e() - When to use each one?"),s("OutboundLink")],1)])])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);