(window.webpackJsonp=window.webpackJsonp||[]).push([[2135],{2544:function(e,t,a){"use strict";a.r(t);var r=a(31),_=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"one-to-many"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#one-to-many"}},[e._v("#")]),e._v(" One to Many")]),e._v(" "),a("p",[e._v("The idea of one to many (1:M) concerns the joining of rows to each other, specifically cases where a single row in one table corresponds to many rows in another.")]),e._v(" "),a("p",[e._v("1:M is one-directional, that is, any time you query a 1:M relationship, you can use the 'one' row to select 'many' rows in another table, but you cannot use a single 'many' row to select more than a single 'one' row.")]),e._v(" "),a("h2",{attrs:{id:"example-company-tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-company-tables"}},[e._v("#")]),e._v(" Example Company Tables")]),e._v(" "),a("p",[e._v("Consider a company where every employee who is a manager, manages 1 or more employees, and every employee has only 1 manager.")]),e._v(" "),a("p",[e._v("This results in two tables:")]),e._v(" "),a("p",[a("strong",[e._v("EMPLOYEES")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("EMP_ID")]),e._v(" "),a("th",[e._v("FIRST_NAME")]),e._v(" "),a("th",[e._v("LAST_NAME")]),e._v(" "),a("th",[e._v("MGR_ID")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("E01")]),e._v(" "),a("td",[e._v("Johnny")]),e._v(" "),a("td",[e._v("Appleseed")]),e._v(" "),a("td",[e._v("M02")])]),e._v(" "),a("tr",[a("td",[e._v("E02")]),e._v(" "),a("td",[e._v("Erin")]),e._v(" "),a("td",[e._v("Macklemore")]),e._v(" "),a("td",[e._v("M01")])]),e._v(" "),a("tr",[a("td",[e._v("E03")]),e._v(" "),a("td",[e._v("Colby")]),e._v(" "),a("td",[e._v("Paperwork")]),e._v(" "),a("td",[e._v("M03")])]),e._v(" "),a("tr",[a("td",[e._v("E04")]),e._v(" "),a("td",[e._v("Ron")]),e._v(" "),a("td",[e._v("Sonswan")]),e._v(" "),a("td",[e._v("M01")])])])]),e._v(" "),a("p",[a("strong",[e._v("MANAGERS")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("MGR_ID")]),e._v(" "),a("th",[e._v("FIRST_NAME")]),e._v(" "),a("th",[e._v("LAST_NAME")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("M01")]),e._v(" "),a("td",[e._v("Loud")]),e._v(" "),a("td",[e._v("McQueen")])]),e._v(" "),a("tr",[a("td",[e._v("M02")]),e._v(" "),a("td",[e._v("Bossy")]),e._v(" "),a("td",[e._v("Pants")])]),e._v(" "),a("tr",[a("td",[e._v("M03")]),e._v(" "),a("td",[e._v("Barrel")]),e._v(" "),a("td",[e._v("Jones")])])])]),e._v(" "),a("h2",{attrs:{id:"get-the-employees-managed-by-a-single-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-the-employees-managed-by-a-single-manager"}},[e._v("#")]),e._v(" Get the Employees Managed by a Single Manager")]),e._v(" "),a("p",[a("code",[e._v("SELECT e.emp_id , e.first_name , e.last_name FROM employees e INNER JOIN managers m ON m.mgr_id = e.mgr_id WHERE m.mgr_id = 'M01' ;")])]),e._v(" "),a("p",[e._v("Results in:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("EMP_ID")]),e._v(" "),a("th",[e._v("FIRST_NAME")]),e._v(" "),a("th",[e._v("LAST_NAME")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("E02")]),e._v(" "),a("td",[e._v("Erin")]),e._v(" "),a("td",[e._v("Macklemore")])]),e._v(" "),a("tr",[a("td",[e._v("E04")]),e._v(" "),a("td",[e._v("Ron")]),e._v(" "),a("td",[e._v("Sonswan")])])])]),e._v(" "),a("p",[e._v("Ultimately, for every manager we query for, we will see 1 or more employees returned.")]),e._v(" "),a("h2",{attrs:{id:"get-the-manager-for-a-single-employee"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-the-manager-for-a-single-employee"}},[e._v("#")]),e._v(" Get the Manager for a Single Employee")]),e._v(" "),a("p",[a("strong",[e._v("Consult the above example tables when looking at this example.")])]),e._v(" "),a("p",[a("code",[e._v("SELECT m.mgr_id , m.first_name , m.last_name FROM managers m INNER JOIN employees e ON e.mgr_id = m.mgr_id WHERE e.emp_id = 'E03' ;")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("MGR_ID")]),e._v(" "),a("th",[e._v("FIRST_NAME")]),e._v(" "),a("th",[e._v("LAST_NAME")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("M03")]),e._v(" "),a("td",[e._v("Barrel")]),e._v(" "),a("td",[e._v("Jones")])])])]),e._v(" "),a("p",[e._v("As this is the inverse of the above example, we know that for every employee we query for, we will only ever see one corresponding manager.")]),e._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[e._v("#")]),e._v(" Remarks")]),e._v(" "),a("p",[e._v("For most cases, working with a 1:M relationship requires us to understand "),a("strong",[e._v("Primary Keys")]),e._v(" and "),a("strong",[e._v("Foreign Keys")]),e._v(".")]),e._v(" "),a("p",[a("strong",[e._v("A Primary key")]),e._v(" is a column in a table where any single row of that column represents a single entity, or, selecting a value in a primary key column results in exactly one row. Using the above examples, an EMP_ID represents a single employee. If you query for any single EMP_ID, you will see a single row representing the corresponding employee.")]),e._v(" "),a("p",[a("strong",[e._v("A Foreign Key")]),e._v(" is a column in a table that corresponds to the primary key of another different table. From our example above, the MGR_ID in the EMPLOYEES table is a foreign key. Generally to join two tables, you'll join them based on the primary key of one table and the foreign key in another.")])])}),[],!1,null,null,null);t.default=_.exports}}]);