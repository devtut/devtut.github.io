(window.webpackJsonp=window.webpackJsonp||[]).push([[3560],{3968:function(s,t,e){"use strict";e.r(t);var a=e(31),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"using-listviews"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-listviews"}},[s._v("#")]),s._v(" Using ListViews")]),s._v(" "),e("p",[s._v("This documentation details how to use the different components of the Xamarin Forms ListView")]),s._v(" "),e("h2",{attrs:{id:"pull-to-refresh-in-xaml-and-code-behind"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pull-to-refresh-in-xaml-and-code-behind"}},[s._v("#")]),s._v(" Pull to Refresh in XAML and Code behind")]),s._v(" "),e("p",[s._v("To enable Pull to Refresh in a "),e("code",[s._v("ListView")]),s._v(" in Xamarin, you first need to specify that it is "),e("code",[s._v("PullToRefresh")]),s._v(" enabled and then specify the name of the command you want to invoke upon the "),e("code",[s._v("ListView")]),s._v(" being pulled:")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ListView")]),s._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("Name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"itemListView"')]),s._v(" IsPullToRefreshEnabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),s._v(" RefreshCommand"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Refresh"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n")])])]),e("p",[s._v("The same can be achieved in code behind:")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[s._v("itemListView"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsPullToRefreshEnabled "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nitemListView"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RefreshCommand "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Refresh"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),e("p",[s._v("Then, you must specify what the "),e("code",[s._v("Refresh")]),s._v(" Command does in your code behind:")]),s._v(" "),e("div",{staticClass:"language-cs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cs"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s._v("ICommand")]),s._v(" Refresh \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        itemListView"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsRefreshing "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//This turns on the activity")]),s._v("\n                                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Indicator for the ListView")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Then add your code to execute when the ListView is pulled")]),s._v("\n        itemListView"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("IsRefreshing "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);