(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{632:function(a,e,t){"use strict";t.r(e);var n=t(31),s=Object(n.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"java-on-android"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-on-android"}},[a._v("#")]),a._v(" Java on Android")]),a._v(" "),t("p",[a._v("Android supports all Java 7 language features and a subset of Java 8 language features that vary by platform version. This page describes the new language features you can use, how to properly configure your project to use them and any known issues you may encounter.")]),a._v(" "),t("h2",{attrs:{id:"java-8-features-subset-with-retrolambda"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-8-features-subset-with-retrolambda"}},[a._v("#")]),a._v(" Java 8 features subset with Retrolambda")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/orfjackal/retrolambda",target:"_blank",rel:"noopener noreferrer"}},[a._v("Retrolambda"),t("OutboundLink")],1),a._v(" lets you run Java 8 code with lambda expressions, method references and try-with-resources statements on Java 7, 6 or 5. It does this by transforming your Java 8 compiled bytecode so that it can run on an older Java runtime.")]),a._v(" "),t("p",[a._v("Backported Language Features:")]),a._v(" "),t("li",[a._v("\nLambda expressions are backported by converting them to anonymous inner classes. This includes the optimisation of using a singleton instance for stateless lambda expressions to avoid repeated object allocation. Method references are basically just syntax sugar for lambda expressions and they are backported in the same way.\n")]),a._v(" "),t("li",[a._v("\nTry-with-resources statements are backported by removing calls to `Throwable.addSuppressed` if the target bytecode version is below Java 7. If you would like the suppressed exceptions to be logged instead of swallowed, please create a feature request and we'll make it configurable.\n")]),a._v(" "),t("li",[a._v("\n`Objects.requireNonNull` calls are replaced with calls to `Object.getClass` if the target bytecode version is below Java 7. The synthetic null checks generated by JDK 9 use `Objects.requireNonNull`, whereas earlier JDK versions used `Object.getClass`.\n")]),a._v(" "),t("li",[a._v("\nOptionally also:\n"),t("ol",[t("li",[a._v('\nDefault methods are backported by copying the default methods to a companion class (interface name + "$") as static methods, replacing the default methods in the interface with abstract methods, and by adding the necessary method implementations to all classes which implement that interface.\n')]),a._v(" "),t("li",[a._v('\nStatic methods on interfaces are backported by moving the static methods to a companion class (interface name + "$"), and by changing all methods calls to call the new method location.\n')])])]),a._v(" "),t("p",[a._v("Known Limitations:")]),a._v(" "),t("li",[a._v("\nDoes not backport Java 8 APIs\n")]),a._v(" "),t("li",[a._v("\nBackporting default methods and static methods on interfaces requires all backported interfaces and all classes which implement them or call their static methods to be backported together, with one execution of Retrolambda. In other words, you must always do a clean build. Also, backporting default methods won't work across module or dependency boundaries.\n")]),a._v(" "),t("li",[a._v("\nMay break if a future JDK 8 build stops generating a new class for each `invokedynamic` call. Retrolambda works so that it captures the bytecode that `java.lang.invoke.LambdaMetafactory` generates dynamically, so optimisations to that mechanism may break Retrolambda.\n")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/evant/gradle-retrolambda",target:"_blank",rel:"noopener noreferrer"}},[a._v("Retrolambda gradle plugin"),t("OutboundLink")],1),a._v(" will automatically build your android project with Retrolambda. The latest version can be found on the "),t("a",{attrs:{href:"https://github.com/evant/gradle-retrolambda/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("releases page"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("p",[a._v("Usage:")]),a._v(" "),t("ol",[t("li",[a._v("Download and install "),t("a",{attrs:{href:"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("jdk8"),t("OutboundLink")],1)]),a._v(" "),t("li",[a._v("Add the following to your "),t("code",[a._v("build.gradle")])])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("buildscript "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  repositories "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mavenCentral")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n  dependencies "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n     classpath "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'me.tatarka:gradle-retrolambda:<latest version>'")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Required because retrolambda is on maven central")]),a._v("\nrepositories "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mavenCentral")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\napply plugin"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'com.android.application'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//or apply plugin: 'java'")]),a._v("\napply plugin"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'me.tatarka.retrolambda'")]),a._v("\n\nandroid "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    compileOptions "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        sourceCompatibility "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JavaVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("VERSION_1_8\n        targetCompatibility "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JavaVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("VERSION_1_8\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),t("p",[a._v("Known Issues:")]),a._v(" "),t("li",[a._v("\nLint fails on java files that have lambdas. Android's lint doesn't understand java 8 syntax and will fail silently or loudly. There is now an experimental fork that fixes the issue.\n")]),a._v(" "),t("li",[a._v("\nUsing Google Play Services causes Retrolambda to fail. Version 5.0.77 contains bytecode that is incompatible with Retrolambda. This should be fixed in newer versions of play services, if you can update, that should be the preferred solution. To work around this issue, you can either use an earlier version like 4.4.52 or add `-noverify` to the jvm args.\n")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("retrolambda "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  jvmArgs "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'-noverify'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);