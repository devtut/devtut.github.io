(window.webpackJsonp=window.webpackJsonp||[]).push([[1217],{1625:function(e,t,a){"use strict";a.r(t);var n=a(31),v=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"reactive-banana"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reactive-banana"}},[e._v("#")]),e._v(" Reactive-banana")]),e._v(" "),a("h2",{attrs:{id:"injecting-external-events-into-the-library"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#injecting-external-events-into-the-library"}},[e._v("#")]),e._v(" Injecting external events into the library")]),e._v(" "),a("p",[e._v("This example is not tied to any concrete GUI toolkit, like reactive-banana-wx does, for instance. Instead it shows how to inject arbitary "),a("code",[e._v("IO")]),e._v(" actions into FRP machinery.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Control.Event.Handler")]),e._v(" module provides an "),a("code",[e._v("addHandler")]),e._v(" function which creates a pair of "),a("code",[e._v("AddHandler a")]),e._v(" and "),a("code",[e._v("a -> IO ()")]),e._v(" values. The former is used by reactive-banana itself to obtain an "),a("code",[e._v("Event a")]),e._v(" value, while the latter is a plain function that is used to trigger the corresponding event.")]),e._v(" "),a("p",[e._v("In our case the "),a("code",[e._v("a")]),e._v(" parameter of the handler is of type "),a("code",[e._v("String")]),e._v(", but the code that lets compiler infer that will be written later.")]),e._v(" "),a("p",[e._v("Now we define the "),a("code",[e._v("EventNetwork")]),e._v(" that describes our FRP-driven system. This is done using "),a("code",[e._v("compile")]),e._v(" function:")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("fromAddHandler")]),e._v(" function transforms "),a("code",[e._v("AddHandler a")]),e._v(" value into a "),a("code",[e._v("Event a")]),e._v(", which is covered in the next example.")]),e._v(" "),a("p",[e._v('Finally, we launch our "event loop", that would fire events on user input:')]),e._v(" "),a("h2",{attrs:{id:"event-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-type"}},[e._v("#")]),e._v(" Event type")]),e._v(" "),a("p",[e._v("In reactive-banana the "),a("code",[e._v("Event")]),e._v(" type represents a stream of some events in time. An "),a("code",[e._v("Event")]),e._v(" is similar to an analog impulse signal in the sense that it is not continuous in time. As a result, "),a("code",[e._v("Event")]),e._v(" is an instance of the "),a("code",[e._v("Functor")]),e._v(" typeclass only. You can't combine two "),a("code",[e._v("Event")]),e._v("s together because they may fire at different times. You can do something with an "),a("code",[e._v("Event")]),e._v("'s [current] value and react to it with some "),a("code",[e._v("IO")]),e._v(" action.")]),e._v(" "),a("p",[e._v("Transformations on "),a("code",[e._v("Event")]),e._v("s value are done using "),a("code",[e._v("fmap")]),e._v(":")]),e._v(" "),a("p",[e._v("Reacting to an "),a("code",[e._v("Event")]),e._v(" is done the same way. First you "),a("code",[e._v("fmap")]),e._v(" it with an action of type "),a("code",[e._v("a -> IO ()")]),e._v(" and then pass it to "),a("code",[e._v("reactimate")]),e._v(" function:")]),e._v(" "),a("p",[e._v("Now whenever "),a("code",[e._v('inputFire "something"')]),e._v(" is called, "),a("code",[e._v('"SOMETHING"')]),e._v(" would be printed.")]),e._v(" "),a("h2",{attrs:{id:"behavior-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#behavior-type"}},[e._v("#")]),e._v(" Behavior type")]),e._v(" "),a("p",[e._v("To represent continious signals, reactive-banana features "),a("code",[e._v("Behavior a")]),e._v(" type. Unlike "),a("code",[e._v("Event")]),e._v(", a "),a("code",[e._v("Behavior")]),e._v(" is an "),a("code",[e._v("Applicative")]),e._v(", which lets you combine n "),a("code",[e._v("Behavior")]),e._v("s using an n-ary pure function (using "),a("code",[e._v("<$>")]),e._v(" and "),a("code",[e._v("<*>")]),e._v(").")]),e._v(" "),a("p",[e._v("To obtain a "),a("code",[e._v("Behavior a")]),e._v(" from the "),a("code",[e._v("Event a")]),e._v(" there is "),a("code",[e._v("accumE")]),e._v(" function:")]),e._v(" "),a("p",[a("code",[e._v("accumE")]),e._v(" takes "),a("code",[e._v("Behavior")]),e._v("'s initial value and an "),a("code",[e._v("Event")]),e._v(", containing a function that would set it to the new value.")]),e._v(" "),a("p",[e._v("As with "),a("code",[e._v("Event")]),e._v("s, you can use "),a("code",[e._v("fmap")]),e._v(" to work with current "),a("code",[e._v("Behavior")]),e._v("s value, but you can also combine them with "),a("code",[e._v("(<*>)")]),e._v(".")]),e._v(" "),a("p",[e._v("To react on "),a("code",[e._v("Behavior")]),e._v(" changes there is a "),a("code",[e._v("changes")]),e._v(" function:")]),e._v(" "),a("p",[e._v("The only thing that should be noted is that "),a("code",[e._v("changes")]),e._v(" return "),a("code",[e._v("Event (Future a)")]),e._v(" instead of "),a("code",[e._v("Event a")]),e._v(". Because of this, "),a("code",[e._v("reactimate'")]),e._v(" should be used instead of "),a("code",[e._v("reactimate")]),e._v(". The rationale behind this can be obtained from the documentation.")]),e._v(" "),a("h2",{attrs:{id:"actuating-eventnetworks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#actuating-eventnetworks"}},[e._v("#")]),e._v(" Actuating EventNetworks")]),e._v(" "),a("p",[a("code",[e._v("EventNetwork")]),e._v("s returned by "),a("code",[e._v("compile")]),e._v(" must be actuated before reactimated events  have an effect.")]),e._v(" "),a("div",{staticClass:"language-hs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("main")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputFire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("newAddHandler")]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("eventNetwork")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("compile")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("$")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputEvent")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("fromAddHandler")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputHandler")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputEventReaction")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("fmap")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("putStrLn")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputEvent")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("reactimate")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputEventReaction")]),e._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputFire")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"This will NOT be printed to the console!"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("actuate")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("eventNetwork")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("inputFire")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"This WILL be printed to the console!"')]),e._v("\n\n")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);