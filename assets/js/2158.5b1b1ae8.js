(window.webpackJsonp=window.webpackJsonp||[]).push([[2158],{2566:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" UPDATE")]),t._v(" "),a("h2",{attrs:{id:"basic-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-update"}},[t._v("#")]),t._v(" Basic Update")]),t._v(" "),a("h3",{attrs:{id:"updating-one-row"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-one-row"}},[t._v("#")]),t._v(" Updating "),a("strong",[t._v("one")]),t._v(" row")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'luke_smith@email.com'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n")])])]),a("p",[t._v("This query updates the content of "),a("code",[t._v("email")]),t._v(" in the "),a("code",[t._v("customers")]),t._v(" table to the string "),a("code",[t._v("luke_smith@email.com")]),t._v(" where the value of "),a("code",[t._v("id")]),t._v(" is equal to 1. The old and new contents of the database table are illustrated below on the left and right respectively:")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://i.stack.imgur.com/IeWcs.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/IeWcs.png",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"updating-all-rows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-all-rows"}},[t._v("#")]),t._v(" Updating "),a("strong",[t._v("all")]),t._v(" rows")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" lastname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'smith'")]),t._v("\n\n")])])]),a("p",[t._v("This query update the content of "),a("code",[t._v("lastname")]),t._v(" for every entry  in the "),a("code",[t._v("customers")]),t._v(" table. The old and new contents of the database table are illustrated below on the left and right respectively:")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://i.stack.imgur.com/jUYMk.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/jUYMk.png",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("Notice:")]),t._v(" It is necessary to use conditional clauses (WHERE) in UPDATE query. If you do not use any conditional clause then all records of that table's attribute will be updated. In above example new value (Smith) of lastname in customers table set to all rows.")]),t._v(" "),a("h2",{attrs:{id:"update-with-join-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-with-join-pattern"}},[t._v("#")]),t._v(" Update with Join Pattern")]),t._v(" "),a("p",[t._v("Consider a production table called "),a("code",[t._v("questions_mysql")]),t._v(" and a table "),a("code",[t._v("iwtQuestions")]),t._v(" (imported worktable) representing the last batch of imported CSV data from a "),a("a",{attrs:{href:"http://dev.mysql.com/doc/refman/5.7/en/load-data.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("LOAD DATA INFILE")]),a("OutboundLink")],1),t._v(". The worktable is truncated before the import, the data is imported, and that process is not shown here.")]),t._v(" "),a("p",[t._v("Update our production data using a join to our imported worktable data.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" questions_mysql q "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- our real table for production ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" iwtQuestions i "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- imported worktable ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qId\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("closeVotes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("closeVotes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("votes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("votes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \nq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("answers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("answers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \nq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("views "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("views"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("Aliases "),a("code",[t._v("q")]),t._v(" and "),a("code",[t._v("i")]),t._v(" are used to abbreviate the table references. This eases development and readability.")]),t._v(" "),a("p",[a("code",[t._v("qId")]),t._v(", the Primary Key, represents the Stackoverflow question id. Four columns are updated for matching rows from the join.")]),t._v(" "),a("h2",{attrs:{id:"update-with-order-by-and-limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-with-order-by-and-limit"}},[t._v("#")]),t._v(" UPDATE with ORDER BY and LIMIT")]),t._v(" "),a("p",[t._v("If the "),a("code",[t._v("ORDER BY")]),t._v(" clause is specified in your update SQL statement, the rows are updated in the order that is specified.")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("LIMIT")]),t._v(" clause is specified in your SQL statement, that places a limit on the number of rows that can be updated. There is no limit, if "),a("code",[t._v("LIMIT")]),t._v(" clause not specified.")]),t._v(" "),a("p",[a("code",[t._v("ORDER BY")]),t._v(" and "),a("code",[t._v("LIMIT")]),t._v(" cannot be used for multi table update.")]),t._v(" "),a("p",[t._v("Syntax for the MySQL "),a("code",[t._v("UPDATE")]),t._v(" with "),a("code",[t._v("ORDER BY")]),t._v(" and "),a("code",[t._v("LIMIT")]),t._v(" is,")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" LOW_PRIORITY "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IGNORE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntableName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" column1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expression1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    column2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expression2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" conditions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ASC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" row_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---\x3e Example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" isConfirmed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" joiningDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n")])])]),a("p",[t._v("In the above example, 10 rows will be updated according to the order of employees "),a("code",[t._v("joiningDate")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"multiple-table-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiple-table-update"}},[t._v("#")]),t._v(" Multiple Table UPDATE")]),t._v(" "),a("p",[t._v("In multiple table "),a("code",[t._v("UPDATE")]),t._v(", it updates rows in each specified tables that satisfy the conditions. Each matching row is updated once, even if it matches the conditions multiple times.")]),t._v(" "),a("p",[t._v("In multiple table "),a("code",[t._v("UPDATE")]),t._v(", "),a("code",[t._v("ORDER BY")]),t._v(" and "),a("code",[t._v("LIMIT")]),t._v(" cannot be used.")]),t._v(" "),a("p",[t._v("Syntax for multi table "),a("code",[t._v("UPDATE")]),t._v(" is,")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LOW_PRIORITY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IGNORE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \ntable1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" table2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" column1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expression1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        column2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expression2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" conditions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("p",[t._v("For example consider two tables, "),a("code",[t._v("products")]),t._v(" and "),a("code",[t._v("salesOrders")]),t._v(". In case, we decrease the quantity of a particular product from the sales order which is placed already. Then we also need to increase that quantity in our stock column of "),a("code",[t._v("products")]),t._v(" table. This can be done in single SQL update statement like below.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" salesOrders\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" salesOrders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Quantity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" salesOrders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Quantity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n      products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("availableStock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("availableStock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("productId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" salesOrders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("productId\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" salesOrders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("orderId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" salesOrders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("productId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("In the above example, quantity '5' will be reduced from the "),a("code",[t._v("salesOrders")]),t._v(" table and the same will be increased in "),a("code",[t._v("products")]),t._v(" table according to the "),a("code",[t._v("WHERE")]),t._v(" conditions.")]),t._v(" "),a("h2",{attrs:{id:"bulk-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bulk-update"}},[t._v("#")]),t._v(" Bulk UPDATE")]),t._v(" "),a("p",[t._v("When updating multiple rows with different values it is much quicker to use a bulk update.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" people \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Karl'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mary'")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("By bulk updating only one query can be sent to the server instead of one query for each row to update. The cases should contain all possible parameters looked up in the "),a("code",[t._v("WHERE")]),t._v(" clause.")]),t._v(" "),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("li",[a("p",[t._v("UPDATE [ LOW_PRIORITY ] [ IGNORE ]\ntableName\nSET column1 = expression1,\ncolumn2 = expression2,\n...\n[WHERE conditions];  //Simple single table update")])]),t._v(" "),a("li",[a("p",[t._v("UPDATE [ LOW_PRIORITY ] [ IGNORE ]\ntableName\nSET column1 = expression1,\ncolumn2 = expression2,\n...\n[WHERE conditions]\n[ORDER BY expression [ ASC | DESC ]]\n[LIMIT row_count];  //Update with order by and limit")])]),t._v(" "),a("li",[a("p",[t._v("UPDATE [LOW_PRIORITY] [IGNORE]\ntable1, table2, ...\nSET column1 = expression1,\ncolumn2 = expression2,\n...\n[WHERE conditions];  //Multiple Table update")])])])}),[],!1,null,null,null);s.default=n.exports}}]);