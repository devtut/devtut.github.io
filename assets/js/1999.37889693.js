(window.webpackJsonp=window.webpackJsonp||[]).push([[1999],{2407:function(a,s,t){"use strict";t.r(s);var e=t(31),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"dynamic-data-masking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-data-masking"}},[a._v("#")]),a._v(" Dynamic data masking")]),a._v(" "),t("h2",{attrs:{id:"mask-email-address-using-dynamic-data-masking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mask-email-address-using-dynamic-data-masking"}},[a._v("#")]),a._v(" Mask email address using Dynamic data masking")]),a._v(" "),t("p",[a._v("If you have email column you can mask it with email() mask:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v("  Company\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COLUMN")]),a._v(" Email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" MASKED "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WITH")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FUNCTION")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'email()'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("p",[a._v("When user tries to select emails from Company table, he will get something like the following values:")]),a._v(" "),t("p",[a._v("mXXX@XXXX.com")]),a._v(" "),t("p",[a._v("zXXX@XXXX.com")]),a._v(" "),t("p",[a._v("rXXX@XXXX.com")]),a._v(" "),t("h2",{attrs:{id:"add-partial-mask-on-column"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-partial-mask-on-column"}},[a._v("#")]),a._v(" Add partial mask on column")]),a._v(" "),t("p",[a._v("You can add partial mask on the column that will show few characters from te beginning and the end of the string and show mask instead of the characters in the middle:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v("  Company\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COLUMN")]),a._v(" Phone "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" MASKED "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WITH")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FUNCTION")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'partial(5,\"XXXXXXX\",2)'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("p",[a._v("In the parameters of the partial function you can specify how many values from the beginning will be shown, how many values from the end will be shown, and what woudl be the pattern that is shown in the middle.")]),a._v(" "),t("p",[a._v("When user tries to select emails from Company table, he will get something like the following values:")]),a._v(" "),t("p",[a._v("(381)XXXXXXX39")]),a._v(" "),t("p",[a._v("(360)XXXXXXX01")]),a._v(" "),t("p",[a._v("(415)XXXXXXX05")]),a._v(" "),t("h2",{attrs:{id:"showing-random-value-from-the-range-using-random-mask"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#showing-random-value-from-the-range-using-random-mask"}},[a._v("#")]),a._v(" Showing random value from the range using random() mask")]),a._v(" "),t("p",[a._v("Random mask will show a rundom number from the specified range instead of the actual value:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v("  Product\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COLUMN")]),a._v(" Price "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" MASKED "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WITH")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FUNCTION")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'random(100,200)'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("p",[a._v("Note that is some cases displayed value might match actual value in column (if randomly selected number matches value in the cell).")]),a._v(" "),t("h2",{attrs:{id:"adding-default-mask-on-the-column"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#adding-default-mask-on-the-column"}},[a._v("#")]),a._v(" Adding default mask on the column")]),a._v(" "),t("p",[a._v("If you add default mask on the column, instead of actual value in SELECT statement will be shown mask:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v("  Company\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COLUMN")]),a._v(" Postcode "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" MASKED "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WITH")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FUNCTION")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'default()'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"controlling-who-can-see-unmasked-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controlling-who-can-see-unmasked-data"}},[a._v("#")]),a._v(" Controlling who can see unmasked data")]),a._v(" "),t("p",[a._v("You can grant in-privileged users right to see unmasked values using the following statement:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("GRANT")]),a._v(" UNMASK "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TO")]),a._v(" MyUser\n\n")])])]),t("p",[a._v("If some user already has unmask permission, you can revoke this permission:")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("REVOKE")]),a._v(" UNMASK "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("TO")]),a._v(" MyUser\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);