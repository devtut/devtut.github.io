(window.webpackJsonp=window.webpackJsonp||[]).push([[1928],{2337:function(t,a,s){"use strict";s.r(a);var n=s(31),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"matlab-best-practices"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#matlab-best-practices"}},[t._v("#")]),t._v(" MATLAB Best Practices")]),t._v(" "),s("h2",{attrs:{id:"indent-code-properly"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indent-code-properly"}},[t._v("#")]),t._v(" Indent code properly")]),t._v(" "),s("p",[t._v("Proper indentation gives not only the aesthetic look but also increases the readability of the code.")]),t._v(" "),s("p",[t._v("For example, consider the following code:")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%no need to understand the code, just give it a look")]),t._v("\nn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ii "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" jj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ii"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("jj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\nbf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" bf\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" bf\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\nn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),s("p",[t._v("As you can see, you need to give a careful look to see which loop and "),s("code",[t._v("if")]),t._v(" statements are ending where.\n"),s("br"),t._v(" With smart indentation, you'll get this look:")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ii "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" jj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ii"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("jj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n                bf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" bf\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" bf\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n    n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),s("p",[t._v("This clearly indicates the starting and ending of loops/"),s("code",[t._v("if")]),t._v(" statement.")]),t._v(" "),s("p",[t._v("You can do smart indentation by:\n"),s("br"),t._v(" "),s("strong",[t._v("•")]),t._v(" selecting all your code ("),s("kbd",[t._v("Ctrl")]),t._v("+"),s("kbd",[t._v("A")]),t._v(")\n"),s("br"),t._v(" "),s("strong",[t._v("•")]),t._v(" and then pressing "),s("kbd",[t._v("Ctrl")]),t._v("+"),s("kbd",[t._v("I")]),t._v(" or clicking "),s("a",{attrs:{href:"http://i.stack.imgur.com/PVQ0b.jpg",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://i.stack.imgur.com/PVQ0b.jpg",alt:"SmartIndentIcon"}}),s("OutboundLink")],1),t._v(" from edit bar.\n"),s("a",{attrs:{href:"http://i.stack.imgur.com/8N7uJ.jpg",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"http://i.stack.imgur.com/8N7uJ.jpg",alt:"Editor"}}),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"keep-lines-short"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-lines-short"}},[t._v("#")]),t._v(" Keep lines short")]),t._v(" "),s("p",[t._v("Use the continuation character (ellipsis) "),s("code",[t._v("...")]),t._v(" to continue long statement.")]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyFunc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" parameter1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameter2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameter3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameter4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parameter5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parameter6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parameter7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parameter8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parameter9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("can be replaced by:")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyFunc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" parameter1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        parameter2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        parameter3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        parameter4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        parameter5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        parameter6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        parameter7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        parameter8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        parameter9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"use-assert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-assert"}},[t._v("#")]),t._v(" Use assert")]),t._v(" "),s("p",[t._v("Matlab allows some very trivial mistakes to go by silently, which might cause an error to be raised much later in the run - making debugging hard.\nIf you "),s("strong",[t._v("assume")]),t._v(" something about your variables, "),s("strong",[t._v("validate")]),t._v(" it.")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" out1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_cell_value_at_index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scalar1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cell2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isscalar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scalar1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1st input must be a scalar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iscell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cell2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2nd input must be a cell array'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cell2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" scalar1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2nd input must have more elements than the value of the 1st input'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isempty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cell2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("scalar1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2nd input at location is empty'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nout1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cell2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("scalar1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"avoid-loops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#avoid-loops"}},[t._v("#")]),t._v(" Avoid loops")]),t._v(" "),s("p",[t._v("Most of the time, loops are computationally expensive with Matlab. Your code will be orders of magnitudes faster if you use vectorization. It also often makes your code more modular, easily modifiable, and easier to debug. The major downside is that you have to take time to plan the data structures, and dimension errors are easier to come by.")]),t._v(" "),s("h3",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("p",[t._v("Don't write")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pi")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("R")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),s("p",[t._v("but")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Don't write")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("i")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("j")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("m\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("i")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("j")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("i")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("j")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),s("p",[t._v("But something similar to")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repmat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repmat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("For more details, see "),s("a",{attrs:{href:"https://stackoverflow.com/documentation/matlab/750/vectorization",target:"_blank",rel:"noopener noreferrer"}},[t._v("vectorization"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"block-comment-operator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#block-comment-operator"}},[t._v("#")]),t._v(" Block Comment Operator")]),t._v(" "),s("p",[t._v("It is a good practice to add comments that describe the code. It is helpful for others and even for the coder when returned later.\nA single line can be commented using the "),s("code",[t._v("%")]),t._v(" symbol or using the shortkey "),s("code",[t._v("Ctrl+R")]),t._v(".\nTo uncomment a previously commented line remove the "),s("code",[t._v("%")]),t._v(" symbol or use shortkey "),s("code",[t._v("Crtl+T")]),t._v(".")]),t._v(" "),s("p",[t._v("While commenting a block of code can be done by adding a "),s("code",[t._v("%")]),t._v(" symbol at the beginning of each line, newer versions of MATLAB (after 2015a) let you use the "),s("strong",[t._v("Block Comment Operator")]),t._v(" "),s("code",[t._v("%{ code %}")]),t._v(".\nThis operator increases the readability of the code. It can be used for both code commenting and function help documentation.\nThe Block can be "),s("strong",[t._v("folded")]),t._v(" and "),s("strong",[t._v("unfolded")]),t._v(" to increase the readability of the code.")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://i.stack.imgur.com/x8MtW.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://i.stack.imgur.com/x8MtW.png",alt:"enter image description here"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("As it can be seen the "),s("code",[t._v("%{")]),t._v(" and "),s("code",[t._v("%}")]),t._v(" operators must appear alone on the lines. Do not include any other text on these lines.")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%{")]),t._v("\nmyFunction  Binary Singleton Expansion Function\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" applies the element"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("by"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element binary operation\nspecified by the "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" handle FUNC to arrays A and B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" with implicit\nexpansion enabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%%  Compute z(x, y) = x.*sin(y) on a grid:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% x = 1:10;")]),t._v("\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%{")]),t._v("\nz "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("zeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ii"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" jj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("z")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ii"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("jj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ii"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%}")]),t._v("\n\nz "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bsxfun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"create-unique-name-for-temporary-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-unique-name-for-temporary-file"}},[t._v("#")]),t._v(" Create Unique Name for Temporary File")]),t._v(" "),s("p",[t._v("While coding a script or a function, it can be the case that one or more than one\ntemporary file be needed in order to, for example, store some data.")]),t._v(" "),s("p",[t._v("In order to avoid overwriting an existing file or to shadow a MATLAB function\nthe "),s("a",{attrs:{href:"https://uk.mathworks.com/help/matlab/ref/tempname.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("tempname"),s("OutboundLink")],1),t._v(" function\ncan be used to generate a "),s("strong",[t._v("unique name")]),t._v(" for a temporary file in the system temporary folder.")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("my_temp_file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tempname\n\n")])])]),s("p",[t._v("The filename is generated without the extension; it can be added by concatenating\nthe desired extension to the name generated by "),s("code",[t._v("tempname")])]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("my_temp_file_with_ext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tempname "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("p",[t._v("The locaton of the system temporary folder can be retrieved by caling the\n"),s("a",{attrs:{href:"https://uk.mathworks.com/help/matlab/ref/tempdir.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("tempdir"),s("OutboundLink")],1),t._v(" function.")]),t._v(" "),s("p",[t._v("If, during the execution of the function / script, the temporary file is no longer\nneeded, it can be deleted by using the function "),s("a",{attrs:{href:"https://uk.mathworks.com/help/matlab/ref/delete.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("delete"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Since "),s("code",[t._v("delete")]),t._v(" does not ask for confirmation, it might be useful to set "),s("code",[t._v("on")]),t._v(" the\noption to move the file to be deleted in the "),s("code",[t._v("recycle")]),t._v(" folder.")]),t._v(" "),s("p",[t._v("This can be done by using the function "),s("a",{attrs:{href:"https://uk.mathworks.com/help/matlab/ref/recycle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("recycle"),s("OutboundLink")],1),t._v(" this\nway:")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("recycle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'on'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("In the following example, a possible usage of the functions "),s("code",[t._v("tempname")]),t._v(", "),s("code",[t._v("delete")]),t._v(" and\n"),s("code",[t._v("recycle")]),t._v(" is proposed.")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Create some example data")]),t._v("\n%\ntheta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("theta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ny"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("theta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Generate the temporary filename")]),t._v("\n%\nmy_temp_file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tempname "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.mat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Split the filename (path, name, extension) and display them in a message box")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tmp_file_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tmp_file_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tmp_file_ext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fileparts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_temp_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uiwait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("msgbox")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sprintf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Path= %s\\nName= %s\\nExt= %s'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n              tmp_file_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tmp_file_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tmp_file_ext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TEMPORARY FILE'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Save the varaibles in a temporary file")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_temp_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'theta'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Load the varaibles from the temporary file")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_temp_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Set the reclycle option on")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("recycle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'on'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Delete the temporary file")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_temp_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[s("strong",[t._v("Caveat")])]),t._v(" "),s("p",[t._v("The temporary filename is generated by using the "),s("code",[t._v("java.util.UUID.randomUUID")]),t._v(" method\n("),s("a",{attrs:{href:"https://docs.oracle.com/javase/7/docs/api/java/util/UUID.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("randomUUID"),s("OutboundLink")],1),t._v(").")]),t._v(" "),s("p",[t._v("If MATLAB is run without JVM, the temporary filename is generated by using"),s("br"),t._v(" "),s("code",[t._v("matlab.internal.timing.timing")]),t._v(" based on the CPU counter and time. In this case\nthe temporary filename is not guaranteed to be unique.")]),t._v(" "),s("h2",{attrs:{id:"use-validateattributes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-validateattributes"}},[t._v("#")]),t._v(" Use validateattributes")]),t._v(" "),s("p",[t._v("The function "),s("a",{attrs:{href:"https://uk.mathworks.com/help/matlab/ref/validateattributes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("validateattributes"),s("OutboundLink")],1),t._v("\ncan be used to validate an array against a set of specifications")]),t._v(" "),s("p",[t._v("It can be therefore used to validate the input provided to a function.")]),t._v(" "),s("p",[t._v("In the following example, the function "),s("code",[t._v("test_validateattributes")]),t._v(" requires three\ninput")]),t._v(" "),s("p",[s("code",[t._v("function test_validateattributes(input_1,input_2,input_3)")])]),t._v(" "),s("p",[t._v("The input specification are:")]),t._v(" "),s("li",[t._v("\narray_1:\n"),s("ul",[t._v("\n- class: double\n- size: [3,2]\n- values: elements must be not NaN\n"),s("p",[t._v("char_array:")]),t._v(" "),s("ul",[s("li",[t._v("class: char")]),t._v(" "),s("li",[t._v("value: the string must not be empty")])]),t._v(" "),s("p",[t._v("array_3")]),t._v(" "),s("ul",[s("li",[t._v("class: double")]),t._v(" "),s("li",[t._v("size: [5 1]")]),t._v(" "),s("li",[t._v("values: elements must be real")])]),t._v(" "),s("p",[t._v("To validate the three input, the function "),s("code",[t._v("validateattributes")]),t._v(" can be called\nwith the following syntax:")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validateattributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("classes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("attributes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("funcName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("varName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("argIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("where:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("A")]),t._v(" is the array to be vaidated")]),t._v(" "),s("li",[s("code",[t._v("classes")]),t._v(": is the "),s("code",[t._v("type")]),t._v(" of the array (e. g. "),s("code",[t._v("single")]),t._v(", "),s("code",[t._v("double")]),t._v(", "),s("code",[t._v("logical")]),t._v(")\n")]),s("li",[s("code",[t._v("attributes")]),t._v(": are the atrributes the input array has to match (e. g. "),s("code",[t._v("[3,2], size")]),t._v("\nto specify the size of the array, "),s("code",[t._v("nonnan")]),t._v(" to specify that the array shall not have NaN values)")]),t._v(" "),s("li",[s("code",[t._v("funcName")]),t._v(": is the name of the function in which the validation occurs.\nThis argument is used in the generation of the error message (if any)")])])])]),t._v(" "),s("li",[s("code",[t._v("varName")]),t._v(": is the name of the array under validation. This argument is used in the generation of the error message (if any)\n")]),s("li",[s("code",[t._v("argIndex")]),t._v(": is the position of the inpurt array in the list of input.\nThis argument is used in the generation of the error message (if any)")]),t._v(" "),s("p",[t._v("In case one or more than one input does not match the specification, an error\nmessage is generated.")]),t._v(" "),s("p",[t._v("In case of more than one invalid input, the validation stops when the first mismatch is found.")]),t._v(" "),s("p",[t._v("This is "),s("code",[t._v("function test_validateattributes")]),t._v(" in which the input validation\nhas been implemented.")]),t._v(" "),s("p",[t._v("Since the function requires three input, a first check on the number of input\nprovided is performed using the fnction "),s("a",{attrs:{href:"https://uk.mathworks.com/help/matlab/ref/nargin.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nargin"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_validateattributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("char_array_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("array_3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Check for the number of expected input: if the number of input is less")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% than the require, the function exits with an error message")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nargin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Error: TEST_VALIDATEATTRIBUTES requires 3 input, found %d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nargin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Definition of the expected characteristics of the first input %")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% INPUT #1 name (only used in the generation of the error message)")]),t._v("\n%\ninput_1_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'array_1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% INPUT #1 position (only used in the generation of the error message)")]),t._v("\n%\ninput_1_position"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('% Expected CLASS of the first input MUST BE "double"')]),t._v("\n%\ninput_1_class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'double'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Expected ATTRIBUTES of the first input")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%   SIZE: MUST BE [3,2]")]),t._v("\n%\ninput_1_size_attribute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'size'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninput_1_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%   VALUE CHECK: the element MUST BE NOT NaN")]),t._v("\n%\ninput_1_value_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nonnan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Build the INPUT 1 attributes")]),t._v("\n%\ninput_1_attributes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("input_1_size_attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_1_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n                    input_1_value_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% CHECK THE VALIDITY OF THE FIRST INPUT")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validateattributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n                   input_1_class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_1_attributes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n                   input_1_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_1_position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Definition of the expected characteristics of the second input %")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% INPUT #1 name (only used in the generation of the error message)")]),t._v("\n%\ninput_2_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'char_array_1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% INPUT #2 position (only used in the generation of the error message)")]),t._v("\n%\ninput_2_position"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('% Expected CLASS of the first input MUST BE "string"')]),t._v("\n%\ninput_2_class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'char'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%   VALUE CHECK: the element must be not NaN")]),t._v("\n%\ninput_2_size_attribute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nonempty'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Build the INPUT 2 attributes")]),t._v("\n%\ninput_2_attributes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("input_2_size_attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% CHECK THE VALIDITY OF THE SECOND INPUT")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validateattributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("char_array_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n                   input_2_class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_2_attributes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n                   input_2_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_2_position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Definition of the expected characteristics of the third input %")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% INPUT #3 name (only used in the generation of the error message)")]),t._v("\n%\ninput_3_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'array_3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% INPUT #3 position (only used in the generation of the error message)")]),t._v("\n%\ninput_3_position"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('% Expected CLASS of the first input MUST BE "double"')]),t._v("\n%\ninput_3_class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'double'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Expected ATTRIBUTES of the first input")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%   SIZE: must be [5]")]),t._v("\ninput_3_size_attribute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'size'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninput_3_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%   VALUE CHECK: the elements must be real")]),t._v("\ninput_3_value_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'real'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Build the INPUT 3 attributes")]),t._v("\n%\ninput_3_attributes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("input_3_size_attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_3_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n                    input_3_value_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% CHECK THE VALIDITY OF THE FIRST INPUT")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validateattributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array_3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n                   input_3_class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_3_attributes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n                   input_3_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_3_position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("disp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'All the three input are OK'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("The following script can be used to test the implementation of the validation procedure.")]),t._v(" "),s("p",[t._v("It generate the three input required and, randomly, it makes them not valid.")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Generate the first input")]),t._v("\n%\nn_rows"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("randi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn_cols"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninput_1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("randi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n_rows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n_cols"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Generate the second input")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   input_2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is a string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n   input_2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Generate the third input")]),t._v("\n%\ninput_3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("acos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Call the test_validateattributes function with the above generated input")]),t._v("\n%\ninput_1\ninput_2\ninput_3\n%\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_validateattributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("input_3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("These are a couple of examples of wrong input detected by the "),s("code",[t._v("validateattributes")]),t._v(" function:")]),t._v(" "),s("p",[t._v("Wrong input")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("input_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("\n\ninput_2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n\ninput_3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4455i")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2420")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000i")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4063")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000i")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3424")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000i")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2186")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000i")]),t._v("\n\nError using "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_validateattributes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nExpected input number "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to be of size "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("x2 when it is actually\nsize "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n")])])]),s("p",[t._v("Wrong input")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("input_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v("\n\ninput_2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\nThis is a string\n\ninput_3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1371")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000i")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6528")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000i")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0479")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000i")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1435i")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0316")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0000i")]),t._v("\n\nError using "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_validateattributes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("109")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nExpected input number "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array_3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to be real"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n")])])]),s("p",[t._v("Valid input")]),t._v(" "),s("div",{staticClass:"language-matlab extra-class"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("input_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("\n\ninput_2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\nThis is a string\n\ninput_3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.9696")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5279")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3581")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5234")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.9665")]),t._v("\n\nAll the three input are OK\n\n")])])]),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),s("p",[t._v("This topic displays best practices that the community has learned over time.")])])}),[],!1,null,null,null);a.default=e.exports}}]);