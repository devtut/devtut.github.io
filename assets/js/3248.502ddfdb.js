(window.webpackJsonp=window.webpackJsonp||[]).push([[3248],{3656:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"common-table-expressions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-table-expressions"}},[t._v("#")]),t._v(" Common Table Expressions")]),t._v(" "),a("h2",{attrs:{id:"generating-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generating-values"}},[t._v("#")]),t._v(" generating values")]),t._v(" "),a("p",[t._v("Most databases do not have a native way of generating a series of numbers for ad-hoc use; however, common table expressions can be used with recursion to emulate that type of function.")]),t._v(" "),a("p",[t._v("The following example generates a common table expression called "),a("code",[t._v("Numbers")]),t._v(" with a column "),a("code",[t._v("i")]),t._v(" which has a row for numbers 1-5:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('--Give a table name `Numbers" and a column `i` to hold the numbers')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" Numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Starting number/index")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Top-level UNION ALL operator required for recursion")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Iteration expression:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Table expression we first declared used as source for recursion")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Numbers\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Clause to define the end of the recursion")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Use the generated table expression like a regular table")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("i")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("3")])]),t._v(" "),a("tr",[a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("5")])])])]),t._v(" "),a("p",[t._v("This method can be used with any number interval, as well as other types of data.")]),t._v(" "),a("h2",{attrs:{id:"recursively-enumerating-a-subtree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recursively-enumerating-a-subtree"}},[t._v("#")]),t._v(" recursively enumerating a subtree")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" RECURSIVE ManagedByJames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Level")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- start with this row")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LName\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employees\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- get employees that have any of the previously selected rows as manager")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ManagedByJames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Level")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           Employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           Employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           Employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LName\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employees\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" ManagedByJames\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ManagerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ManagedByJames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- depth-first search")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ManagedByJames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Level")]),t._v(" "),a("th",[t._v("ID")]),t._v(" "),a("th",[t._v("FName")]),t._v(" "),a("th",[t._v("LName")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("1")])]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("James")]),t._v(" "),a("td",[t._v("Smith")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("2")])]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("John")]),t._v(" "),a("td",[t._v("Johnson")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("3")])]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("Johnathon")]),t._v(" "),a("td",[t._v("Smith")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("2")])]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("Michael")]),t._v(" "),a("td",[t._v("Williams")])])])]),t._v(" "),a("h2",{attrs:{id:"temporary-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#temporary-query"}},[t._v("#")]),t._v(" Temporary query")]),t._v(" "),a("p",[t._v("These behave in the same manner as nested subqueries but with a different syntax.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" ReadyCars "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Cars\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Status")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'READY'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TotalCost\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ReadyCars\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" TotalCost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("ID")]),t._v(" "),a("th",[t._v("Model")]),t._v(" "),a("th",[t._v("TotalCost")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("Ford F-150")]),t._v(" "),a("td",[t._v("200")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("Ford F-150")]),t._v(" "),a("td",[t._v("230")])])])]),t._v(" "),a("p",[a("strong",[t._v("Equivalent subquery syntax")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TotalCost\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Cars\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Status")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'READY'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" ReadyCars\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" TotalCost\n\n")])])]),a("h2",{attrs:{id:"recursively-going-up-in-a-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recursively-going-up-in-a-tree"}},[t._v("#")]),t._v(" recursively going up in a tree")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" RECURSIVE ManagersOfJonathon "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- start with this row")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employees\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- get manager(s) of all previously selected rows")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Employees\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" ManagersOfJonathon\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ManagersOfJonathon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ManagerID\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ManagersOfJonathon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Id")]),t._v(" "),a("th",[t._v("FName")]),t._v(" "),a("th",[t._v("LName")]),t._v(" "),a("th",[t._v("PhoneNumber")]),t._v(" "),a("th",[t._v("ManagerId")]),t._v(" "),a("th",[t._v("DepartmentId")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("Johnathon")]),t._v(" "),a("td",[t._v("Smith")]),t._v(" "),a("td",[t._v("1212121212")]),t._v(" "),a("td",[a("strong",[t._v("2")])]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("2")])]),t._v(" "),a("td",[t._v("John")]),t._v(" "),a("td",[t._v("Johnson")]),t._v(" "),a("td",[t._v("2468101214")]),t._v(" "),a("td",[a("strong",[t._v("1")])]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("1")])]),t._v(" "),a("td",[t._v("James")]),t._v(" "),a("td",[t._v("Smith")]),t._v(" "),a("td",[t._v("1234567890")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("1")])])])]),t._v(" "),a("h2",{attrs:{id:"recursively-generate-dates-extended-to-include-team-rostering-as-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recursively-generate-dates-extended-to-include-team-rostering-as-example"}},[t._v("#")]),t._v(" Recursively generate dates, extended to include team rostering as example")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@DateFrom")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2016-06-01 06:00'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@DateTo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATETIME")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2016-07-01 06:00'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@IntervalDays")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Transition Sequence = Rest & Relax into Day Shift into Night Shift")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- RR (Rest & Relax) = 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- DS (Day Shift) = 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- NS (Night Shift) = 3")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" roster "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@DateFrom")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" RosterStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamC\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" DATEADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@IntervalDays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RosterStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" TeamA "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" TeamB "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" TeamC "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamC\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" roster "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" RosterStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" DATEADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@IntervalDays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@DateTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" RosterStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       ISNULL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LEAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RosterStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OVER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" RosterStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RosterStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@IntervalDays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" RosterEnd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" TeamA "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'RR'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DS'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NS'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" TeamB "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'RR'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DS'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NS'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" TeamC "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'RR'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DS'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NS'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" TeamC\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" roster\n\n")])])]),a("p",[a("strong",[t._v("Result")])]),t._v(" "),a("p",[t._v("I.e. For Week 1 TeamA is on R&R, TeamB is on Day Shift and TeamC is on Night Shift.")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://i.stack.imgur.com/rm2xk.jpg",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://i.stack.imgur.com/rm2xk.jpg",alt:"enter image description here"}}),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"oracle-connect-by-functionality-with-recursive-ctes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle-connect-by-functionality-with-recursive-ctes"}},[t._v("#")]),t._v(" Oracle CONNECT BY functionality with recursive CTEs")]),t._v(" "),a("p",[t._v("Oracle's CONNECT BY functionality provides many useful and nontrivial features that are not built-in when using SQL standard recursive CTEs. This example replicates these features (with a few additions for sake of completeness), using SQL Server syntax. It is most useful for Oracle developers finding many features missing in their hierarchical queries on other databases, but it also serves to showcase what can be done with a hierarchical query in general.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n WITH tbl AS (\n       SELECT id, name, parent_id\n         FROM mytable)\n     , tbl_hierarchy AS (\n       /* Anchor */\n       SELECT 1 AS \"LEVEL\"\n            --, 1 AS CONNECT_BY_ISROOT\n            --, 0 AS CONNECT_BY_ISBRANCH\n            , CASE WHEN t.id IN (SELECT parent_id FROM tbl) THEN 0 ELSE 1 END AS CONNECT_BY_ISLEAF\n            , 0 AS CONNECT_BY_ISCYCLE\n            , '/' + CAST(t.id   AS VARCHAR(MAX)) + '/' AS SYS_CONNECT_BY_PATH_id\n            , '/' + CAST(t.name AS VARCHAR(MAX)) + '/' AS SYS_CONNECT_BY_PATH_name\n            , t.id AS root_id\n            , t.*\n         FROM tbl t\n        WHERE t.parent_id IS NULL                            -- START WITH parent_id IS NULL\n       UNION ALL\n       /* Recursive */\n       SELECT th.\"LEVEL\" + 1 AS \"LEVEL\"\n            --, 0 AS CONNECT_BY_ISROOT\n            --, CASE WHEN t.id IN (SELECT parent_id FROM tbl) THEN 1 ELSE 0 END AS CONNECT_BY_ISBRANCH\n            , CASE WHEN t.id IN (SELECT parent_id FROM tbl) THEN 0 ELSE 1 END AS CONNECT_BY_ISLEAF\n            , CASE WHEN th.SYS_CONNECT_BY_PATH_id LIKE '%/' + CAST(t.id AS VARCHAR(MAX)) + '/%' THEN 1 ELSE 0 END AS CONNECT_BY_ISCYCLE\n            , th.SYS_CONNECT_BY_PATH_id   + CAST(t.id   AS VARCHAR(MAX)) + '/' AS SYS_CONNECT_BY_PATH_id\n            , th.SYS_CONNECT_BY_PATH_name + CAST(t.name AS VARCHAR(MAX)) + '/' AS SYS_CONNECT_BY_PATH_name\n            , th.root_id\n            , t.*\n         FROM tbl t\n              JOIN tbl_hierarchy th ON (th.id = t.parent_id) -- CONNECT BY PRIOR id = parent_id\n        WHERE th.CONNECT_BY_ISCYCLE = 0)                     -- NOCYCLE\nSELECT th.*\n     --, REPLICATE(' ', (th.\"LEVEL\" - 1) * 3) + th.name AS tbl_hierarchy\n  FROM tbl_hierarchy th\n       JOIN tbl CONNECT_BY_ROOT ON (CONNECT_BY_ROOT.id = th.root_id)\n ORDER BY th.SYS_CONNECT_BY_PATH_name;                       -- ORDER SIBLINGS BY name\n\n")])])]),a("p",[t._v("CONNECT BY features demonstrated above, with explanations:")]),t._v(" "),a("li",[t._v("Clauses\n"),a("ul",[t._v("\n- CONNECT BY: Specifies the relationship that defines the hierarchy.\n- START WITH: Specifies the root nodes.\n- ORDER SIBLINGS BY: Orders results properly.\n"),a("ul",[a("li",[a("p",[t._v("NOCYCLE: Stops processing a branch when a loop is detected. Valid hierarchies are Directed Acyclic Graphs, and circular references violate this construct.")])]),t._v(" "),a("li",[a("p",[t._v("PRIOR: Obtains data from the node's parent.")])]),t._v(" "),a("li",[a("p",[t._v("CONNECT_BY_ROOT: Obtains data from the node's root.")])]),t._v(" "),a("li",[a("p",[t._v("LEVEL: Indicates the node's distance from its root.")])]),t._v(" "),a("li",[a("p",[t._v("CONNECT_BY_ISLEAF: Indicates a node without children.")])]),t._v(" "),a("li",[a("p",[t._v("CONNECT_BY_ISCYCLE: Indicates a node with a circular reference.")])]),t._v(" "),a("li",[a("p",[t._v("SYS_CONNECT_BY_PATH: Returns a flattened/concatenated representation of the path to the node from its root.")])])]),t._v(" "),a("h2",{attrs:{id:"refactoring-a-query-to-use-common-table-expressions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refactoring-a-query-to-use-common-table-expressions"}},[t._v("#")]),t._v(" Refactoring a query to use Common Table Expressions")]),t._v(" "),a("p",[t._v("Suppose we want to get all product categories with total sales greater than 20.")]),t._v(" "),a("p",[t._v("Here is a query without Common Table Expressions:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" total_sales\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" sale\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" product "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" sale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("product_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" category "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n")])])]),a("p",[t._v("And an equivalent query using Common Table Expressions:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" all_sales "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" category_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" category_description\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" sale\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" product "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" sale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("product_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" category "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sales_by_category "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" category_description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" total_sales\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" all_sales\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" category_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" category_description\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sales_by_category "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" total_sales "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"example-of-a-complex-sql-with-common-table-expression"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-of-a-complex-sql-with-common-table-expression"}},[t._v("#")]),t._v(" Example of a complex SQL with Common Table Expression")]),t._v(" "),a("p",[t._v('Suppose we want to query the "cheapest products" from the "top categories".')]),t._v(" "),a("p",[t._v("Here is an example of query using Common Table Expressions")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- all_sales: just a simple SELECT with all the needed JOINS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" all_sales "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" product_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" category_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" category_description\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" sale\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" product "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" sale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("product_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" category "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Group by category")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sales_by_category "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" category_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" category_description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" total_sales\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" all_sales\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" category_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" category_description\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Filtering total_sales > 20")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" top_categories "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sales_by_category "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" total_sales "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- all_products: just a simple SELECT with all the needed JOINS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" all_products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" product_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" product_description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" product_price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" category_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" category_description\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" product\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" category "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Order by product price")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cheapest_products "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" all_products\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" product_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ASC")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Simple inner join ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cheapest_products_from_top_categories "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" product_description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" product_price\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" cheapest_products\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" top_categories "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" cheapest_products"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" top_categories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category_id\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--The main SELECT")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" cheapest_products_from_top_categories\n\n")])])]),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("li",[a("p",[t._v("WITH QueryName [(ColumnName, ...)] AS ("),a("br"),t._v("\n  SELECT ..."),a("br"),t._v("\n)"),a("br"),t._v("\nSELECT ... FROM QueryName ...;")])]),t._v(" "),a("li",[a("p",[t._v("WITH RECURSIVE QueryName [(ColumnName, ...)] AS ("),a("br"),t._v("\n  SELECT ..."),a("br"),t._v("\n  UNION [ALL]"),a("br"),t._v("\n  SELECT ... FROM QueryName ..."),a("br"),t._v("\n)"),a("br"),t._v("\nSELECT ... FROM QueryName ...;")])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v("Official documentation: "),a("a",{attrs:{href:"http://www.sqlite.org/lang_with.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("WITH clause"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("A Common Table Expression is a temporary result set, and it can be result of complex sub query. It is defined by using WITH clause. CTE improves readability and it is created in memory rather than TempDB database where Temp Table and Table variable is created.")]),t._v(" "),a("p",[a("strong",[t._v("Key concepts of Common Table Expressions:")])]),t._v(" "),a("ul",[a("li",[t._v("Can be used to break up complex queries, especially complex joins and sub-queries.")]),t._v(" "),a("li",[t._v("Is a way of encapsulating a query definition.")]),t._v(" "),a("li",[t._v("Persist only until the next query is run.")]),t._v(" "),a("li",[t._v("Correct use can lead to improvements in both code quality/maintainability and speed.")]),t._v(" "),a("li",[t._v("Can be used to reference the resulting table multiple times in the same statement (eliminate duplication in SQL).")]),t._v(" "),a("li",[t._v("Can be a substitute for a view when the general use of a view is not required; that is, you do not have to store the definition in metadata.")]),t._v(" "),a("li",[t._v("Will be run when called, not when defined. If the CTE is used multiple times in a query it will be run multiple times (possibly with different results).")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);