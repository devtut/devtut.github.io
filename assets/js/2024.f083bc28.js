(window.webpackJsonp=window.webpackJsonp||[]).push([[2024],{2432:function(s,t,e){"use strict";e.r(t);var a=e(31),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"logical-functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logical-functions"}},[s._v("#")]),s._v(" Logical Functions")]),s._v(" "),e("h2",{attrs:{id:"choose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#choose"}},[s._v("#")]),s._v(" CHOOSE")]),s._v(" "),e("p",[s._v("Returns the item at the specified index from a list of values. If "),e("code",[s._v("index")]),s._v(" exceeds the bounds of "),e("code",[s._v("values")]),s._v(" then "),e("code",[s._v("NULL")]),s._v(" is returned.")]),s._v(" "),e("p",[s._v("Parameters:")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("index")]),s._v(": integer, index to item in "),e("code",[s._v("values")]),s._v(". 1-based.")]),s._v(" "),e("li",[e("code",[s._v("values")]),s._v(": any type, comma separated list")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CHOOSE "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'apples'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pears'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oranges'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bananas'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" chosen_result\n\nchosen_result\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-------------")]),s._v("\napples\n\n")])])]),e("h2",{attrs:{id:"iif"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iif"}},[s._v("#")]),s._v(" IIF")]),s._v(" "),e("p",[s._v("Returns one of two values, depending on whether a given Boolean expression evaluates to true or false.")]),s._v(" "),e("p",[s._v("Parameters:")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("boolean_expression")]),s._v(" evaluated to dtermine what value to return")]),s._v(" "),e("li",[e("code",[s._v("true_value")]),s._v(" returned if "),e("code",[s._v("boolean_expression")]),s._v(" evaluates to true")]),s._v(" "),e("li",[e("code",[s._v("false_value")]),s._v(" returned if "),e("code",[s._v("boolean_expression")]),s._v(" evaluates to false")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" IIF "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'I knew that!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'That is not true.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" iif_result\n\niif_result\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------------")]),s._v("\nI knew that"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n")])])]),e("p",[e("code",[s._v("IIF")]),s._v(" may be replaced by a "),e("code",[s._v("CASE")]),s._v(" statement. The above example my be written as")]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'I knew that!'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'That is not true.'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" iif_result\n\niif_result\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------------")]),s._v("\nI knew that"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);