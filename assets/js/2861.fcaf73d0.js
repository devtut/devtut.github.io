(window.webpackJsonp=window.webpackJsonp||[]).push([[2861],{3269:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"caret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret"}},[t._v("#")]),t._v(" caret")]),t._v(" "),s("p",[s("code",[t._v("caret")]),t._v(" is an R package that aids in data processing needed for machine learning problems. It stands for classification and regression training. When building models for a real dataset, there are some tasks other than the actual learning algorithm that need to be performed, such as cleaning the data, dealing with incomplete observations, validating our model on a test set, and compare different models.")]),t._v(" "),s("p",[s("code",[t._v("caret")]),t._v(" helps in these scenarios, independent of the actual learning algorithms used.")]),t._v(" "),s("h2",{attrs:{id:"preprocessing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preprocessing"}},[t._v("#")]),t._v(" Preprocessing")]),t._v(" "),s("p",[t._v("Pre-processing in caret is done through the "),s("code",[t._v("preProcess()")]),t._v(" function. Given a matrix or data frame type object "),s("code",[t._v("x")]),t._v(", "),s("code",[t._v("preProcess()")]),t._v(" applies transformations on the training data which can then be applied to testing data.")]),t._v(" "),s("p",[t._v("The heart of the "),s("code",[t._v("preProcess()")]),t._v(" function is the "),s("code",[t._v("method")]),t._v(" argument. Method operations are applied in this order:")]),t._v(" "),s("ol",[s("li",[t._v("Zero-variance filter")]),t._v(" "),s("li",[t._v("Near-zero variance filter")]),t._v(" "),s("li",[t._v("Box-Cox/Yeo-Johnson/exponential transformation")]),t._v(" "),s("li",[t._v("Centering")]),t._v(" "),s("li",[t._v("Scaling")]),t._v(" "),s("li",[t._v("Range")]),t._v(" "),s("li",[t._v("Imputation")]),t._v(" "),s("li",[t._v("PCA")]),t._v(" "),s("li",[t._v("ICA")]),t._v(" "),s("li",[t._v("Spatial Sign")])]),t._v(" "),s("p",[t._v("Below, we take the mtcars data set and perform centering, scaling, and a spatial sign transform.")]),t._v(" "),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("auto_index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" createDataPartition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mtcars"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("mpg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                  list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                  times "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmt_train "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" mtcars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("auto_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nmt_test "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" mtcars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("auto_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nprocess_mtcars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" preProcess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mt_train"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"center"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scale"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spatialSign"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmtcars_train_transf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" predict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process_mtcars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mt_train"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmtcars_test_tranf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" predict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process_mtcars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mt_test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);