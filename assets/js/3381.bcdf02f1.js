(window.webpackJsonp=window.webpackJsonp||[]).push([[3381],{3789:function(t,s,a){"use strict";a.r(s);var e=a(31),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"importing-external-libraries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#importing-external-libraries"}},[t._v("#")]),t._v(" Importing external libraries")]),t._v(" "),a("h2",{attrs:{id:"finding-definition-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finding-definition-files"}},[t._v("#")]),t._v(" Finding definition files")]),t._v(" "),a("p",[t._v("for typescript 2.x:")]),t._v(" "),a("p",[t._v("definitions from "),a("a",{attrs:{href:"https://github.com/DefinitelyTyped/DefinitelyTyped",target:"_blank",rel:"noopener noreferrer"}},[t._v("DefinitelyTyped"),a("OutboundLink")],1),t._v(" are available via "),a("a",{attrs:{href:"https://www.npmjs.com/%7Etypes",target:"_blank",rel:"noopener noreferrer"}},[t._v("@types npm"),a("OutboundLink")],1),t._v(" package")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("npm i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save lodash\nnpm i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("types")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lodash\n\n")])])]),a("p",[t._v("but in case if you want use types from other repos then can be used old way:")]),t._v(" "),a("p",[t._v("for typescript 1.x:")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/typings/typings",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typings"),a("OutboundLink")],1),t._v(" is an npm package that can automatically install type definition files into a local project. I recommend that you read the "),a("a",{attrs:{href:"https://github.com/typings/typings#quick-start",target:"_blank",rel:"noopener noreferrer"}},[t._v("quickstart"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("npm install "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("global typings\n\n")])])]),a("p",[t._v("Now we have access to the typings cli.")]),t._v(" "),a("li",[t._v("\nThe first step is to search for the package used by the project\n"),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("typings search lodash\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SOURCE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOMEPAGE")]),t._v("                                        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DESCRIPTION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERSIONS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UPDATED")]),t._v("\nlodash            dt     http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lodash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("                                          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2016")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("T00"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09.000")]),t._v("Z\nlodash            global                                                             "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2016")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T20"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07.000")]),t._v("Z\nlodash            npm    https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("npmjs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lodash                        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2016")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T20"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07.000")]),t._v("Z\n\n")])])])]),t._v(" "),a("li",[t._v("\nThen decide which source you should install from. I use dt which stands for [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped) a GitHub repo where the community can edit typings, it's also normally the most recently updated.\n")]),t._v(" "),a("li",[t._v("\nInstall the typings files\n"),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v(" typings install dt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("lodash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save\n\n")])])])]),t._v(" "),a("p",[t._v("Let's break down the last command. We are installing the DefinitelyTyped version of lodash as a global typings file in our project and saving it as a dependency in the "),a("code",[t._v("typings.json")]),t._v(". Now wherever we import lodash, typescript will load the lodash typings file.")]),t._v(" "),a("li",[t._v("\nIf we want to install typings that will be used for development environment only, we can supply the `--save-dev` flag:\n"),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v(" typings install chai "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev\n\n")])])])]),t._v(" "),a("h2",{attrs:{id:"importing-a-module-from-npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#importing-a-module-from-npm"}},[t._v("#")]),t._v(" Importing a module from npm")]),t._v(" "),a("p",[t._v("If you have a type definition file (d.ts) for the module, you can use an "),a("code",[t._v("import")]),t._v(" statement.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" _ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("If you don't have a definition file for the module, TypeScript will throw an error on compilation because it cannot find the module you are trying to import.")]),t._v(" "),a("p",[t._v("In this case, you can import the module with the normal runtime "),a("code",[t._v("require")]),t._v(" function. This returns it as the "),a("code",[t._v("any")]),t._v(" type, however.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The _ variable is of type any, so TypeScript will not perform any type checking.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("As of TypeScript 2.0, you can also use a "),a("strong",[t._v("shorthand ambient module declaration")]),t._v(" in order to tell TypeScript that a module exists when you don't have a type definition file for the module. TypeScript won't be able to provide any meaningful typechecking in this case though.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lodash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// you can now import from lodash in any way you wish:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" flatten "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lodash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" _ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lodash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("As of TypeScript 2.1, the rules have been relaxed even further. Now, as long as a module exists in your "),a("code",[t._v("node_modules")]),t._v(" directory, TypeScript will allow you to import it, even with no module declaration anywhere. (Note that if using the "),a("code",[t._v("--noImplicitAny")]),t._v(" compiler option, the below will still generate a warning.)")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Will work if `node_modules/someModule/index.js` exists, or if `node_modules/someModule/package.json` has a valid "main" entry point')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someModule"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"using-global-external-libraries-without-typings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-global-external-libraries-without-typings"}},[t._v("#")]),t._v(" Using global external libraries without typings")]),t._v(" "),a("p",[t._v("Although modules are ideal, if the library you are using is referenced by a global variable (like $ or _), because it was loaded by a "),a("code",[t._v("script")]),t._v(" tag, you can create an ambient declaration in order to refer to it:")]),t._v(" "),a("p",[a("code",[t._v("declare const _: any;")])]),t._v(" "),a("h2",{attrs:{id:"finding-definition-files-with-typescript-2-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finding-definition-files-with-typescript-2-x"}},[t._v("#")]),t._v(" Finding definition files with typescript 2.x")]),t._v(" "),a("p",[t._v("With the 2.x versions of typescript, typings are now available from the "),a("a",{attrs:{href:"https://www.npmjs.com/%7Etypes",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm @types repository"),a("OutboundLink")],1),t._v(". These are automatically resolved by the typescript compiler and are much simpler to use.")]),t._v(" "),a("p",[t._v("To install a type definition you simply install it as a dev dependency in your projects package.json")]),t._v(" "),a("p",[t._v("e.g.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("npm i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v(" lodash\nnpm i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token decorator"}},[a("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("types")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lodash\n\n")])])]),a("p",[t._v("after install you simply use the module as before")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" _ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" Syntax")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("import {component} from 'libName'; // Will import the class \"component\"")])]),t._v(" "),a("li",[a("code",[t._v('import {component as c} from \'libName\'; // Will import the class "component" into a "c" object')])]),t._v(" "),a("li",[a("code",[t._v("import component from 'libname'; // Will import the default export from libName")])]),t._v(" "),a("li",[a("code",[t._v("import * as lib from 'libName'; // Will import everything from libName into a \"lib\" object")])]),t._v(" "),a("li",[a("code",[t._v("import lib = require('libName'); // Will import everything from libName into a \"lib\" object")])]),t._v(" "),a("li",[a("code",[t._v("const lib: any = require('libName'); // Will import everything from libName into a \"lib\" object")])]),t._v(" "),a("li",[a("code",[t._v("import 'libName'; // Will import libName module for its side effects only")])])]),t._v(" "),a("h4",{attrs:{id:"remarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[t._v("#")]),t._v(" Remarks")]),t._v(" "),a("p",[t._v("It might seem that the syntax")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" lib "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'libName'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("and")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" lib "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'libName'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("are the same thing, but they are not!")]),t._v(" "),a("p",[t._v("Let us consider that we want to import a class "),a("strong",[t._v("Person")]),t._v(" exported with TypeScript-specific "),a("code",[t._v("export =")]),t._v("  syntax :")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("In this case it is not possible to import it with es6 syntax (we would get an error at compile time), TypeScript-specific "),a("code",[t._v("import =")]),t._v(" syntax must be used.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Person "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Person'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//compile error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Person'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK")]),t._v("\n\n")])])]),a("p",[t._v("The converse is true: classic modules can be imported with the second syntax, so, in a way, the last syntax is more powerful since it is able to import all exports.")]),t._v(" "),a("p",[t._v("For more information see the "),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/modules.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("official documentation"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);s.default=r.exports}}]);