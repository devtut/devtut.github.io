(window.webpackJsonp=window.webpackJsonp||[]).push([[2092],{2500:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"character-sets-and-collations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#character-sets-and-collations"}},[t._v("#")]),t._v(" Character Sets and Collations")]),t._v(" "),s("h2",{attrs:{id:"which-character-set-and-collation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#which-character-set-and-collation"}},[t._v("#")]),t._v(" Which CHARACTER SET and COLLATION?")]),t._v(" "),s("p",[t._v("There are dozens of character sets with hundreds of collations.  (A given collation belongs to only one character set.)  See the output of "),s("code",[t._v("SHOW COLLATION;")]),t._v(".")]),t._v(" "),s("p",[t._v("There are usually only 4 "),s("code",[t._v("CHARACTER SETs")]),t._v(" that matter:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("ascii "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- basic 7-bit codes.")]),t._v("\nlatin1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ascii, plus most characters needed for Western European languages.")]),t._v("\nutf8 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- the 1-, 2-, and 3-byte subset of utf8.  This excludes Emoji and some of Chinese.")]),t._v("\nutf8mb4 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- the full set of UTF8 characters, covering all current languages.")]),t._v("\n\n")])])]),s("p",[t._v("All include English characters, encoded identically.  utf8 is a subset of utf8mb4.")]),t._v(" "),s("p",[t._v("Best practice...")]),t._v(" "),s("ul",[s("li",[t._v("Use utf8mb4 for any "),s("code",[t._v("TEXT")]),t._v(" or "),s("code",[t._v("VARCHAR")]),t._v(" column that can have a variety of languages in it.")]),t._v(" "),s("li",[t._v("Use ascii (latin1 is ok) for hex strings (UUID, MD5, etc) and simple codes (country_code, postal_code, etc).")])]),t._v(" "),s("p",[t._v("utf8mb4 did not exist until version 5.5.3, so utf8 was the best available before that.")]),t._v(" "),s("p",[s("strong",[t._v("Outside of MySQL")]),t._v(", \"UTF8\" means the same things as MySQL's utf8mb4, not MySQL's utf8.")]),t._v(" "),s("p",[t._v("Collations start with the charset name and usually end with "),s("code",[t._v("_ci")]),t._v(' for "case and accent insensitive" or '),s("code",[t._v("_bin")]),t._v(' for "simply compare the bits.')]),t._v(" "),s("p",[t._v("The 'latest' utf8mb4 collation is "),s("code",[t._v("utf8mb4_unicode_520_ci")]),t._v(", based on Unicode 5.20.  If you are working with a single language, you might want, say, "),s("code",[t._v("utf8mb4_polish_ci")]),t._v(", which will rearrange the letters slightly, based on Polish conventions.")]),t._v(" "),s("h2",{attrs:{id:"declaration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#declaration"}},[t._v("#")]),t._v(" Declaration")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" utf8mb4\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"connection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#connection"}},[t._v("#")]),t._v(" Connection")]),t._v(" "),s("p",[t._v("Vital to using character sets is to tell the MySQL-server what encoding the client's bytes are.  Here is one way:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" NAMES utf8mb4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("Each language (PHP, Python, Java, ...) has its own way the it usually preferable to "),s("code",[t._v("SET NAMES")]),t._v(".")]),t._v(" "),s("p",[t._v("For example:  "),s("code",[t._v("SET NAMES utf8mb4")]),t._v(", together with a column declared "),s("code",[t._v("CHARACTER SET latin1")]),t._v(" -- this will convert from latin1 to utf8mb4 when "),s("code",[t._v("INSERTing")]),t._v(" and convert back when "),s("code",[t._v("SELECTing")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"setting-character-sets-on-tables-and-fields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-character-sets-on-tables-and-fields"}},[t._v("#")]),t._v(" Setting character sets on tables and fields")]),t._v(" "),s("p",[t._v("You can set a "),s("a",{attrs:{href:"http://dev.mysql.com/doc/refman/5.7/en/charset-general.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("character set"),s("OutboundLink")],1),t._v(" both per table, as well as per individual field using the "),s("code",[t._v("CHARACTER SET")]),t._v(" and "),s("code",[t._v("CHARSET")]),t._v(" statements:")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("AddressID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTEGER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("Street"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ASCII"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("City"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("Country"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"United States"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("Active"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BOOLEAN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Engine")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("charset")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("UTF8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("City")]),t._v(" and "),s("code",[t._v("Country")]),t._v(" will use "),s("code",[t._v("UTF8")]),t._v(", as we set that as the default character set for the table. "),s("code",[t._v("Street")]),t._v(" on the other hand will use "),s("code",[t._v("ASCII")]),t._v(", as we've specifically told it to do so.")]),t._v(" "),s("p",[t._v("Setting the right character set is highly dependent on your dataset, but can also highly improve portability between systems working with your data.")])])}),[],!1,null,null,null);a.default=n.exports}}]);