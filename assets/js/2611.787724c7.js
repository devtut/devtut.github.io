(window.webpackJsonp=window.webpackJsonp||[]).push([[2611],{3019:function(a,t,s){"use strict";s.r(t);var n=s(31),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"powershell-dynamic-parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#powershell-dynamic-parameters"}},[a._v("#")]),a._v(" PowerShell Dynamic Parameters")]),a._v(" "),s("h2",{attrs:{id:"simple-dynamic-parameter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simple-dynamic-parameter"}},[a._v("#")]),a._v(' "Simple" dynamic parameter')]),a._v(" "),s("p",[a._v("This example adds a new parameter to MyTestFunction if "),s("code",[a._v("$SomeUsefulNumber")]),a._v(" is greater than 5.")]),a._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" MyTestFunction\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("CmdletBinding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("DefaultParameterSetName="),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'DefaultConfiguration'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("Param")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("[Parameter(Mandatory=$true)]")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("[int]")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SomeUsefulNumber")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("DynamicParam")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$paramDictionary")]),a._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("New-Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Type")]),a._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Management"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Automation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("RuntimeDefinedParameterDictionary\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$attributes")]),a._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("New-Object")]),a._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Management"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Automation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ParameterAttribute\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$attributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ParameterSetName = "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"__AllParameterSets"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$attributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Mandatory = "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("$true")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$attributeCollection")]),a._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("New-Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Type")]),a._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Collections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ObjectModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Collection"),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("[System.Attribute]")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$attributeCollection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$attributes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# If "SomeUsefulNumber" is greater than 5, then add the "MandatoryParam1" parameter')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SomeUsefulNumber")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-gt")]),a._v(" 5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# Create a mandatory string parameter called "MandatoryParam1"')]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$dynParam1")]),a._v(" = "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("New-Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Type")]),a._v(" System"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Management"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Automation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("RuntimeDefinedParameter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MandatoryParam1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("[String]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$attributeCollection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("   \n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Add the new parameter to the dictionary")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$paramDictionary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MandatoryParam1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$dynParam1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$paramDictionary")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("process")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Write-Host")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"SomeUsefulNumber = '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SomeUsefulNumber")]),a._v('"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Notice that dynamic parameters need a specific syntax")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Write-Host")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MandatoryParam1 = {0}"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("f "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$PSBoundParameters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MandatoryParam1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("p",[a._v("Usage:")]),a._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("PS")]),a._v(" >  MyTestFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("SomeUsefulNumber 3\nSomeUsefulNumber = 3\nMandatoryParam1 =\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("PS")]),a._v(" >  MyTestFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("SomeUsefulNumber 6\ncmdlet MyTestFunction at command pipeline position 1\nSupply values "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" the following parameters:\nMandatoryParam1:\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("PS")]),a._v(" >MyTestFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("SomeUsefulNumber 6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("MandatoryParam1 test\nSomeUsefulNumber = 6\nMandatoryParam1 = test\n\n")])])]),s("p",[a._v("In the second usage example, you can clearly see that a parameter is missing."),s("br")]),a._v(" "),s("p",[a._v("Dynamic parameters are also taken into account with auto completion."),s("br"),a._v("\nHere's what happens if you hit ctrl + space at the end of the line:")]),a._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("PS")]),a._v(" >MyTestFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("SomeUsefulNumber 3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("<ctrl"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("space>\nVerbose              WarningAction        WarningVariable      OutBuffer\nDebug                InformationAction    InformationVariable  PipelineVariable\nErrorAction          ErrorVariable        OutVariable\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("PS")]),a._v(" >MyTestFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("SomeUsefulNumber 6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("<ctrl"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("space>\nMandatoryParam1      ErrorAction          ErrorVariable        OutVariable\nVerbose              WarningAction        WarningVariable      OutBuffer\nDebug                InformationAction    InformationVariable  PipelineVariable\n\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);