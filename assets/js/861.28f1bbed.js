(window.webpackJsonp=window.webpackJsonp||[]).push([[861],{1269:function(a,t,s){"use strict";s.r(t);var e=s(31),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"naming-conventions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#naming-conventions"}},[a._v("#")]),a._v(" Naming Conventions")]),a._v(" "),s("p",[a._v("This topic outlines some basic naming conventions used when writing in the C# language. Like all conventions, they are not enforced by the compiler, but will ensure readability between developers.")]),a._v(" "),s("p",[a._v("For comprehensive .NET framework design guidelines, see "),s("a",{attrs:{href:"https://docs.microsoft.com/dotnet/standard/design-guidelines/",target:"_blank",rel:"noopener noreferrer"}},[a._v("docs.microsoft.com/dotnet/standard/design-guidelines"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("h2",{attrs:{id:"capitalization-conventions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#capitalization-conventions"}},[a._v("#")]),a._v(" Capitalization conventions")]),a._v(" "),s("p",[a._v("The following terms describe different ways to case identifiers.")]),a._v(" "),s("h3",{attrs:{id:"pascal-casing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pascal-casing"}},[a._v("#")]),a._v(" Pascal Casing")]),a._v(" "),s("p",[a._v("The first letter in the identifier and the first letter of each subsequent concatenated word are capitalized. You can use Pascal case for identifiers of three or more characters. For example: "),s("code",[a._v("BackColor")])]),a._v(" "),s("h3",{attrs:{id:"camel-casing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#camel-casing"}},[a._v("#")]),a._v(" Camel Casing")]),a._v(" "),s("p",[a._v("The first letter of an identifier is lowercase and the first letter of each subsequent concatenated word is capitalized. For example: "),s("code",[a._v("backColor")])]),a._v(" "),s("h3",{attrs:{id:"uppercase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uppercase"}},[a._v("#")]),a._v(" Uppercase")]),a._v(" "),s("p",[a._v("All letters in the identifier are capitalized. For example: "),s("code",[a._v("IO")])]),a._v(" "),s("h3",{attrs:{id:"rules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rules"}},[a._v("#")]),a._v(" Rules")]),a._v(" "),s("p",[a._v('When an identifier consists of multiple words, do not use separators, such as underscores ("_") or hyphens ("-"), between words. Instead, use casing to indicate the beginning of each word.')]),a._v(" "),s("p",[a._v("The following table summarizes the capitalization rules for identifiers and provides examples for the different types of identifiers:")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("Identifier")]),a._v(" "),s("th",[a._v("Case")]),a._v(" "),s("th",[a._v("Example")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("Local variable")]),a._v(" "),s("td",[a._v("Camel")]),a._v(" "),s("td",[a._v("carName")])]),a._v(" "),s("tr",[s("td",[a._v("Class")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("AppDomain")])]),a._v(" "),s("tr",[s("td",[a._v("Enumeration type")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("ErrorLevel")])]),a._v(" "),s("tr",[s("td",[a._v("Enumeration values")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("FatalError")])]),a._v(" "),s("tr",[s("td",[a._v("Event")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("ValueChanged")])]),a._v(" "),s("tr",[s("td",[a._v("Exception class")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("WebException")])]),a._v(" "),s("tr",[s("td",[a._v("Read-only static field")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("RedValue")])]),a._v(" "),s("tr",[s("td",[a._v("Interface")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("IDisposable")])]),a._v(" "),s("tr",[s("td",[a._v("Method")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("ToString")])]),a._v(" "),s("tr",[s("td",[a._v("Namespace")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("System.Drawing")])]),a._v(" "),s("tr",[s("td",[a._v("Parameter")]),a._v(" "),s("td",[a._v("Camel")]),a._v(" "),s("td",[a._v("typeName")])]),a._v(" "),s("tr",[s("td",[a._v("Property")]),a._v(" "),s("td",[a._v("Pascal")]),a._v(" "),s("td",[a._v("BackColor")])])])]),a._v(" "),s("p",[a._v("More information can be found on "),s("a",{attrs:{href:"https://msdn.microsoft.com/library/ms229043(v=vs.110).aspx",target:"_blank",rel:"noopener noreferrer"}},[a._v("MSDN"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("h2",{attrs:{id:"enums"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enums"}},[a._v("#")]),a._v(" Enums")]),a._v(" "),s("h3",{attrs:{id:"use-a-singular-name-for-most-enums"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-a-singular-name-for-most-enums"}},[a._v("#")]),a._v(" Use a singular name for most Enums")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Volume")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   Low"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n   Medium"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n   High\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("h3",{attrs:{id:"use-a-plural-name-for-enum-types-that-are-bit-fields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-a-plural-name-for-enum-types-that-are-bit-fields"}},[a._v("#")]),a._v(" Use a plural name for Enum types that are bit fields")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Flags")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyColors")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    Yellow "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    Green "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    Red "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    Blue "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("p",[s("strong",[a._v("Note: Always add the "),s("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/system.flagsattribute(v=vs.110).aspx",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("FlagsAttribute")]),s("OutboundLink")],1),a._v(" to a bit field Enum type.")])]),a._v(" "),s("h3",{attrs:{id:"do-not-add-enum-as-a-suffix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do-not-add-enum-as-a-suffix"}},[a._v("#")]),a._v(" Do "),s("strong",[a._v("not")]),a._v(" add 'enum' as a suffix")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("VolumeEnum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Incorrect")]),a._v("\n\n")])])]),s("h3",{attrs:{id:"do-not-use-the-enum-name-in-each-entry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do-not-use-the-enum-name-in-each-entry"}},[a._v("#")]),a._v(" Do "),s("strong",[a._v("not")]),a._v(" use the enum name in each entry")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Color")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    ColorBlue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Remove Color, unnecessary")]),a._v("\n    ColorGreen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("h2",{attrs:{id:"interfaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interfaces"}},[a._v("#")]),a._v(" Interfaces")]),a._v(" "),s("p",[a._v("Interfaces should be named with nouns or noun phrases, or adjectives that describe behaviour. For example "),s("code",[a._v("IComponent")]),a._v(" uses a descriptive noun, "),s("code",[a._v("ICustomAttributeProvider")]),a._v(" uses a noun phrase and "),s("code",[a._v("IPersistable")]),a._v(" uses an adjective.")]),a._v(" "),s("p",[a._v("Interface names should be prefixed with the letter "),s("code",[a._v("I")]),a._v(", to indicate that the type is an interface, and Pascal case should be used.")]),a._v(" "),s("p",[a._v("Below are correctly named interfaces:")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IServiceProvider")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IFormatable")]),a._v("\n\n")])])]),s("h2",{attrs:{id:"exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exceptions"}},[a._v("#")]),a._v(" Exceptions")]),a._v(" "),s("h3",{attrs:{id:"add-exception-as-a-suffix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-exception-as-a-suffix"}},[a._v("#")]),a._v(" Add 'exception' as a suffix")]),a._v(" "),s("p",[a._v('Custom exception names should be suffixed with "-Exception".')]),a._v(" "),s("p",[a._v("Below are correctly named exceptions:")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyCustomException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Exception\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FooException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token type-list"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")])]),a._v("\n\n")])])]),s("h2",{attrs:{id:"private-fields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#private-fields"}},[a._v("#")]),a._v(" Private fields")]),a._v(" "),s("p",[a._v("There are two common conventions for private fields: "),s("code",[a._v("camelCase")]),a._v(" and "),s("code",[a._v("_camelCaseWithLeadingUnderscore")]),a._v(".")]),a._v(" "),s("h3",{attrs:{id:"camel-case"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#camel-case"}},[a._v("#")]),a._v(" Camel case")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Rational")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("readonly")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" numerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("readonly")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" denominator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Rational")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" numerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" denominator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// "this" keyword is required to refer to the class-scope field')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("numerator "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" numerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("denominator "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" denominator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("h3",{attrs:{id:"camel-case-with-underscore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#camel-case-with-underscore"}},[a._v("#")]),a._v(" Camel case with underscore")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Rational")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("readonly")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" _numerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("readonly")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" _denominator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Rational")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" numerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")])]),a._v(" denominator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// Names are unique, so "this" keyword is not required')]),a._v("\n        _numerator "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" numerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        _denominator "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" denominator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("h2",{attrs:{id:"namespaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#namespaces"}},[a._v("#")]),a._v(" Namespaces")]),a._v(" "),s("p",[a._v("The general format for namespaces is:")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("Company"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("Product"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("Technology"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("Feature"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("Subnamespace"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n\n")])])]),s("p",[a._v("Examples include:")]),a._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[a._v("Fabrikam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Math\nLitware"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Security\n\n")])])]),s("p",[a._v("Prefixing namespace names with a company name prevents namespaces from different companies from having the same name.")]),a._v(" "),s("h4",{attrs:{id:"remarks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remarks"}},[a._v("#")]),a._v(" Remarks")]),a._v(" "),s("h3",{attrs:{id:"choose-easily-readable-identifier-names"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#choose-easily-readable-identifier-names"}},[a._v("#")]),a._v(" Choose easily readable identifier names")]),a._v(" "),s("p",[a._v("For example, a property named HorizontalAlignment is more readable in English than AlignmentHorizontal.")]),a._v(" "),s("h3",{attrs:{id:"favor-readability-over-brevity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#favor-readability-over-brevity"}},[a._v("#")]),a._v(" Favor readability over brevity")]),a._v(" "),s("p",[a._v("The property name "),s("code",[a._v("CanScrollHorizontally")]),a._v(" is better than "),s("code",[a._v("ScrollableX")]),a._v(" (an obscure reference to the X-axis).")]),a._v(" "),s("p",[a._v("Avoid using underscores, hyphens, or any other non-alphanumeric characters.")]),a._v(" "),s("h3",{attrs:{id:"do-not-use-hungarian-notation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do-not-use-hungarian-notation"}},[a._v("#")]),a._v(" Do "),s("strong",[a._v("not")]),a._v(" use Hungarian notation")]),a._v(" "),s("p",[a._v("Hungarian notation is the practice of including a prefix in identifiers to encode some metadata about the parameter, such as the data type of the identifier, e.g. "),s("code",[a._v("string strName")]),a._v(".")]),a._v(" "),s("p",[a._v("Also, avoid using identifiers that conflict with keywords already used within C#.")]),a._v(" "),s("h3",{attrs:{id:"abbreviations-and-acronyms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abbreviations-and-acronyms"}},[a._v("#")]),a._v(" Abbreviations and acronyms")]),a._v(" "),s("p",[a._v("In general, you should not use abbreviations or acronyms; these make your names less readable. Similarly, it is difficult to know when it is safe to assume that an acronym is widely recognized.")])])}),[],!1,null,null,null);t.default=n.exports}}]);